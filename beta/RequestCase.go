// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// CaseRequestBuilder is request builder for Case
type CaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns CaseRequest
func (b *CaseRequestBuilder) Request() *CaseRequest {
	return &CaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CaseRequest is request for Case
type CaseRequest struct{ BaseRequest }

// Get performs GET request for Case
func (r *CaseRequest) Get(ctx context.Context) (resObj *Case, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Case
func (r *CaseRequest) Update(ctx context.Context, reqObj *Case) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Case
func (r *CaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CaseExportOperationRequestBuilder is request builder for CaseExportOperation
type CaseExportOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns CaseExportOperationRequest
func (b *CaseExportOperationRequestBuilder) Request() *CaseExportOperationRequest {
	return &CaseExportOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CaseExportOperationRequest is request for CaseExportOperation
type CaseExportOperationRequest struct{ BaseRequest }

// Get performs GET request for CaseExportOperation
func (r *CaseExportOperationRequest) Get(ctx context.Context) (resObj *CaseExportOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CaseExportOperation
func (r *CaseExportOperationRequest) Update(ctx context.Context, reqObj *CaseExportOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CaseExportOperation
func (r *CaseExportOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CaseIndexOperationRequestBuilder is request builder for CaseIndexOperation
type CaseIndexOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns CaseIndexOperationRequest
func (b *CaseIndexOperationRequestBuilder) Request() *CaseIndexOperationRequest {
	return &CaseIndexOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CaseIndexOperationRequest is request for CaseIndexOperation
type CaseIndexOperationRequest struct{ BaseRequest }

// Get performs GET request for CaseIndexOperation
func (r *CaseIndexOperationRequest) Get(ctx context.Context) (resObj *CaseIndexOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CaseIndexOperation
func (r *CaseIndexOperationRequest) Update(ctx context.Context, reqObj *CaseIndexOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CaseIndexOperation
func (r *CaseIndexOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CaseOperationRequestBuilder is request builder for CaseOperation
type CaseOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns CaseOperationRequest
func (b *CaseOperationRequestBuilder) Request() *CaseOperationRequest {
	return &CaseOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CaseOperationRequest is request for CaseOperation
type CaseOperationRequest struct{ BaseRequest }

// Get performs GET request for CaseOperation
func (r *CaseOperationRequest) Get(ctx context.Context) (resObj *CaseOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CaseOperation
func (r *CaseOperationRequest) Update(ctx context.Context, reqObj *CaseOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CaseOperation
func (r *CaseOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
