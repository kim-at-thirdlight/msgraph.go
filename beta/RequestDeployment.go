// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// DeploymentRequestBuilder is request builder for Deployment
type DeploymentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeploymentRequest
func (b *DeploymentRequestBuilder) Request() *DeploymentRequest {
	return &DeploymentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeploymentRequest is request for Deployment
type DeploymentRequest struct{ BaseRequest }

// Get performs GET request for Deployment
func (r *DeploymentRequest) Get(ctx context.Context) (resObj *Deployment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Deployment
func (r *DeploymentRequest) Update(ctx context.Context, reqObj *Deployment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Deployment
func (r *DeploymentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeploymentAudienceRequestBuilder is request builder for DeploymentAudience
type DeploymentAudienceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeploymentAudienceRequest
func (b *DeploymentAudienceRequestBuilder) Request() *DeploymentAudienceRequest {
	return &DeploymentAudienceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeploymentAudienceRequest is request for DeploymentAudience
type DeploymentAudienceRequest struct{ BaseRequest }

// Get performs GET request for DeploymentAudience
func (r *DeploymentAudienceRequest) Get(ctx context.Context) (resObj *DeploymentAudience, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeploymentAudience
func (r *DeploymentAudienceRequest) Update(ctx context.Context, reqObj *DeploymentAudience) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeploymentAudience
func (r *DeploymentAudienceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
