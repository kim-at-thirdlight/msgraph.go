// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// AppleAppListItem Represents an app in the list of managed Apple applications
type AppleAppListItem struct {
	// AppListItem is the base model of AppleAppListItem
	AppListItem
}

// AppleDeviceFeaturesConfigurationBase Apple device features configuration profile.
type AppleDeviceFeaturesConfigurationBase struct {
	// DeviceConfiguration is the base model of AppleDeviceFeaturesConfigurationBase
	DeviceConfiguration
	// AirPrintDestinations An array of AirPrint printers that should always be shown. This collection can contain a maximum of 500 elements.
	AirPrintDestinations []AirPrintDestination `json:"airPrintDestinations,omitempty"`
}

// AppleEnrollmentProfileAssignment An assignment of an Apple profile.
type AppleEnrollmentProfileAssignment struct {
	// Entity is the base model of AppleEnrollmentProfileAssignment
	Entity
	// Target The assignment target for the Apple user initiated deployment profile.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// AppleExpeditedCheckinConfigurationBase Experimental profile to increase the rate of device check-ins per day of iOS/macOS devices.
type AppleExpeditedCheckinConfigurationBase struct {
	// DeviceConfiguration is the base model of AppleExpeditedCheckinConfigurationBase
	DeviceConfiguration
	// EnableExpeditedCheckin Gets or sets whether to enable expedited device check-ins.
	EnableExpeditedCheckin *bool `json:"enableExpeditedCheckin,omitempty"`
}

// AppleOwnerTypeEnrollmentType undocumented
type AppleOwnerTypeEnrollmentType struct {
	// Object is the base model of AppleOwnerTypeEnrollmentType
	Object
	// EnrollmentType The enrollment type.
	EnrollmentType *AppleUserInitiatedEnrollmentType `json:"enrollmentType,omitempty"`
	// OwnerType The owner type.
	OwnerType *ManagedDeviceOwnerType `json:"ownerType,omitempty"`
}

// ApplePushNotificationCertificate Apple push notification certificate.
type ApplePushNotificationCertificate struct {
	// Entity is the base model of ApplePushNotificationCertificate
	Entity
	// AppleIdentifier Apple Id of the account used to create the MDM push certificate.
	AppleIdentifier *string `json:"appleIdentifier,omitempty"`
	// Certificate undocumented
	Certificate *string `json:"certificate,omitempty"`
	// CertificateSerialNumber Certificate serial number. This property is read-only.
	CertificateSerialNumber *string `json:"certificateSerialNumber,omitempty"`
	// CertificateUploadFailureReason The reason the certificate upload failed.
	CertificateUploadFailureReason *string `json:"certificateUploadFailureReason,omitempty"`
	// CertificateUploadStatus The certificate upload status.
	CertificateUploadStatus *string `json:"certificateUploadStatus,omitempty"`
	// ExpirationDateTime The expiration date and time for Apple push notification certificate.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// LastModifiedDateTime Last modified date and time for Apple push notification certificate.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// TopicIdentifier Topic Id.
	TopicIdentifier *string `json:"topicIdentifier,omitempty"`
}

// AppleUserInitiatedEnrollmentProfile The enrollmentProfile resource represents a collection of configurations which must be provided pre-enrollment to enable enrolling certain devices whose identities have been pre-staged. Pre-staged device identities are assigned to this type of profile to apply the profile's configurations at enrollment of the corresponding device.
type AppleUserInitiatedEnrollmentProfile struct {
	// Entity is the base model of AppleUserInitiatedEnrollmentProfile
	Entity
	// AvailableEnrollmentTypeOptions List of available enrollment type options
	AvailableEnrollmentTypeOptions []AppleOwnerTypeEnrollmentType `json:"availableEnrollmentTypeOptions,omitempty"`
	// CreatedDateTime Profile creation time
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// DefaultEnrollmentType The default profile enrollment type.
	DefaultEnrollmentType *AppleUserInitiatedEnrollmentType `json:"defaultEnrollmentType,omitempty"`
	// Description Description of the profile
	Description *string `json:"description,omitempty"`
	// DisplayName Name of the profile
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime Profile last modified time
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Platform The platform of the Device.
	Platform *DevicePlatformType `json:"platform,omitempty"`
	// Priority Priority, 0 is highest
	Priority *int `json:"priority,omitempty"`
	// Assignments undocumented
	Assignments []AppleEnrollmentProfileAssignment `json:"assignments,omitempty"`
}

// AppleVPNAlwaysOnConfiguration Always On VPN configuration for MacOS and iOS IKEv2
type AppleVPNAlwaysOnConfiguration struct {
	// Object is the base model of AppleVPNAlwaysOnConfiguration
	Object
	// AirPrintExceptionAction Determine whether AirPrint service will be exempt from the always-on VPN connection
	AirPrintExceptionAction *VPNServiceExceptionAction `json:"airPrintExceptionAction,omitempty"`
	// AllowAllCaptiveNetworkPlugins Specifies whether traffic from all captive network plugins should be allowed outside the vpn
	AllowAllCaptiveNetworkPlugins *bool `json:"allowAllCaptiveNetworkPlugins,omitempty"`
	// AllowCaptiveWebSheet Determines whether traffic from the Websheet app is allowed outside of the VPN
	AllowCaptiveWebSheet *bool `json:"allowCaptiveWebSheet,omitempty"`
	// AllowedCaptiveNetworkPlugins Determines whether all, some, or no non-native captive networking apps are allowed
	AllowedCaptiveNetworkPlugins *SpecifiedCaptiveNetworkPlugins `json:"allowedCaptiveNetworkPlugins,omitempty"`
	// CellularExceptionAction Determine whether Cellular service will be exempt from the always-on VPN connection
	CellularExceptionAction *VPNServiceExceptionAction `json:"cellularExceptionAction,omitempty"`
	// NatKeepAliveIntervalInSeconds Specifies how often in seconds to send a network address translation keepalive package through the VPN
	NatKeepAliveIntervalInSeconds *int `json:"natKeepAliveIntervalInSeconds,omitempty"`
	// NatKeepAliveOffloadEnable Enable hardware offloading of NAT keepalive signals when the device is asleep
	NatKeepAliveOffloadEnable *bool `json:"natKeepAliveOffloadEnable,omitempty"`
	// TunnelConfiguration Determines what connections the specific tunnel configuration applies to
	TunnelConfiguration *VPNTunnelConfigurationType `json:"tunnelConfiguration,omitempty"`
	// UserToggleEnabled Allow the user to toggle the VPN configuration using the UI
	UserToggleEnabled *bool `json:"userToggleEnabled,omitempty"`
	// VoicemailExceptionAction Determine whether voicemail service will be exempt from the always-on VPN connection
	VoicemailExceptionAction *VPNServiceExceptionAction `json:"voicemailExceptionAction,omitempty"`
}

// AppleVPNConfiguration Apple VPN configuration profile.
type AppleVPNConfiguration struct {
	// DeviceConfiguration is the base model of AppleVPNConfiguration
	DeviceConfiguration
	// AssociatedDomains Associated Domains
	AssociatedDomains []string `json:"associatedDomains,omitempty"`
	// AuthenticationMethod Authentication method for this VPN connection.
	AuthenticationMethod *VPNAuthenticationMethod `json:"authenticationMethod,omitempty"`
	// ConnectionName Connection name displayed to the user.
	ConnectionName *string `json:"connectionName,omitempty"`
	// ConnectionType Connection type.
	ConnectionType *AppleVPNConnectionType `json:"connectionType,omitempty"`
	// CustomData Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements.
	CustomData []KeyValue `json:"customData,omitempty"`
	// CustomKeyValueData Custom data when connection type is set to Custom VPN. Use this field to enable functionality not supported by Intune, but available in your VPN solution. Contact your VPN vendor to learn how to add these key/value pairs. This collection can contain a maximum of 25 elements.
	CustomKeyValueData []KeyValuePair `json:"customKeyValueData,omitempty"`
	// DisableOnDemandUserOverride Toggle to prevent user from disabling automatic VPN in the Settings app
	DisableOnDemandUserOverride *bool `json:"disableOnDemandUserOverride,omitempty"`
	// DisconnectOnIdle Whether to disconnect after on-demand connection idles
	DisconnectOnIdle *bool `json:"disconnectOnIdle,omitempty"`
	// DisconnectOnIdleTimerInSeconds The length of time in seconds to wait before disconnecting an on-demand connection. Valid values 0 to 65535
	DisconnectOnIdleTimerInSeconds *int `json:"disconnectOnIdleTimerInSeconds,omitempty"`
	// EnablePerApp Setting this to true creates Per-App VPN payload which can later be associated with Apps that can trigger this VPN conneciton on the end user's iOS device.
	EnablePerApp *bool `json:"enablePerApp,omitempty"`
	// EnableSplitTunneling Send all network traffic through VPN.
	EnableSplitTunneling *bool `json:"enableSplitTunneling,omitempty"`
	// ExcludedDomains Domains that are accessed through the public internet instead of through VPN, even when per-app VPN is activated
	ExcludedDomains []string `json:"excludedDomains,omitempty"`
	// Identifier Identifier provided by VPN vendor when connection type is set to Custom VPN. For example: Cisco AnyConnect uses an identifier of the form com.cisco.anyconnect.applevpn.plugin
	Identifier *string `json:"identifier,omitempty"`
	// LoginGroupOrDomain Login group or domain when connection type is set to Dell SonicWALL Mobile Connection.
	LoginGroupOrDomain *string `json:"loginGroupOrDomain,omitempty"`
	// OnDemandRules On-Demand Rules. This collection can contain a maximum of 500 elements.
	OnDemandRules []VPNOnDemandRule `json:"onDemandRules,omitempty"`
	// OptInToDeviceIDSharing Opt-In to sharing the device's Id to third-party vpn clients for use during network access control validation.
	OptInToDeviceIDSharing *bool `json:"optInToDeviceIdSharing,omitempty"`
	// ProviderType Provider type for per-app VPN.
	ProviderType *VPNProviderType `json:"providerType,omitempty"`
	// ProxyServer Proxy Server.
	ProxyServer *VPNProxyServer `json:"proxyServer,omitempty"`
	// Realm Realm when connection type is set to Pulse Secure.
	Realm *string `json:"realm,omitempty"`
	// Role Role when connection type is set to Pulse Secure.
	Role *string `json:"role,omitempty"`
	// SafariDomains Safari domains when this VPN per App setting is enabled. In addition to the apps associated with this VPN, Safari domains specified here will also be able to trigger this VPN connection.
	SafariDomains []string `json:"safariDomains,omitempty"`
	// Server VPN Server on the network. Make sure end users can access this network location.
	Server *VPNServer `json:"server,omitempty"`
}

// AppleVPPTokenTroubleshootingEvent Event representing an Apple Vpp Token Troubleshooting Event.
type AppleVPPTokenTroubleshootingEvent struct {
	// DeviceManagementTroubleshootingEvent is the base model of AppleVPPTokenTroubleshootingEvent
	DeviceManagementTroubleshootingEvent
	// TokenID Apple Volume Purchase Program Token Identifier.
	TokenID *string `json:"tokenId,omitempty"`
}
