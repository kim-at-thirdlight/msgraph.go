// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ReviewSetRequestBuilder is request builder for ReviewSet
type ReviewSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns ReviewSetRequest
func (b *ReviewSetRequestBuilder) Request() *ReviewSetRequest {
	return &ReviewSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ReviewSetRequest is request for ReviewSet
type ReviewSetRequest struct{ BaseRequest }

// Get performs GET request for ReviewSet
func (r *ReviewSetRequest) Get(ctx context.Context) (resObj *ReviewSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ReviewSet
func (r *ReviewSetRequest) Update(ctx context.Context, reqObj *ReviewSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ReviewSet
func (r *ReviewSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ReviewSetQueryRequestBuilder is request builder for ReviewSetQuery
type ReviewSetQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ReviewSetQueryRequest
func (b *ReviewSetQueryRequestBuilder) Request() *ReviewSetQueryRequest {
	return &ReviewSetQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ReviewSetQueryRequest is request for ReviewSetQuery
type ReviewSetQueryRequest struct{ BaseRequest }

// Get performs GET request for ReviewSetQuery
func (r *ReviewSetQueryRequest) Get(ctx context.Context) (resObj *ReviewSetQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ReviewSetQuery
func (r *ReviewSetQueryRequest) Update(ctx context.Context, reqObj *ReviewSetQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ReviewSetQuery
func (r *ReviewSetQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
