// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// VPPLicensingType Contains properties for iOS Volume-Purchased Program (Vpp) Licensing Type.
type VPPLicensingType struct {
	// Object is the base model of VPPLicensingType
	Object
	// SupportDeviceLicensing Whether the program supports the device licensing type.
	SupportDeviceLicensing *bool `json:"supportDeviceLicensing,omitempty"`
	// SupportsDeviceLicensing Whether the program supports the device licensing type.
	SupportsDeviceLicensing *bool `json:"supportsDeviceLicensing,omitempty"`
	// SupportsUserLicensing Whether the program supports the user licensing type.
	SupportsUserLicensing *bool `json:"supportsUserLicensing,omitempty"`
	// SupportUserLicensing Whether the program supports the user licensing type.
	SupportUserLicensing *bool `json:"supportUserLicensing,omitempty"`
}

// VPPToken You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
type VPPToken struct {
	// Entity is the base model of VPPToken
	Entity
	// AppleID The apple Id associated with the given Apple Volume Purchase Program Token.
	AppleID *string `json:"appleId,omitempty"`
	// AutomaticallyUpdateApps Whether or not apps for the VPP token will be automatically updated.
	AutomaticallyUpdateApps *bool `json:"automaticallyUpdateApps,omitempty"`
	// ClaimTokenManagementFromExternalMDM Admin consent to allow claiming token management from external MDM.
	ClaimTokenManagementFromExternalMDM *bool `json:"claimTokenManagementFromExternalMdm,omitempty"`
	// CountryOrRegion Whether or not apps for the VPP token will be automatically updated.
	CountryOrRegion *string `json:"countryOrRegion,omitempty"`
	// DataSharingConsentGranted Consent granted for data sharing with the Apple Volume Purchase Program.
	DataSharingConsentGranted *bool `json:"dataSharingConsentGranted,omitempty"`
	// DisplayName An admin specified token friendly name.
	DisplayName *string `json:"displayName,omitempty"`
	// ExpirationDateTime The expiration date time of the Apple Volume Purchase Program Token.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// LastModifiedDateTime Last modification date time associated with the Apple Volume Purchase Program Token.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// LastSyncDateTime The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// LastSyncStatus Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`.
	LastSyncStatus *VPPTokenSyncStatus `json:"lastSyncStatus,omitempty"`
	// LocationName Token location returned from Apple VPP.
	LocationName *string `json:"locationName,omitempty"`
	// OrganizationName The organization associated with the Apple Volume Purchase Program Token
	OrganizationName *string `json:"organizationName,omitempty"`
	// RoleScopeTagIDs Role Scope Tags IDs assigned to this entity.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// State Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`, `assignedToExternalMDM`.
	State *VPPTokenState `json:"state,omitempty"`
	// Token The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
	Token *string `json:"token,omitempty"`
	// TokenActionResults The collection of statuses of the actions performed on the Apple Volume Purchase Program Token.
	TokenActionResults []VPPTokenActionResult `json:"tokenActionResults,omitempty"`
	// VPPTokenAccountType The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`.
	VPPTokenAccountType *VPPTokenAccountType `json:"vppTokenAccountType,omitempty"`
}

// VPPTokenActionResult The status of the action performed with an Apple Volume Purchase Program token.
type VPPTokenActionResult struct {
	// Object is the base model of VPPTokenActionResult
	Object
	// ActionName Action name
	ActionName *string `json:"actionName,omitempty"`
	// ActionState State of the action
	ActionState *ActionState `json:"actionState,omitempty"`
	// LastUpdatedDateTime Time the action state was last updated
	LastUpdatedDateTime *time.Time `json:"lastUpdatedDateTime,omitempty"`
	// StartDateTime Time the action was initiated
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
}

// VPPTokenLicenseSummary License summary of a given app in a token.
type VPPTokenLicenseSummary struct {
	// Object is the base model of VPPTokenLicenseSummary
	Object
	// AppleID The Apple Id associated with the given Apple Volume Purchase Program Token.
	AppleID *string `json:"appleId,omitempty"`
	// AvailableLicenseCount The number of VPP licenses available.
	AvailableLicenseCount *int `json:"availableLicenseCount,omitempty"`
	// OrganizationName The organization associated with the Apple Volume Purchase Program Token.
	OrganizationName *string `json:"organizationName,omitempty"`
	// UsedLicenseCount The number of VPP licenses in use.
	UsedLicenseCount *int `json:"usedLicenseCount,omitempty"`
	// VPPTokenID Identifier of the VPP token.
	VPPTokenID *string `json:"vppTokenId,omitempty"`
}

// VPPTokenRevokeLicensesActionResult The status of the revoke licenses action performed on the Apple Volume Purchase Program token.
type VPPTokenRevokeLicensesActionResult struct {
	// VPPTokenActionResult is the base model of VPPTokenRevokeLicensesActionResult
	VPPTokenActionResult
	// ActionFailureReason The reason for the revoke licenses action failure.
	ActionFailureReason *VPPTokenActionFailureReason `json:"actionFailureReason,omitempty"`
	// FailedLicensesCount A count of the number of licenses that failed to revoke.
	FailedLicensesCount *int `json:"failedLicensesCount,omitempty"`
	// TotalLicensesCount A count of the number of licenses that were attempted to revoke.
	TotalLicensesCount *int `json:"totalLicensesCount,omitempty"`
}
