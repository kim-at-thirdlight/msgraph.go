// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// Device undocumented
type Device struct {
	// DirectoryObject is the base model of Device
	DirectoryObject
	// AccountEnabled undocumented
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	// AlternativeSecurityIDs undocumented
	AlternativeSecurityIDs []AlternativeSecurityID `json:"alternativeSecurityIds,omitempty"`
	// ApproximateLastSignInDateTime undocumented
	ApproximateLastSignInDateTime *time.Time `json:"approximateLastSignInDateTime,omitempty"`
	// ComplianceExpirationDateTime undocumented
	ComplianceExpirationDateTime *time.Time `json:"complianceExpirationDateTime,omitempty"`
	// DeviceCategory undocumented
	DeviceCategory *string `json:"deviceCategory,omitempty"`
	// DeviceID undocumented
	DeviceID *string `json:"deviceId,omitempty"`
	// DeviceMetadata undocumented
	DeviceMetadata *string `json:"deviceMetadata,omitempty"`
	// DeviceOwnership undocumented
	DeviceOwnership *string `json:"deviceOwnership,omitempty"`
	// DeviceVersion undocumented
	DeviceVersion *int `json:"deviceVersion,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// DomainName undocumented
	DomainName *string `json:"domainName,omitempty"`
	// EnrollmentProfileName undocumented
	EnrollmentProfileName *string `json:"enrollmentProfileName,omitempty"`
	// EnrollmentType undocumented
	EnrollmentType *string `json:"enrollmentType,omitempty"`
	// ExtensionAttributes undocumented
	ExtensionAttributes *OnPremisesExtensionAttributes `json:"extensionAttributes,omitempty"`
	// Hostnames undocumented
	Hostnames []string `json:"hostnames,omitempty"`
	// IsCompliant undocumented
	IsCompliant *bool `json:"isCompliant,omitempty"`
	// IsManaged undocumented
	IsManaged *bool `json:"isManaged,omitempty"`
	// IsRooted undocumented
	IsRooted *bool `json:"isRooted,omitempty"`
	// ManagementType undocumented
	ManagementType *string `json:"managementType,omitempty"`
	// OnPremisesLastSyncDateTime undocumented
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	// OnPremisesSyncEnabled undocumented
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	// OperatingSystem undocumented
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// OperatingSystemVersion undocumented
	OperatingSystemVersion *string `json:"operatingSystemVersion,omitempty"`
	// PhysicalIDs undocumented
	PhysicalIDs []string `json:"physicalIds,omitempty"`
	// ProfileType undocumented
	ProfileType *string `json:"profileType,omitempty"`
	// RegistrationDateTime undocumented
	RegistrationDateTime *time.Time `json:"registrationDateTime,omitempty"`
	// SystemLabels undocumented
	SystemLabels []string `json:"systemLabels,omitempty"`
	// TrustType undocumented
	TrustType *string `json:"trustType,omitempty"`
	// Kind undocumented
	Kind *string `json:"kind,omitempty"`
	// Manufacturer undocumented
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Model undocumented
	Model *string `json:"model,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Platform undocumented
	Platform *string `json:"platform,omitempty"`
	// Status undocumented
	Status *string `json:"status,omitempty"`
	// UsageRights undocumented
	UsageRights []UsageRight `json:"usageRights,omitempty"`
	// MemberOf undocumented
	MemberOf []DirectoryObject `json:"memberOf,omitempty"`
	// RegisteredOwners undocumented
	RegisteredOwners []DirectoryObject `json:"registeredOwners,omitempty"`
	// RegisteredUsers undocumented
	RegisteredUsers []DirectoryObject `json:"registeredUsers,omitempty"`
	// TransitiveMemberOf undocumented
	TransitiveMemberOf []DirectoryObject `json:"transitiveMemberOf,omitempty"`
	// Extensions undocumented
	Extensions []Extension `json:"extensions,omitempty"`
	// Commands undocumented
	Commands []Command `json:"commands,omitempty"`
}

// DeviceActionResult Device action result
type DeviceActionResult struct {
	// Object is the base model of DeviceActionResult
	Object
	// ActionName Action name
	ActionName *string `json:"actionName,omitempty"`
	// ActionState State of the action
	ActionState *ActionState `json:"actionState,omitempty"`
	// LastUpdatedDateTime Time the action state was last updated
	LastUpdatedDateTime *time.Time `json:"lastUpdatedDateTime,omitempty"`
	// StartDateTime Time the action was initiated
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
}

// DeviceAndAppManagementAssignedRoleDetails The set of Role Definitions and Role Assignments assigned to a user.
type DeviceAndAppManagementAssignedRoleDetails struct {
	// Object is the base model of DeviceAndAppManagementAssignedRoleDetails
	Object
	// RoleAssignmentIDs Role Assignment IDs for the specifc Role Assignments assigned to a user.
	RoleAssignmentIDs []string `json:"roleAssignmentIds,omitempty"`
	// RoleDefinitionIDs Role Definition IDs for the specifc Role Definitions assigned to a user.
	RoleDefinitionIDs []string `json:"roleDefinitionIds,omitempty"`
}

// DeviceAndAppManagementAssignmentFilter A class containing the properties used for Assignment Filter.
type DeviceAndAppManagementAssignmentFilter struct {
	// Entity is the base model of DeviceAndAppManagementAssignmentFilter
	Entity
	// CreatedDateTime Creation time of the Assignment Filter.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Description of the Assignment Filter.
	Description *string `json:"description,omitempty"`
	// DisplayName DisplayName of the Assignment Filter.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime Last modified time of the Assignment Filter.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Platform Platform type of the devices on which the Assignment Filter will be applicable.
	Platform *DevicePlatformType `json:"platform,omitempty"`
	// RoleScopeTags RoleScopeTags of the Assignment Filter.
	RoleScopeTags []string `json:"roleScopeTags,omitempty"`
	// Rule Rule definition of the Assignment Filter.
	Rule *string `json:"rule,omitempty"`
}

// DeviceAndAppManagementAssignmentTarget Base type for assignment targets.
type DeviceAndAppManagementAssignmentTarget struct {
	// Object is the base model of DeviceAndAppManagementAssignmentTarget
	Object
	// DeviceAndAppManagementAssignmentFilterID The Id of the filter for the target assignment.
	DeviceAndAppManagementAssignmentFilterID *string `json:"deviceAndAppManagementAssignmentFilterId,omitempty"`
	// DeviceAndAppManagementAssignmentFilterType The type of filter of the target assignment i.e. Exclude or Include.
	DeviceAndAppManagementAssignmentFilterType *DeviceAndAppManagementAssignmentFilterType `json:"deviceAndAppManagementAssignmentFilterType,omitempty"`
}

// DeviceAndAppManagementData Exported Data
type DeviceAndAppManagementData struct {
	// Object is the base model of DeviceAndAppManagementData
	Object
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
}

// DeviceAndAppManagementRoleAssignment The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.
type DeviceAndAppManagementRoleAssignment struct {
	// RoleAssignment is the base model of DeviceAndAppManagementRoleAssignment
	RoleAssignment
	// Members The list of ids of role member security groups. These are IDs from Azure Active Directory.
	Members []string `json:"members,omitempty"`
	// RoleScopeTags undocumented
	RoleScopeTags []RoleScopeTag `json:"roleScopeTags,omitempty"`
}

// DeviceAndAppManagementRoleDefinition The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role.
type DeviceAndAppManagementRoleDefinition struct {
	// RoleDefinition is the base model of DeviceAndAppManagementRoleDefinition
	RoleDefinition
}

// DeviceAppManagement Singleton entity that acts as a container for all device and app management functionality.
type DeviceAppManagement struct {
	// Entity is the base model of DeviceAppManagement
	Entity
	// IsEnabledForMicrosoftStoreForBusiness Whether the account is enabled for syncing applications from the Microsoft Store for Business.
	IsEnabledForMicrosoftStoreForBusiness *bool `json:"isEnabledForMicrosoftStoreForBusiness,omitempty"`
	// MicrosoftStoreForBusinessLanguage The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is <languagecode2>-<country/regioncode2>, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.
	MicrosoftStoreForBusinessLanguage *string `json:"microsoftStoreForBusinessLanguage,omitempty"`
	// MicrosoftStoreForBusinessLastCompletedApplicationSyncTime The last time an application sync from the Microsoft Store for Business was completed.
	MicrosoftStoreForBusinessLastCompletedApplicationSyncTime *time.Time `json:"microsoftStoreForBusinessLastCompletedApplicationSyncTime,omitempty"`
	// MicrosoftStoreForBusinessLastSuccessfulSyncDateTime The last time the apps from the Microsoft Store for Business were synced successfully for the account.
	MicrosoftStoreForBusinessLastSuccessfulSyncDateTime *time.Time `json:"microsoftStoreForBusinessLastSuccessfulSyncDateTime,omitempty"`
	// MicrosoftStoreForBusinessPortalSelection The end user portal information is used to sync applications from the Microsoft Store for Business to Intune Company Portal. There are three options to pick from ['Company portal only', 'Company portal and private store', 'Private store only']
	MicrosoftStoreForBusinessPortalSelection *MicrosoftStoreForBusinessPortalSelectionOptions `json:"microsoftStoreForBusinessPortalSelection,omitempty"`
	// ManagedEBookCategories undocumented
	ManagedEBookCategories []ManagedEBookCategory `json:"managedEBookCategories,omitempty"`
	// EnterpriseCodeSigningCertificates undocumented
	EnterpriseCodeSigningCertificates []EnterpriseCodeSigningCertificate `json:"enterpriseCodeSigningCertificates,omitempty"`
	// IOSLobAppProvisioningConfigurations undocumented
	IOSLobAppProvisioningConfigurations []IOSLobAppProvisioningConfiguration `json:"iosLobAppProvisioningConfigurations,omitempty"`
	// MobileAppCategories undocumented
	MobileAppCategories []MobileAppCategory `json:"mobileAppCategories,omitempty"`
	// MobileAppConfigurations undocumented
	MobileAppConfigurations []ManagedDeviceMobileAppConfiguration `json:"mobileAppConfigurations,omitempty"`
	// MobileApps undocumented
	MobileApps []MobileApp `json:"mobileApps,omitempty"`
	// SymantecCodeSigningCertificate undocumented
	SymantecCodeSigningCertificate *SymantecCodeSigningCertificate `json:"symantecCodeSigningCertificate,omitempty"`
	// ManagedEBooks undocumented
	ManagedEBooks []ManagedEBook `json:"managedEBooks,omitempty"`
	// PolicySets undocumented
	PolicySets []PolicySet `json:"policySets,omitempty"`
	// SideLoadingKeys undocumented
	SideLoadingKeys []SideLoadingKey `json:"sideLoadingKeys,omitempty"`
	// VPPTokens undocumented
	VPPTokens []VPPToken `json:"vppTokens,omitempty"`
	// WindowsManagementApp undocumented
	WindowsManagementApp *WindowsManagementApp `json:"windowsManagementApp,omitempty"`
	// AndroidManagedAppProtections undocumented
	AndroidManagedAppProtections []AndroidManagedAppProtection `json:"androidManagedAppProtections,omitempty"`
	// DefaultManagedAppProtections undocumented
	DefaultManagedAppProtections []DefaultManagedAppProtection `json:"defaultManagedAppProtections,omitempty"`
	// IOSManagedAppProtections undocumented
	IOSManagedAppProtections []IOSManagedAppProtection `json:"iosManagedAppProtections,omitempty"`
	// ManagedAppPolicies undocumented
	ManagedAppPolicies []ManagedAppPolicy `json:"managedAppPolicies,omitempty"`
	// ManagedAppRegistrations undocumented
	ManagedAppRegistrations []ManagedAppRegistration `json:"managedAppRegistrations,omitempty"`
	// ManagedAppStatuses undocumented
	ManagedAppStatuses []ManagedAppStatus `json:"managedAppStatuses,omitempty"`
	// MDMWindowsInformationProtectionPolicies undocumented
	MDMWindowsInformationProtectionPolicies []MDMWindowsInformationProtectionPolicy `json:"mdmWindowsInformationProtectionPolicies,omitempty"`
	// TargetedManagedAppConfigurations undocumented
	TargetedManagedAppConfigurations []TargetedManagedAppConfiguration `json:"targetedManagedAppConfigurations,omitempty"`
	// WindowsInformationProtectionDeviceRegistrations undocumented
	WindowsInformationProtectionDeviceRegistrations []WindowsInformationProtectionDeviceRegistration `json:"windowsInformationProtectionDeviceRegistrations,omitempty"`
	// WindowsInformationProtectionPolicies undocumented
	WindowsInformationProtectionPolicies []WindowsInformationProtectionPolicy `json:"windowsInformationProtectionPolicies,omitempty"`
	// WindowsInformationProtectionWipeActions undocumented
	WindowsInformationProtectionWipeActions []WindowsInformationProtectionWipeAction `json:"windowsInformationProtectionWipeActions,omitempty"`
	// DeviceAppManagementTasks undocumented
	DeviceAppManagementTasks []DeviceAppManagementTask `json:"deviceAppManagementTasks,omitempty"`
	// WdacSupplementalPolicies undocumented
	WdacSupplementalPolicies []WindowsDefenderApplicationControlSupplementalPolicy `json:"wdacSupplementalPolicies,omitempty"`
}

// DeviceAppManagementTask A device app management task.
type DeviceAppManagementTask struct {
	// Entity is the base model of DeviceAppManagementTask
	Entity
	// AssignedTo The name or email of the admin this task is assigned to.
	AssignedTo *string `json:"assignedTo,omitempty"`
	// Category The category.
	Category *DeviceAppManagementTaskCategory `json:"category,omitempty"`
	// CreatedDateTime The created date.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Creator The email address of the creator.
	Creator *string `json:"creator,omitempty"`
	// CreatorNotes Notes from the creator.
	CreatorNotes *string `json:"creatorNotes,omitempty"`
	// Description The description.
	Description *string `json:"description,omitempty"`
	// DisplayName The name.
	DisplayName *string `json:"displayName,omitempty"`
	// DueDateTime The due date.
	DueDateTime *time.Time `json:"dueDateTime,omitempty"`
	// Priority The priority.
	Priority *DeviceAppManagementTaskPriority `json:"priority,omitempty"`
	// Status The status.
	Status *DeviceAppManagementTaskStatus `json:"status,omitempty"`
}

// DeviceCategory Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
type DeviceCategory struct {
	// Entity is the base model of DeviceCategory
	Entity
	// Description Optional description for the device category.
	Description *string `json:"description,omitempty"`
	// DisplayName Display name for the device category.
	DisplayName *string `json:"displayName,omitempty"`
	// RoleScopeTagIDs Optional role scope tags for the device category.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
}

// DeviceComanagementAuthorityConfiguration Windows 10 Co-Management Authority Page Configuration
type DeviceComanagementAuthorityConfiguration struct {
	// DeviceEnrollmentConfiguration is the base model of DeviceComanagementAuthorityConfiguration
	DeviceEnrollmentConfiguration
	// ConfigurationManagerAgentCommandLineArgument CoManagement Authority configuration ConfigurationManagerAgentCommandLineArgument
	ConfigurationManagerAgentCommandLineArgument *string `json:"configurationManagerAgentCommandLineArgument,omitempty"`
	// InstallConfigurationManagerAgent CoManagement Authority configuration InstallConfigurationManagerAgent
	InstallConfigurationManagerAgent *bool `json:"installConfigurationManagerAgent,omitempty"`
	// ManagedDeviceAuthority CoManagement Authority configuration ManagedDeviceAuthority
	ManagedDeviceAuthority *int `json:"managedDeviceAuthority,omitempty"`
}

// DeviceComplianceActionItem Scheduled Action Configuration
type DeviceComplianceActionItem struct {
	// Entity is the base model of DeviceComplianceActionItem
	Entity
	// ActionType What action to take
	ActionType *DeviceComplianceActionType `json:"actionType,omitempty"`
	// GracePeriodHours Number of hours to wait till the action will be enforced. Valid values 0 to 8760
	GracePeriodHours *int `json:"gracePeriodHours,omitempty"`
	// NotificationMessageCCList A list of group IDs to speicify who to CC this notification message to.
	NotificationMessageCCList []string `json:"notificationMessageCCList,omitempty"`
	// NotificationTemplateID What notification Message template to use
	NotificationTemplateID *string `json:"notificationTemplateId,omitempty"`
}

// DeviceComplianceDeviceOverview undocumented
type DeviceComplianceDeviceOverview struct {
	// Entity is the base model of DeviceComplianceDeviceOverview
	Entity
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
	// ConflictCount Number of devices in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// NotApplicablePlatformCount Number of not applicable devices due to mismatch platform and policy
	NotApplicablePlatformCount *int `json:"notApplicablePlatformCount,omitempty"`
	// PendingCount Number of pending devices
	PendingCount *int `json:"pendingCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceComplianceDeviceStatus undocumented
type DeviceComplianceDeviceStatus struct {
	// Entity is the base model of DeviceComplianceDeviceStatus
	Entity
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// Platform Platform of the device that is being reported
	Platform *int `json:"platform,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceCompliancePolicy This is the base class for Compliance policy. Compliance policies are platform specific and individual per-platform compliance policies inherit from here.
type DeviceCompliancePolicy struct {
	// Entity is the base model of DeviceCompliancePolicy
	Entity
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs List of Scope Tags for this Entity instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []DeviceCompliancePolicyAssignment `json:"assignments,omitempty"`
	// DeviceSettingStateSummaries undocumented
	DeviceSettingStateSummaries []SettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`
	// DeviceStatuses undocumented
	DeviceStatuses []DeviceComplianceDeviceStatus `json:"deviceStatuses,omitempty"`
	// DeviceStatusOverview undocumented
	DeviceStatusOverview *DeviceComplianceDeviceOverview `json:"deviceStatusOverview,omitempty"`
	// ScheduledActionsForRule undocumented
	ScheduledActionsForRule []DeviceComplianceScheduledActionForRule `json:"scheduledActionsForRule,omitempty"`
	// UserStatuses undocumented
	UserStatuses []DeviceComplianceUserStatus `json:"userStatuses,omitempty"`
	// UserStatusOverview undocumented
	UserStatusOverview *DeviceComplianceUserOverview `json:"userStatusOverview,omitempty"`
}

// DeviceCompliancePolicyAssignment Device compliance policy assignment.
type DeviceCompliancePolicyAssignment struct {
	// Entity is the base model of DeviceCompliancePolicyAssignment
	Entity
	// Source The assignment source for the device compliance policy, direct or parcel/policySet.
	Source *DeviceAndAppManagementAssignmentSource `json:"source,omitempty"`
	// SourceID The identifier of the source of the assignment.
	SourceID *string `json:"sourceId,omitempty"`
	// Target Target for the compliance policy assignment.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceCompliancePolicyDeviceStateSummary undocumented
type DeviceCompliancePolicyDeviceStateSummary struct {
	// Entity is the base model of DeviceCompliancePolicyDeviceStateSummary
	Entity
	// CompliantDeviceCount Number of compliant devices
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// ConfigManagerCount Number of devices that have compliance managed by System Center Configuration Manager
	ConfigManagerCount *int `json:"configManagerCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
	// ErrorDeviceCount Number of error devices
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// InGracePeriodCount Number of devices that are in grace period
	InGracePeriodCount *int `json:"inGracePeriodCount,omitempty"`
	// NonCompliantDeviceCount Number of NonCompliant devices
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// UnknownDeviceCount Number of unknown devices
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
}

// DeviceCompliancePolicyGroupAssignment Device compliance policy group assignment.
type DeviceCompliancePolicyGroupAssignment struct {
	// Entity is the base model of DeviceCompliancePolicyGroupAssignment
	Entity
	// ExcludeGroup Indicates if this group is should be excluded. Defaults that the group should be included
	ExcludeGroup *bool `json:"excludeGroup,omitempty"`
	// TargetGroupID The Id of the AAD group we are targeting the device compliance policy to.
	TargetGroupID *string `json:"targetGroupId,omitempty"`
	// DeviceCompliancePolicy undocumented
	DeviceCompliancePolicy *DeviceCompliancePolicy `json:"deviceCompliancePolicy,omitempty"`
}

// DeviceCompliancePolicyPolicySetItem A class containing the properties used for device compliance policy PolicySetItem.
type DeviceCompliancePolicyPolicySetItem struct {
	// PolicySetItem is the base model of DeviceCompliancePolicyPolicySetItem
	PolicySetItem
}

// DeviceCompliancePolicyScript undocumented
type DeviceCompliancePolicyScript struct {
	// Object is the base model of DeviceCompliancePolicyScript
	Object
	// DeviceComplianceScriptID Device compliance script Id.
	DeviceComplianceScriptID *string `json:"deviceComplianceScriptId,omitempty"`
	// RulesContent Json of the rules.
	RulesContent *Binary `json:"rulesContent,omitempty"`
}

// DeviceCompliancePolicySettingState Device Compilance Policy Setting State for a given device.
type DeviceCompliancePolicySettingState struct {
	// Object is the base model of DeviceCompliancePolicySettingState
	Object
	// CurrentValue Current value of setting on device
	CurrentValue *string `json:"currentValue,omitempty"`
	// ErrorCode Error code for the setting
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// InstanceDisplayName Name of setting instance that is being reported.
	InstanceDisplayName *string `json:"instanceDisplayName,omitempty"`
	// Setting The setting that is being reported
	Setting *string `json:"setting,omitempty"`
	// SettingInstanceID SettingInstanceId
	SettingInstanceID *string `json:"settingInstanceId,omitempty"`
	// SettingName Localized/user friendly setting name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// Sources Contributing policies
	Sources []SettingSource `json:"sources,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// UserEmail UserEmail
	UserEmail *string `json:"userEmail,omitempty"`
	// UserID UserId
	UserID *string `json:"userId,omitempty"`
	// UserName UserName
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceCompliancePolicySettingStateSummary undocumented
type DeviceCompliancePolicySettingStateSummary struct {
	// Entity is the base model of DeviceCompliancePolicySettingStateSummary
	Entity
	// ConflictDeviceCount undocumented
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
	// ErrorDeviceCount undocumented
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// FailedDeviceCount undocumented
	FailedDeviceCount *int `json:"failedDeviceCount,omitempty"`
	// IntuneAccountID undocumented
	IntuneAccountID *string `json:"intuneAccountId,omitempty"`
	// IntuneSettingID undocumented
	IntuneSettingID *string `json:"intuneSettingId,omitempty"`
	// LastRefreshedDateTime undocumented
	LastRefreshedDateTime *time.Time `json:"lastRefreshedDateTime,omitempty"`
	// NotApplicableDeviceCount undocumented
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// PendingDeviceCount undocumented
	PendingDeviceCount *int `json:"pendingDeviceCount,omitempty"`
	// PolicyType undocumented
	PolicyType *string `json:"policyType,omitempty"`
	// SettingName undocumented
	SettingName *string `json:"settingName,omitempty"`
	// SucceededDeviceCount undocumented
	SucceededDeviceCount *int `json:"succeededDeviceCount,omitempty"`
	// TenantDisplayName undocumented
	TenantDisplayName *string `json:"tenantDisplayName,omitempty"`
	// TenantID undocumented
	TenantID *string `json:"tenantId,omitempty"`
}

// DeviceCompliancePolicyState Device Compliance Policy State for a given device.
type DeviceCompliancePolicyState struct {
	// Entity is the base model of DeviceCompliancePolicyState
	Entity
	// DisplayName The name of the policy for this policyBase
	DisplayName *string `json:"displayName,omitempty"`
	// PlatformType Platform type that the policy applies to
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// SettingCount Count of how many setting a policy holds
	SettingCount *int `json:"settingCount,omitempty"`
	// SettingStates undocumented
	SettingStates []DeviceCompliancePolicySettingState `json:"settingStates,omitempty"`
	// State The compliance state of the policy
	State *ComplianceStatus `json:"state,omitempty"`
	// UserID User unique identifier, must be Guid
	UserID *string `json:"userId,omitempty"`
	// UserPrincipalName User Principal Name
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Version The version of the policy
	Version *int `json:"version,omitempty"`
}

// DeviceComplianceScheduledActionForRule Scheduled Action for Rule
type DeviceComplianceScheduledActionForRule struct {
	// Entity is the base model of DeviceComplianceScheduledActionForRule
	Entity
	// RuleName Name of the rule which this scheduled action applies to.
	RuleName *string `json:"ruleName,omitempty"`
	// ScheduledActionConfigurations undocumented
	ScheduledActionConfigurations []DeviceComplianceActionItem `json:"scheduledActionConfigurations,omitempty"`
}

// DeviceComplianceScript Intune will provide customer the ability to run their Powershell Compliance scripts (detection) on the enrolled windows 10 Azure Active Directory joined devices.
type DeviceComplianceScript struct {
	// Entity is the base model of DeviceComplianceScript
	Entity
	// CreatedDateTime The timestamp of when the device compliance script was created. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Description of the device compliance script
	Description *string `json:"description,omitempty"`
	// DetectionScriptContent The entire content of the detection powershell script
	DetectionScriptContent *Binary `json:"detectionScriptContent,omitempty"`
	// DisplayName Name of the device compliance script
	DisplayName *string `json:"displayName,omitempty"`
	// EnforceSignatureCheck Indicate whether the script signature needs be checked
	EnforceSignatureCheck *bool `json:"enforceSignatureCheck,omitempty"`
	// LastModifiedDateTime The timestamp of when the device compliance script was modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Publisher Name of the device compliance script publisher
	Publisher *string `json:"publisher,omitempty"`
	// RoleScopeTagIDs List of Scope Tag IDs for the device compliance script
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// RunAs32Bit Indicate whether PowerShell script(s) should run as 32-bit
	RunAs32Bit *bool `json:"runAs32Bit,omitempty"`
	// RunAsAccount Indicates the type of execution context
	RunAsAccount *RunAsAccountType `json:"runAsAccount,omitempty"`
	// Version Version of the device compliance script
	Version *string `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []DeviceHealthScriptAssignment `json:"assignments,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceComplianceScriptDeviceState `json:"deviceRunStates,omitempty"`
	// RunSummary undocumented
	RunSummary *DeviceComplianceScriptRunSummary `json:"runSummary,omitempty"`
}

// DeviceComplianceScriptDeviceState Contains properties for device run state of the device compliance script.
type DeviceComplianceScriptDeviceState struct {
	// Entity is the base model of DeviceComplianceScriptDeviceState
	Entity
	// DetectionState Detection state from the lastest device compliance script execution
	DetectionState *RunState `json:"detectionState,omitempty"`
	// ExpectedStateUpdateDateTime The next timestamp of when the device compliance script is expected to execute
	ExpectedStateUpdateDateTime *time.Time `json:"expectedStateUpdateDateTime,omitempty"`
	// LastStateUpdateDateTime The last timestamp of when the device compliance script executed
	LastStateUpdateDateTime *time.Time `json:"lastStateUpdateDateTime,omitempty"`
	// LastSyncDateTime The last time that Intune Managment Extension synced with Intune
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// ScriptError Error from the detection script
	ScriptError *string `json:"scriptError,omitempty"`
	// ScriptOutput Output of the detection script
	ScriptOutput *string `json:"scriptOutput,omitempty"`
	// ManagedDevice undocumented
	ManagedDevice *ManagedDevice `json:"managedDevice,omitempty"`
}

// DeviceComplianceScriptError undocumented
type DeviceComplianceScriptError struct {
	// Object is the base model of DeviceComplianceScriptError
	Object
	// Code Error code.
	Code *Code `json:"code,omitempty"`
	// DeviceComplianceScriptRulesValidationError Error code.
	DeviceComplianceScriptRulesValidationError *DeviceComplianceScriptRulesValidationError `json:"deviceComplianceScriptRulesValidationError,omitempty"`
	// Message Error message.
	Message *string `json:"message,omitempty"`
}

// DeviceComplianceScriptRule undocumented
type DeviceComplianceScriptRule struct {
	// Object is the base model of DeviceComplianceScriptRule
	Object
	// DataType Data type specified in the rule.
	DataType *DataType `json:"dataType,omitempty"`
	// DeviceComplianceScriptRuleDataType Data type specified in the rule.
	DeviceComplianceScriptRuleDataType *DeviceComplianceScriptRuleDataType `json:"deviceComplianceScriptRuleDataType,omitempty"`
	// DeviceComplianceScriptRulOperator Operator specified in the rule.
	DeviceComplianceScriptRulOperator *DeviceComplianceScriptRulOperator `json:"deviceComplianceScriptRulOperator,omitempty"`
	// Operand Operand specified in the rule.
	Operand *string `json:"operand,omitempty"`
	// Operator Operator specified in the rule.
	Operator *Operator `json:"operator,omitempty"`
	// SettingName Setting name specified in the rule.
	SettingName *string `json:"settingName,omitempty"`
}

// DeviceComplianceScriptRuleError undocumented
type DeviceComplianceScriptRuleError struct {
	// DeviceComplianceScriptError is the base model of DeviceComplianceScriptRuleError
	DeviceComplianceScriptError
	// SettingName Setting name for the rule with error.
	SettingName *string `json:"settingName,omitempty"`
}

// DeviceComplianceScriptRunSummary Contains properties for the run summary of a device management script.
type DeviceComplianceScriptRunSummary struct {
	// Entity is the base model of DeviceComplianceScriptRunSummary
	Entity
	// DetectionScriptErrorDeviceCount Number of devices on which the detection script execution encountered an error and did not complete. Valid values -2147483648 to 2147483647
	DetectionScriptErrorDeviceCount *int `json:"detectionScriptErrorDeviceCount,omitempty"`
	// DetectionScriptPendingDeviceCount Number of devices which have not yet run the latest version of the device compliance script. Valid values -2147483648 to 2147483647
	DetectionScriptPendingDeviceCount *int `json:"detectionScriptPendingDeviceCount,omitempty"`
	// IssueDetectedDeviceCount Number of devices for which the detection script found an issue. Valid values -2147483648 to 2147483647
	IssueDetectedDeviceCount *int `json:"issueDetectedDeviceCount,omitempty"`
	// LastScriptRunDateTime Last run time for the script across all devices
	LastScriptRunDateTime *time.Time `json:"lastScriptRunDateTime,omitempty"`
	// NoIssueDetectedDeviceCount Number of devices for which the detection script did not find an issue and the device is healthy. Valid values -2147483648 to 2147483647
	NoIssueDetectedDeviceCount *int `json:"noIssueDetectedDeviceCount,omitempty"`
}

// DeviceComplianceScriptValidationResult undocumented
type DeviceComplianceScriptValidationResult struct {
	// Object is the base model of DeviceComplianceScriptValidationResult
	Object
	// RuleErrors Errors in json for the script for rules.
	RuleErrors []DeviceComplianceScriptRuleError `json:"ruleErrors,omitempty"`
	// Rules Parsed rules from json.
	Rules []DeviceComplianceScriptRule `json:"rules,omitempty"`
	// ScriptErrors Errors in json for the script.
	ScriptErrors []DeviceComplianceScriptError `json:"scriptErrors,omitempty"`
}

// DeviceComplianceSettingState Device compliance setting State for a given device.
type DeviceComplianceSettingState struct {
	// Entity is the base model of DeviceComplianceSettingState
	Entity
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// DeviceID The Device Id that is being reported
	DeviceID *string `json:"deviceId,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// DeviceName The Device Name that is being reported
	DeviceName *string `json:"deviceName,omitempty"`
	// PlatformType Device platform type
	PlatformType *DeviceType `json:"platformType,omitempty"`
	// Setting The setting class name and property name.
	Setting *string `json:"setting,omitempty"`
	// SettingName The Setting Name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// UserEmail The User email address that is being reported
	UserEmail *string `json:"userEmail,omitempty"`
	// UserID The user Id that is being reported
	UserID *string `json:"userId,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName The User PrincipalName that is being reported
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceComplianceUserOverview undocumented
type DeviceComplianceUserOverview struct {
	// Entity is the base model of DeviceComplianceUserOverview
	Entity
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
	// ConflictCount Number of users in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error Users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed Users
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// PendingCount Number of pending Users
	PendingCount *int `json:"pendingCount,omitempty"`
	// SuccessCount Number of succeeded Users
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceComplianceUserStatus undocumented
type DeviceComplianceUserStatus struct {
	// Entity is the base model of DeviceComplianceUserStatus
	Entity
	// DevicesCount Devices count for that user.
	DevicesCount *int `json:"devicesCount,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// UserDisplayName User name of the DevicePolicyStatus.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfiguration Device Configuration.
type DeviceConfiguration struct {
	// Entity is the base model of DeviceConfiguration
	Entity
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// DeviceManagementApplicabilityRuleDeviceMode The device mode applicability rule for this Policy.
	DeviceManagementApplicabilityRuleDeviceMode *DeviceManagementApplicabilityRuleDeviceMode `json:"deviceManagementApplicabilityRuleDeviceMode,omitempty"`
	// DeviceManagementApplicabilityRuleOsEdition The OS edition applicability for this Policy.
	DeviceManagementApplicabilityRuleOsEdition *DeviceManagementApplicabilityRuleOsEdition `json:"deviceManagementApplicabilityRuleOsEdition,omitempty"`
	// DeviceManagementApplicabilityRuleOsVersion The OS version applicability rule for this Policy.
	DeviceManagementApplicabilityRuleOsVersion *DeviceManagementApplicabilityRuleOsVersion `json:"deviceManagementApplicabilityRuleOsVersion,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs List of Scope Tags for this Entity instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// SupportsScopeTags Indicates whether or not the underlying Device Configuration supports the assignment of scope tags. Assigning to the ScopeTags property is not allowed when this value is false and entities will not be visible to scoped users. This occurs for Legacy policies created in Silverlight and can be resolved by deleting and recreating the policy in the Azure Portal. This property is read-only.
	SupportsScopeTags *bool `json:"supportsScopeTags,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []DeviceConfigurationAssignment `json:"assignments,omitempty"`
	// DeviceSettingStateSummaries undocumented
	DeviceSettingStateSummaries []SettingStateDeviceSummary `json:"deviceSettingStateSummaries,omitempty"`
	// DeviceStatuses undocumented
	DeviceStatuses []DeviceConfigurationDeviceStatus `json:"deviceStatuses,omitempty"`
	// DeviceStatusOverview undocumented
	DeviceStatusOverview *DeviceConfigurationDeviceOverview `json:"deviceStatusOverview,omitempty"`
	// GroupAssignments undocumented
	GroupAssignments []DeviceConfigurationGroupAssignment `json:"groupAssignments,omitempty"`
	// UserStatuses undocumented
	UserStatuses []DeviceConfigurationUserStatus `json:"userStatuses,omitempty"`
	// UserStatusOverview undocumented
	UserStatusOverview *DeviceConfigurationUserOverview `json:"userStatusOverview,omitempty"`
}

// DeviceConfigurationAssignment The device configuration assignment entity assigns an AAD group to a specific device configuration.
type DeviceConfigurationAssignment struct {
	// Entity is the base model of DeviceConfigurationAssignment
	Entity
	// Source The assignment source for the device configuration, direct or parcel/policySet. This property is read-only.
	Source *DeviceAndAppManagementAssignmentSource `json:"source,omitempty"`
	// SourceID The identifier of the source of the assignment. This property is read-only.
	SourceID *string `json:"sourceId,omitempty"`
	// Target The assignment target for the device configuration.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceConfigurationConflictSummary Conflict summary for a set of device configuration policies.
type DeviceConfigurationConflictSummary struct {
	// Entity is the base model of DeviceConfigurationConflictSummary
	Entity
	// ConflictingDeviceConfigurations The set of policies in conflict with the given setting
	ConflictingDeviceConfigurations []SettingSource `json:"conflictingDeviceConfigurations,omitempty"`
	// ContributingSettings The set of settings in conflict with the given policies
	ContributingSettings []string `json:"contributingSettings,omitempty"`
	// DeviceCheckinsImpacted The count of checkins impacted by the conflicting policies and settings
	DeviceCheckinsImpacted *int `json:"deviceCheckinsImpacted,omitempty"`
}

// DeviceConfigurationDeviceOverview undocumented
type DeviceConfigurationDeviceOverview struct {
	// Entity is the base model of DeviceConfigurationDeviceOverview
	Entity
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
	// ConflictCount Number of devices in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// NotApplicablePlatformCount Number of not applicable devices due to mismatch platform and policy
	NotApplicablePlatformCount *int `json:"notApplicablePlatformCount,omitempty"`
	// PendingCount Number of pending devices
	PendingCount *int `json:"pendingCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceConfigurationDeviceStateSummary undocumented
type DeviceConfigurationDeviceStateSummary struct {
	// Entity is the base model of DeviceConfigurationDeviceStateSummary
	Entity
	// CompliantDeviceCount Number of compliant devices
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
	// ErrorDeviceCount Number of error devices
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// NonCompliantDeviceCount Number of NonCompliant devices
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// UnknownDeviceCount Number of unknown devices
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
}

// DeviceConfigurationDeviceStatus undocumented
type DeviceConfigurationDeviceStatus struct {
	// Entity is the base model of DeviceConfigurationDeviceStatus
	Entity
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// Platform Platform of the device that is being reported
	Platform *int `json:"platform,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfigurationGroupAssignment Device configuration group assignment.
type DeviceConfigurationGroupAssignment struct {
	// Entity is the base model of DeviceConfigurationGroupAssignment
	Entity
	// ExcludeGroup Indicates if this group is should be excluded. Defaults that the group should be included
	ExcludeGroup *bool `json:"excludeGroup,omitempty"`
	// TargetGroupID The Id of the AAD group we are targeting the device configuration to.
	TargetGroupID *string `json:"targetGroupId,omitempty"`
	// DeviceConfiguration undocumented
	DeviceConfiguration *DeviceConfiguration `json:"deviceConfiguration,omitempty"`
}

// DeviceConfigurationPolicySetItem A class containing the properties used for device configuration PolicySetItem.
type DeviceConfigurationPolicySetItem struct {
	// PolicySetItem is the base model of DeviceConfigurationPolicySetItem
	PolicySetItem
}

// DeviceConfigurationSettingState Device Configuration Setting State for a given device.
type DeviceConfigurationSettingState struct {
	// Object is the base model of DeviceConfigurationSettingState
	Object
	// CurrentValue Current value of setting on device
	CurrentValue *string `json:"currentValue,omitempty"`
	// ErrorCode Error code for the setting
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// InstanceDisplayName Name of setting instance that is being reported.
	InstanceDisplayName *string `json:"instanceDisplayName,omitempty"`
	// Setting The setting that is being reported
	Setting *string `json:"setting,omitempty"`
	// SettingInstanceID SettingInstanceId
	SettingInstanceID *string `json:"settingInstanceId,omitempty"`
	// SettingName Localized/user friendly setting name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// Sources Contributing policies
	Sources []SettingSource `json:"sources,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// UserEmail UserEmail
	UserEmail *string `json:"userEmail,omitempty"`
	// UserID UserId
	UserID *string `json:"userId,omitempty"`
	// UserName UserName
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfigurationState Device Configuration State for a given device.
type DeviceConfigurationState struct {
	// Entity is the base model of DeviceConfigurationState
	Entity
	// DisplayName The name of the policy for this policyBase
	DisplayName *string `json:"displayName,omitempty"`
	// PlatformType Platform type that the policy applies to
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// SettingCount Count of how many setting a policy holds
	SettingCount *int `json:"settingCount,omitempty"`
	// SettingStates undocumented
	SettingStates []DeviceConfigurationSettingState `json:"settingStates,omitempty"`
	// State The compliance state of the policy
	State *ComplianceStatus `json:"state,omitempty"`
	// UserID User unique identifier, must be Guid
	UserID *string `json:"userId,omitempty"`
	// UserPrincipalName User Principal Name
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Version The version of the policy
	Version *int `json:"version,omitempty"`
}

// DeviceConfigurationTargetedUserAndDevice Conflict summary for a set of device configuration policies.
type DeviceConfigurationTargetedUserAndDevice struct {
	// Object is the base model of DeviceConfigurationTargetedUserAndDevice
	Object
	// DeviceID The id of the device in the checkin.
	DeviceID *string `json:"deviceId,omitempty"`
	// DeviceName The name of the device in the checkin.
	DeviceName *string `json:"deviceName,omitempty"`
	// LastCheckinDateTime Last checkin time for this user/device pair.
	LastCheckinDateTime *time.Time `json:"lastCheckinDateTime,omitempty"`
	// UserDisplayName The display name of the user in the checkin
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserID The id of the user in the checkin.
	UserID *string `json:"userId,omitempty"`
	// UserPrincipalName The UPN of the user in the checkin.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfigurationUserOverview undocumented
type DeviceConfigurationUserOverview struct {
	// Entity is the base model of DeviceConfigurationUserOverview
	Entity
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
	// ConflictCount Number of users in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error Users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed Users
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// PendingCount Number of pending Users
	PendingCount *int `json:"pendingCount,omitempty"`
	// SuccessCount Number of succeeded Users
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceConfigurationUserStateSummary undocumented
type DeviceConfigurationUserStateSummary struct {
	// Entity is the base model of DeviceConfigurationUserStateSummary
	Entity
	// CompliantUserCount Number of compliant users
	CompliantUserCount *int `json:"compliantUserCount,omitempty"`
	// ConflictUserCount Number of conflict users
	ConflictUserCount *int `json:"conflictUserCount,omitempty"`
	// ErrorUserCount Number of error users
	ErrorUserCount *int `json:"errorUserCount,omitempty"`
	// NonCompliantUserCount Number of NonCompliant users
	NonCompliantUserCount *int `json:"nonCompliantUserCount,omitempty"`
	// NotApplicableUserCount Number of not applicable users
	NotApplicableUserCount *int `json:"notApplicableUserCount,omitempty"`
	// RemediatedUserCount Number of remediated users
	RemediatedUserCount *int `json:"remediatedUserCount,omitempty"`
	// UnknownUserCount Number of unknown users
	UnknownUserCount *int `json:"unknownUserCount,omitempty"`
}

// DeviceConfigurationUserStatus undocumented
type DeviceConfigurationUserStatus struct {
	// Entity is the base model of DeviceConfigurationUserStatus
	Entity
	// DevicesCount Devices count for that user.
	DevicesCount *int `json:"devicesCount,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// UserDisplayName User name of the DevicePolicyStatus.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceCustomAttributeShellScript Represents a custom attribute script for macOS.
type DeviceCustomAttributeShellScript struct {
	// Entity is the base model of DeviceCustomAttributeShellScript
	Entity
	// CreatedDateTime The date and time the device management script was created. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// CustomAttributeName The name of the custom attribute.
	CustomAttributeName *string `json:"customAttributeName,omitempty"`
	// CustomAttributeType The expected type of the custom attribute's value.
	CustomAttributeType *DeviceCustomAttributeValueType `json:"customAttributeType,omitempty"`
	// Description Optional description for the device management script.
	Description *string `json:"description,omitempty"`
	// DisplayName Name of the device management script.
	DisplayName *string `json:"displayName,omitempty"`
	// FileName Script file name.
	FileName *string `json:"fileName,omitempty"`
	// LastModifiedDateTime The date and time the device management script was last modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs List of Scope Tag IDs for this PowerShellScript instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// RunAsAccount Indicates the type of execution context.
	RunAsAccount *RunAsAccountType `json:"runAsAccount,omitempty"`
	// ScriptContent The script content.
	ScriptContent *Binary `json:"scriptContent,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementScriptAssignment `json:"assignments,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceManagementScriptDeviceState `json:"deviceRunStates,omitempty"`
	// GroupAssignments undocumented
	GroupAssignments []DeviceManagementScriptGroupAssignment `json:"groupAssignments,omitempty"`
	// RunSummary undocumented
	RunSummary *DeviceManagementScriptRunSummary `json:"runSummary,omitempty"`
	// UserRunStates undocumented
	UserRunStates []DeviceManagementScriptUserState `json:"userRunStates,omitempty"`
}

// DeviceDetail undocumented
type DeviceDetail struct {
	// Object is the base model of DeviceDetail
	Object
	// Browser undocumented
	Browser *string `json:"browser,omitempty"`
	// BrowserID undocumented
	BrowserID *string `json:"browserId,omitempty"`
	// DeviceID undocumented
	DeviceID *string `json:"deviceId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// IsCompliant undocumented
	IsCompliant *bool `json:"isCompliant,omitempty"`
	// IsManaged undocumented
	IsManaged *bool `json:"isManaged,omitempty"`
	// OperatingSystem undocumented
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// TrustType undocumented
	TrustType *string `json:"trustType,omitempty"`
}

// DeviceEnrollmentConfiguration The Base Class of Device Enrollment Configuration
type DeviceEnrollmentConfiguration struct {
	// Entity is the base model of DeviceEnrollmentConfiguration
	Entity
	// CreatedDateTime Created date time in UTC of the device enrollment configuration
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description The description of the device enrollment configuration
	Description *string `json:"description,omitempty"`
	// DisplayName The display name of the device enrollment configuration
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime Last modified date time in UTC of the device enrollment configuration
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Priority Priority is used when a user exists in multiple groups that are assigned enrollment configuration. Users are subject only to the configuration with the lowest priority value.
	Priority *int `json:"priority,omitempty"`
	// RoleScopeTagIDs Optional role scope tags for the enrollment restrictions.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// Version The version of the device enrollment configuration
	Version *int `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []EnrollmentConfigurationAssignment `json:"assignments,omitempty"`
}

// DeviceEnrollmentLimitConfiguration Device Enrollment Configuration that restricts the number of devices a user can enroll
type DeviceEnrollmentLimitConfiguration struct {
	// DeviceEnrollmentConfiguration is the base model of DeviceEnrollmentLimitConfiguration
	DeviceEnrollmentConfiguration
	// Limit The maximum number of devices that a user can enroll
	Limit *int `json:"limit,omitempty"`
}

// DeviceEnrollmentPlatformRestriction Platform specific enrollment restrictions
type DeviceEnrollmentPlatformRestriction struct {
	// Object is the base model of DeviceEnrollmentPlatformRestriction
	Object
	// BlockedManufacturers Collection of blocked Manufacturers.
	BlockedManufacturers []string `json:"blockedManufacturers,omitempty"`
	// BlockedSKUs Collection of blocked Skus.
	BlockedSKUs []string `json:"blockedSkus,omitempty"`
	// OsMaximumVersion Max OS version supported
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// OsMinimumVersion Min OS version supported
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// PersonalDeviceEnrollmentBlocked Block personally owned devices from enrolling
	PersonalDeviceEnrollmentBlocked *bool `json:"personalDeviceEnrollmentBlocked,omitempty"`
	// PlatformBlocked Block the platform from enrolling
	PlatformBlocked *bool `json:"platformBlocked,omitempty"`
}

// DeviceEnrollmentPlatformRestrictionsConfiguration Device Enrollment Configuration that restricts the types of devices a user can enroll
type DeviceEnrollmentPlatformRestrictionsConfiguration struct {
	// DeviceEnrollmentConfiguration is the base model of DeviceEnrollmentPlatformRestrictionsConfiguration
	DeviceEnrollmentConfiguration
	// AndroidForWorkRestriction Android for work restrictions based on platform, platform operating system version, and device ownership
	AndroidForWorkRestriction *DeviceEnrollmentPlatformRestriction `json:"androidForWorkRestriction,omitempty"`
	// AndroidRestriction Android restrictions based on platform, platform operating system version, and device ownership
	AndroidRestriction *DeviceEnrollmentPlatformRestriction `json:"androidRestriction,omitempty"`
	// AospRestriction AOSP restrictions based on platform, platform operating system version, and device ownership
	AospRestriction *DeviceEnrollmentPlatformRestriction `json:"aospRestriction,omitempty"`
	// IOSRestriction Ios restrictions based on platform, platform operating system version, and device ownership
	IOSRestriction *DeviceEnrollmentPlatformRestriction `json:"iosRestriction,omitempty"`
	// MacOSRestriction Mac restrictions based on platform, platform operating system version, and device ownership
	MacOSRestriction *DeviceEnrollmentPlatformRestriction `json:"macOSRestriction,omitempty"`
	// MacRestriction Mac restrictions based on platform, platform operating system version, and device ownership
	MacRestriction *DeviceEnrollmentPlatformRestriction `json:"macRestriction,omitempty"`
	// WindowsHomeSKURestriction Windows Home Sku restrictions based on platform, platform operating system version, and device ownership
	WindowsHomeSKURestriction *DeviceEnrollmentPlatformRestriction `json:"windowsHomeSkuRestriction,omitempty"`
	// WindowsMobileRestriction Windows mobile restrictions based on platform, platform operating system version, and device ownership
	WindowsMobileRestriction *DeviceEnrollmentPlatformRestriction `json:"windowsMobileRestriction,omitempty"`
	// WindowsRestriction Windows restrictions based on platform, platform operating system version, and device ownership
	WindowsRestriction *DeviceEnrollmentPlatformRestriction `json:"windowsRestriction,omitempty"`
}

// DeviceEnrollmentWindowsHelloForBusinessConfiguration Windows Hello for Business settings lets users access their devices using a gesture, such as biometric authentication, or a PIN. Configure settings for enrolled Windows 10, Windows 10 Mobile and later.
type DeviceEnrollmentWindowsHelloForBusinessConfiguration struct {
	// DeviceEnrollmentConfiguration is the base model of DeviceEnrollmentWindowsHelloForBusinessConfiguration
	DeviceEnrollmentConfiguration
	// EnhancedBiometricsState Controls the ability to use the anti-spoofing features for facial recognition on devices which support it. If set to disabled, anti-spoofing features are not allowed. If set to Not Configured, the user can choose whether they want to use anti-spoofing.
	EnhancedBiometricsState *Enablement `json:"enhancedBiometricsState,omitempty"`
	// PinExpirationInDays Controls the period of time (in days) that a PIN can be used before the system requires the user to change it. This must be set between 0 and 730, inclusive. If set to 0, the user's PIN will never expire
	PinExpirationInDays *int `json:"pinExpirationInDays,omitempty"`
	// PinLowercaseCharactersUsage Controls the ability to use lowercase letters in the Windows Hello for Business PIN.  Allowed permits the use of lowercase letter(s), whereas Required ensures they are present. If set to Not Allowed, lowercase letters will not be permitted.
	PinLowercaseCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinLowercaseCharactersUsage,omitempty"`
	// PinMaximumLength Controls the maximum number of characters allowed for the Windows Hello for Business PIN. This value must be between 4 and 127, inclusive. This value must be greater than or equal to the value set for the minimum PIN.
	PinMaximumLength *int `json:"pinMaximumLength,omitempty"`
	// PinMinimumLength Controls the minimum number of characters required for the Windows Hello for Business PIN.  This value must be between 4 and 127, inclusive, and less than or equal to the value set for the maximum PIN.
	PinMinimumLength *int `json:"pinMinimumLength,omitempty"`
	// PinPreviousBlockCount Controls the ability to prevent users from using past PINs. This must be set between 0 and 50, inclusive, and the current PIN of the user is included in that count. If set to 0, previous PINs are not stored. PIN history is not preserved through a PIN reset.
	PinPreviousBlockCount *int `json:"pinPreviousBlockCount,omitempty"`
	// PinSpecialCharactersUsage Controls the ability to use special characters in the Windows Hello for Business PIN.  Allowed permits the use of special character(s), whereas Required ensures they are present. If set to Not Allowed, special character(s) will not be permitted.
	PinSpecialCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinSpecialCharactersUsage,omitempty"`
	// PinUppercaseCharactersUsage Controls the ability to use uppercase letters in the Windows Hello for Business PIN.  Allowed permits the use of uppercase letter(s), whereas Required ensures they are present. If set to Not Allowed, uppercase letters will not be permitted.
	PinUppercaseCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinUppercaseCharactersUsage,omitempty"`
	// RemotePassportEnabled Controls the use of Remote Windows Hello for Business. Remote Windows Hello for Business provides the ability for a portable, registered device to be usable as a companion for desktop authentication. The desktop must be Azure AD joined and the companion device must have a Windows Hello for Business PIN.
	RemotePassportEnabled *bool `json:"remotePassportEnabled,omitempty"`
	// SecurityDeviceRequired Controls whether to require a Trusted Platform Module (TPM) for provisioning Windows Hello for Business. A TPM provides an additional security benefit in that data stored on it cannot be used on other devices. If set to False, all devices can provision Windows Hello for Business even if there is not a usable TPM.
	SecurityDeviceRequired *bool `json:"securityDeviceRequired,omitempty"`
	// SecurityKeyForSignIn Security key for Sign In provides the capacity for remotely turning ON/OFF Windows Hello Sercurity Keyl Not configured will honor configurations done on the clinet.
	SecurityKeyForSignIn *Enablement `json:"securityKeyForSignIn,omitempty"`
	// State Controls whether to allow the device to be configured for Windows Hello for Business. If set to disabled, the user cannot provision Windows Hello for Business except on Azure Active Directory joined mobile phones if otherwise required. If set to Not Configured, Intune will not override client defaults.
	State *Enablement `json:"state,omitempty"`
	// UnlockWithBiometricsEnabled Controls the use of biometric gestures, such as face and fingerprint, as an alternative to the Windows Hello for Business PIN.  If set to False, biometric gestures are not allowed. Users must still configure a PIN as a backup in case of failures.
	UnlockWithBiometricsEnabled *bool `json:"unlockWithBiometricsEnabled,omitempty"`
}

// DeviceExchangeAccessStateSummary Device Exchange Access State summary
type DeviceExchangeAccessStateSummary struct {
	// Object is the base model of DeviceExchangeAccessStateSummary
	Object
	// AllowedDeviceCount Total count of devices with Exchange Access State: Allowed.
	AllowedDeviceCount *int `json:"allowedDeviceCount,omitempty"`
	// BlockedDeviceCount Total count of devices with Exchange Access State: Blocked.
	BlockedDeviceCount *int `json:"blockedDeviceCount,omitempty"`
	// QuarantinedDeviceCount Total count of devices with Exchange Access State: Quarantined.
	QuarantinedDeviceCount *int `json:"quarantinedDeviceCount,omitempty"`
	// UnavailableDeviceCount Total count of devices for which no Exchange Access State could be found.
	UnavailableDeviceCount *int `json:"unavailableDeviceCount,omitempty"`
	// UnknownDeviceCount Total count of devices with Exchange Access State: Unknown.
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
}

// DeviceGeoLocation Device location
type DeviceGeoLocation struct {
	// Object is the base model of DeviceGeoLocation
	Object
	// Altitude Altitude, given in meters above sea level
	Altitude *float64 `json:"altitude,omitempty"`
	// Heading Heading in degrees from true north
	Heading *float64 `json:"heading,omitempty"`
	// HorizontalAccuracy Accuracy of longitude and latitude in meters
	HorizontalAccuracy *float64 `json:"horizontalAccuracy,omitempty"`
	// LastCollectedDateTime Time at which location was recorded, relative to UTC
	LastCollectedDateTime *time.Time `json:"lastCollectedDateTime,omitempty"`
	// LastCollectedDateTimeUtc Time at which location was recorded, relative to UTC
	LastCollectedDateTimeUtc *time.Time `json:"lastCollectedDateTimeUtc,omitempty"`
	// Latitude Latitude coordinate of the device's location
	Latitude *float64 `json:"latitude,omitempty"`
	// Longitude Longitude coordinate of the device's location
	Longitude *float64 `json:"longitude,omitempty"`
	// Speed Speed the device is traveling in meters per second
	Speed *float64 `json:"speed,omitempty"`
	// VerticalAccuracy Accuracy of altitude in meters
	VerticalAccuracy *float64 `json:"verticalAccuracy,omitempty"`
}

// DeviceHealth undocumented
type DeviceHealth struct {
	// Object is the base model of DeviceHealth
	Object
	// LastConnectionTime undocumented
	LastConnectionTime *time.Time `json:"lastConnectionTime,omitempty"`
}

// DeviceHealthAttestationState undocumented
type DeviceHealthAttestationState struct {
	// Object is the base model of DeviceHealthAttestationState
	Object
	// AttestationIdentityKey TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
	AttestationIdentityKey *string `json:"attestationIdentityKey,omitempty"`
	// BitLockerStatus On or Off of BitLocker Drive Encryption
	BitLockerStatus *string `json:"bitLockerStatus,omitempty"`
	// BootAppSecurityVersion The security version number of the Boot Application
	BootAppSecurityVersion *string `json:"bootAppSecurityVersion,omitempty"`
	// BootDebugging When bootDebugging is enabled, the device is used in development and testing
	BootDebugging *string `json:"bootDebugging,omitempty"`
	// BootManagerSecurityVersion The security version number of the Boot Application
	BootManagerSecurityVersion *string `json:"bootManagerSecurityVersion,omitempty"`
	// BootManagerVersion The version of the Boot Manager
	BootManagerVersion *string `json:"bootManagerVersion,omitempty"`
	// BootRevisionListInfo The Boot Revision List that was loaded during initial boot on the attested device
	BootRevisionListInfo *string `json:"bootRevisionListInfo,omitempty"`
	// CodeIntegrity  When code integrity is enabled, code execution is restricted to integrity verified code
	CodeIntegrity *string `json:"codeIntegrity,omitempty"`
	// CodeIntegrityCheckVersion The version of the Boot Manager
	CodeIntegrityCheckVersion *string `json:"codeIntegrityCheckVersion,omitempty"`
	// CodeIntegrityPolicy The Code Integrity policy that is controlling the security of the boot environment
	CodeIntegrityPolicy *string `json:"codeIntegrityPolicy,omitempty"`
	// ContentNamespaceURL The DHA report version. (Namespace version)
	ContentNamespaceURL *string `json:"contentNamespaceUrl,omitempty"`
	// ContentVersion The HealthAttestation state schema version
	ContentVersion *string `json:"contentVersion,omitempty"`
	// DataExcutionPolicy DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
	DataExcutionPolicy *string `json:"dataExcutionPolicy,omitempty"`
	// DeviceHealthAttestationStatus The DHA report version. (Namespace version)
	DeviceHealthAttestationStatus *string `json:"deviceHealthAttestationStatus,omitempty"`
	// EarlyLaunchAntiMalwareDriverProtection ELAM provides protection for the computers in your network when they start up
	EarlyLaunchAntiMalwareDriverProtection *string `json:"earlyLaunchAntiMalwareDriverProtection,omitempty"`
	// HealthAttestationSupportedStatus This attribute indicates if DHA is supported for the device
	HealthAttestationSupportedStatus *string `json:"healthAttestationSupportedStatus,omitempty"`
	// HealthStatusMismatchInfo This attribute appears if DHA-Service detects an integrity issue
	HealthStatusMismatchInfo *string `json:"healthStatusMismatchInfo,omitempty"`
	// IssuedDateTime The DateTime when device was evaluated or issued to MDM
	IssuedDateTime *time.Time `json:"issuedDateTime,omitempty"`
	// LastUpdateDateTime The Timestamp of the last update.
	LastUpdateDateTime *string `json:"lastUpdateDateTime,omitempty"`
	// OperatingSystemKernelDebugging When operatingSystemKernelDebugging is enabled, the device is used in development and testing
	OperatingSystemKernelDebugging *string `json:"operatingSystemKernelDebugging,omitempty"`
	// OperatingSystemRevListInfo The Operating System Revision List that was loaded during initial boot on the attested device
	OperatingSystemRevListInfo *string `json:"operatingSystemRevListInfo,omitempty"`
	// Pcr0 The measurement that is captured in PCR[0]
	Pcr0 *string `json:"pcr0,omitempty"`
	// PcrHashAlgorithm Informational attribute that identifies the HASH algorithm that was used by TPM
	PcrHashAlgorithm *string `json:"pcrHashAlgorithm,omitempty"`
	// ResetCount The number of times a PC device has hibernated or resumed
	ResetCount *int `json:"resetCount,omitempty"`
	// RestartCount The number of times a PC device has rebooted
	RestartCount *int `json:"restartCount,omitempty"`
	// SafeMode Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
	SafeMode *string `json:"safeMode,omitempty"`
	// SecureBoot When Secure Boot is enabled, the core components must have the correct cryptographic signatures
	SecureBoot *string `json:"secureBoot,omitempty"`
	// SecureBootConfigurationPolicyFingerPrint Fingerprint of the Custom Secure Boot Configuration Policy
	SecureBootConfigurationPolicyFingerPrint *string `json:"secureBootConfigurationPolicyFingerPrint,omitempty"`
	// TestSigning When test signing is allowed, the device does not enforce signature validation during boot
	TestSigning *string `json:"testSigning,omitempty"`
	// TpmVersion The security version number of the Boot Application
	TpmVersion *string `json:"tpmVersion,omitempty"`
	// VirtualSecureMode VSM is a container that protects high value assets from a compromised kernel
	VirtualSecureMode *string `json:"virtualSecureMode,omitempty"`
	// WindowsPE Operating system running with limited services that is used to prepare a computer for Windows
	WindowsPE *string `json:"windowsPE,omitempty"`
}

// DeviceHealthScript Intune will provide customer the ability to run their Powershell Health scripts (remediation + detection) on the enrolled windows 10 Azure Active Directory joined devices.
type DeviceHealthScript struct {
	// Entity is the base model of DeviceHealthScript
	Entity
	// CreatedDateTime The timestamp of when the device health script was created. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Description of the device health script
	Description *string `json:"description,omitempty"`
	// DetectionScriptContent The entire content of the detection powershell script
	DetectionScriptContent *Binary `json:"detectionScriptContent,omitempty"`
	// DetectionScriptParameters List of ComplexType DetectionScriptParameters objects.
	DetectionScriptParameters []DeviceHealthScriptParameter `json:"detectionScriptParameters,omitempty"`
	// DisplayName Name of the device health script
	DisplayName *string `json:"displayName,omitempty"`
	// EnforceSignatureCheck Indicate whether the script signature needs be checked
	EnforceSignatureCheck *bool `json:"enforceSignatureCheck,omitempty"`
	// HighestAvailableVersion Highest available version for a Microsoft Proprietary script
	HighestAvailableVersion *string `json:"highestAvailableVersion,omitempty"`
	// IsGlobalScript Determines if this is Microsoft Proprietary Script. Proprietary scripts are read-only
	IsGlobalScript *bool `json:"isGlobalScript,omitempty"`
	// LastModifiedDateTime The timestamp of when the device health script was modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Publisher Name of the device health script publisher
	Publisher *string `json:"publisher,omitempty"`
	// RemediationScriptContent The entire content of the remediation powershell script
	RemediationScriptContent *Binary `json:"remediationScriptContent,omitempty"`
	// RemediationScriptParameters List of ComplexType RemediationScriptParameters objects.
	RemediationScriptParameters []DeviceHealthScriptParameter `json:"remediationScriptParameters,omitempty"`
	// RoleScopeTagIDs List of Scope Tag IDs for the device health script
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// RunAs32Bit Indicate whether PowerShell script(s) should run as 32-bit
	RunAs32Bit *bool `json:"runAs32Bit,omitempty"`
	// RunAsAccount Indicates the type of execution context
	RunAsAccount *RunAsAccountType `json:"runAsAccount,omitempty"`
	// Version Version of the device health script
	Version *string `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []DeviceHealthScriptAssignment `json:"assignments,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceHealthScriptDeviceState `json:"deviceRunStates,omitempty"`
	// RunSummary undocumented
	RunSummary *DeviceHealthScriptRunSummary `json:"runSummary,omitempty"`
}

// DeviceHealthScriptAssignment Contains properties used to assign a device management script to a group.
type DeviceHealthScriptAssignment struct {
	// Entity is the base model of DeviceHealthScriptAssignment
	Entity
	// RunRemediationScript Determine whether we want to run detection script only or run both detection script and remediation script
	RunRemediationScript *bool `json:"runRemediationScript,omitempty"`
	// RunSchedule Script run schedule for the target group
	RunSchedule *DeviceHealthScriptRunSchedule `json:"runSchedule,omitempty"`
	// Target The Azure Active Directory group we are targeting the script to
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceHealthScriptBooleanParameter Properties of the  Booolean script parameter.
type DeviceHealthScriptBooleanParameter struct {
	// DeviceHealthScriptParameter is the base model of DeviceHealthScriptBooleanParameter
	DeviceHealthScriptParameter
	// DefaultValue The default value of boolean param
	DefaultValue *bool `json:"defaultValue,omitempty"`
}

// DeviceHealthScriptDailySchedule Device health script daily schedule.
type DeviceHealthScriptDailySchedule struct {
	// DeviceHealthScriptTimeSchedule is the base model of DeviceHealthScriptDailySchedule
	DeviceHealthScriptTimeSchedule
}

// DeviceHealthScriptDeviceState Contains properties for device run state of the device health script.
type DeviceHealthScriptDeviceState struct {
	// Entity is the base model of DeviceHealthScriptDeviceState
	Entity
	// AssignmentFilterIDs A list of the assignment filter ids used for health script applicability evaluation
	AssignmentFilterIDs []string `json:"assignmentFilterIds,omitempty"`
	// DetectionState Detection state from the lastest device health script execution
	DetectionState *RunState `json:"detectionState,omitempty"`
	// ExpectedStateUpdateDateTime The next timestamp of when the device health script is expected to execute
	ExpectedStateUpdateDateTime *time.Time `json:"expectedStateUpdateDateTime,omitempty"`
	// LastStateUpdateDateTime The last timestamp of when the device health script executed
	LastStateUpdateDateTime *time.Time `json:"lastStateUpdateDateTime,omitempty"`
	// LastSyncDateTime The last time that Intune Managment Extension synced with Intune
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// PostRemediationDetectionScriptError Error from the detection script after remediation
	PostRemediationDetectionScriptError *string `json:"postRemediationDetectionScriptError,omitempty"`
	// PostRemediationDetectionScriptOutput Detection script output after remediation
	PostRemediationDetectionScriptOutput *string `json:"postRemediationDetectionScriptOutput,omitempty"`
	// PreRemediationDetectionScriptError Error from the detection script before remediation
	PreRemediationDetectionScriptError *string `json:"preRemediationDetectionScriptError,omitempty"`
	// PreRemediationDetectionScriptOutput Output of the detection script before remediation
	PreRemediationDetectionScriptOutput *string `json:"preRemediationDetectionScriptOutput,omitempty"`
	// RemediationScriptError Error output of the remediation script
	RemediationScriptError *string `json:"remediationScriptError,omitempty"`
	// RemediationState Remediation state from the lastest device health script execution
	RemediationState *RemediationState `json:"remediationState,omitempty"`
	// ManagedDevice undocumented
	ManagedDevice *ManagedDevice `json:"managedDevice,omitempty"`
}

// DeviceHealthScriptHourlySchedule Type of Device health script hourly schedule.
type DeviceHealthScriptHourlySchedule struct {
	// DeviceHealthScriptRunSchedule is the base model of DeviceHealthScriptHourlySchedule
	DeviceHealthScriptRunSchedule
}

// DeviceHealthScriptIntegerParameter Properties of the  Integer script parameter.
type DeviceHealthScriptIntegerParameter struct {
	// DeviceHealthScriptParameter is the base model of DeviceHealthScriptIntegerParameter
	DeviceHealthScriptParameter
	// DefaultValue The default value of Integer param. Valid values -2147483648 to 2147483647
	DefaultValue *int `json:"defaultValue,omitempty"`
}

// DeviceHealthScriptParameter Base properties of the script parameter.
type DeviceHealthScriptParameter struct {
	// Object is the base model of DeviceHealthScriptParameter
	Object
	// ApplyDefaultValueWhenNotAssigned Whether Apply DefaultValue When Not Assigned
	ApplyDefaultValueWhenNotAssigned *bool `json:"applyDefaultValueWhenNotAssigned,omitempty"`
	// Description The description of the param
	Description *string `json:"description,omitempty"`
	// IsRequired Whether the param is required
	IsRequired *bool `json:"isRequired,omitempty"`
	// Name The name of the param
	Name *string `json:"name,omitempty"`
}

// DeviceHealthScriptRemediationHistory The number of devices remediated by a device health script on a given date with the last modified time.
type DeviceHealthScriptRemediationHistory struct {
	// Object is the base model of DeviceHealthScriptRemediationHistory
	Object
	// HistoryData The number of devices remediated by the device health script on the given date.
	HistoryData []DeviceHealthScriptRemediationHistoryData `json:"historyData,omitempty"`
	// LastModifiedDateTime The date on which the results history is calculated for the healthscript.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// DeviceHealthScriptRemediationHistoryData The number of devices remediated by a device health script on a given date.
type DeviceHealthScriptRemediationHistoryData struct {
	// Object is the base model of DeviceHealthScriptRemediationHistoryData
	Object
	// Date The date on which devices were remediated by the device health script.
	Date *Date `json:"date,omitempty"`
	// NoIssueDeviceCount The number of devices that were found to have no issue by the device health script.
	NoIssueDeviceCount *int `json:"noIssueDeviceCount,omitempty"`
	// RemediatedDeviceCount The number of devices remediated by the device health script.
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
}

// DeviceHealthScriptRemediationSummary The number of device health scripts deployed and the number of devices the scripts remediated.
type DeviceHealthScriptRemediationSummary struct {
	// Object is the base model of DeviceHealthScriptRemediationSummary
	Object
	// RemediatedDeviceCount The number of devices remediated by device health scripts.
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// ScriptCount The number of device health scripts deployed.
	ScriptCount *int `json:"scriptCount,omitempty"`
}

// DeviceHealthScriptRunOnceSchedule Device health script run once schedule.
type DeviceHealthScriptRunOnceSchedule struct {
	// DeviceHealthScriptTimeSchedule is the base model of DeviceHealthScriptRunOnceSchedule
	DeviceHealthScriptTimeSchedule
	// Date The date the script is scheduled to run. This collection can contain a maximum of 20 elements.
	Date *Date `json:"date,omitempty"`
}

// DeviceHealthScriptRunSchedule Base type of Device health script run schedule.
type DeviceHealthScriptRunSchedule struct {
	// Object is the base model of DeviceHealthScriptRunSchedule
	Object
	// Interval The x value of every x hours for hourly schedule, every x days for Daily Schedule, every x weeks for weekly schedule, every x months for Monthly Schedule. Valid values 1 to 23
	Interval *int `json:"interval,omitempty"`
}

// DeviceHealthScriptRunSummary Contains properties for the run summary of a device management script.
type DeviceHealthScriptRunSummary struct {
	// Entity is the base model of DeviceHealthScriptRunSummary
	Entity
	// DetectionScriptErrorDeviceCount Number of devices on which the detection script execution encountered an error and did not complete
	DetectionScriptErrorDeviceCount *int `json:"detectionScriptErrorDeviceCount,omitempty"`
	// DetectionScriptNotApplicableDeviceCount Number of devices for which the detection script was not applicable
	DetectionScriptNotApplicableDeviceCount *int `json:"detectionScriptNotApplicableDeviceCount,omitempty"`
	// DetectionScriptPendingDeviceCount Number of devices which have not yet run the latest version of the device health script
	DetectionScriptPendingDeviceCount *int `json:"detectionScriptPendingDeviceCount,omitempty"`
	// IssueDetectedDeviceCount Number of devices for which the detection script found an issue
	IssueDetectedDeviceCount *int `json:"issueDetectedDeviceCount,omitempty"`
	// IssueRemediatedCumulativeDeviceCount Number of devices that were remediated over the last 30 days
	IssueRemediatedCumulativeDeviceCount *int `json:"issueRemediatedCumulativeDeviceCount,omitempty"`
	// IssueRemediatedDeviceCount Number of devices for which the remediation script was able to resolve the detected issue
	IssueRemediatedDeviceCount *int `json:"issueRemediatedDeviceCount,omitempty"`
	// IssueReoccurredDeviceCount Number of devices for which the remediation script executed successfully but failed to resolve the detected issue
	IssueReoccurredDeviceCount *int `json:"issueReoccurredDeviceCount,omitempty"`
	// LastScriptRunDateTime Last run time for the script across all devices
	LastScriptRunDateTime *time.Time `json:"lastScriptRunDateTime,omitempty"`
	// NoIssueDetectedDeviceCount Number of devices for which the detection script did not find an issue and the device is healthy
	NoIssueDetectedDeviceCount *int `json:"noIssueDetectedDeviceCount,omitempty"`
	// RemediationScriptErrorDeviceCount Number of devices for which the remediation script execution encountered an error and did not complete
	RemediationScriptErrorDeviceCount *int `json:"remediationScriptErrorDeviceCount,omitempty"`
	// RemediationSkippedDeviceCount Number of devices for which remediation was skipped
	RemediationSkippedDeviceCount *int `json:"remediationSkippedDeviceCount,omitempty"`
}

// DeviceHealthScriptStringParameter Properties of the  String script parameter.
type DeviceHealthScriptStringParameter struct {
	// DeviceHealthScriptParameter is the base model of DeviceHealthScriptStringParameter
	DeviceHealthScriptParameter
	// DefaultValue The default value of string param
	DefaultValue *string `json:"defaultValue,omitempty"`
}

// DeviceHealthScriptTimeSchedule Base type of Device health script time schedule.
type DeviceHealthScriptTimeSchedule struct {
	// DeviceHealthScriptRunSchedule is the base model of DeviceHealthScriptTimeSchedule
	DeviceHealthScriptRunSchedule
	// Time At what time the script is scheduled to run. This collection can contain a maximum of 20 elements.
	Time *TimeOfDay `json:"time,omitempty"`
	// UseUtc Indicate if the time is Utc or client local time.
	UseUtc *bool `json:"useUtc,omitempty"`
}

// DeviceInfo undocumented
type DeviceInfo struct {
	// Object is the base model of DeviceInfo
	Object
	// CaptureDeviceDriver undocumented
	CaptureDeviceDriver *string `json:"captureDeviceDriver,omitempty"`
	// CaptureDeviceName undocumented
	CaptureDeviceName *string `json:"captureDeviceName,omitempty"`
	// CaptureNotFunctioningEventRatio undocumented
	CaptureNotFunctioningEventRatio *float64 `json:"captureNotFunctioningEventRatio,omitempty"`
	// CPUInsufficentEventRatio undocumented
	CPUInsufficentEventRatio *float64 `json:"cpuInsufficentEventRatio,omitempty"`
	// DeviceClippingEventRatio undocumented
	DeviceClippingEventRatio *float64 `json:"deviceClippingEventRatio,omitempty"`
	// DeviceGlitchEventRatio undocumented
	DeviceGlitchEventRatio *float64 `json:"deviceGlitchEventRatio,omitempty"`
	// HowlingEventCount undocumented
	HowlingEventCount *int `json:"howlingEventCount,omitempty"`
	// InitialSignalLevelRootMeanSquare undocumented
	InitialSignalLevelRootMeanSquare *float64 `json:"initialSignalLevelRootMeanSquare,omitempty"`
	// LowSpeechLevelEventRatio undocumented
	LowSpeechLevelEventRatio *float64 `json:"lowSpeechLevelEventRatio,omitempty"`
	// LowSpeechToNoiseEventRatio undocumented
	LowSpeechToNoiseEventRatio *float64 `json:"lowSpeechToNoiseEventRatio,omitempty"`
	// MicGlitchRate undocumented
	MicGlitchRate *float64 `json:"micGlitchRate,omitempty"`
	// ReceivedNoiseLevel undocumented
	ReceivedNoiseLevel *int `json:"receivedNoiseLevel,omitempty"`
	// ReceivedSignalLevel undocumented
	ReceivedSignalLevel *int `json:"receivedSignalLevel,omitempty"`
	// RenderDeviceDriver undocumented
	RenderDeviceDriver *string `json:"renderDeviceDriver,omitempty"`
	// RenderDeviceName undocumented
	RenderDeviceName *string `json:"renderDeviceName,omitempty"`
	// RenderMuteEventRatio undocumented
	RenderMuteEventRatio *float64 `json:"renderMuteEventRatio,omitempty"`
	// RenderNotFunctioningEventRatio undocumented
	RenderNotFunctioningEventRatio *float64 `json:"renderNotFunctioningEventRatio,omitempty"`
	// RenderZeroVolumeEventRatio undocumented
	RenderZeroVolumeEventRatio *float64 `json:"renderZeroVolumeEventRatio,omitempty"`
	// SentNoiseLevel undocumented
	SentNoiseLevel *int `json:"sentNoiseLevel,omitempty"`
	// SentSignalLevel undocumented
	SentSignalLevel *int `json:"sentSignalLevel,omitempty"`
	// SpeakerGlitchRate undocumented
	SpeakerGlitchRate *float64 `json:"speakerGlitchRate,omitempty"`
}

// DeviceInstallState Contains properties for the installation state for a device.
type DeviceInstallState struct {
	// Entity is the base model of DeviceInstallState
	Entity
	// DeviceID Device Id.
	DeviceID *string `json:"deviceId,omitempty"`
	// DeviceName Device name.
	DeviceName *string `json:"deviceName,omitempty"`
	// ErrorCode The error code for install failures.
	ErrorCode *string `json:"errorCode,omitempty"`
	// InstallState The install state of the eBook.
	InstallState *InstallState `json:"installState,omitempty"`
	// LastSyncDateTime Last sync date and time.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// OsDescription OS Description.
	OsDescription *string `json:"osDescription,omitempty"`
	// OsVersion OS Version.
	OsVersion *string `json:"osVersion,omitempty"`
	// UserName Device User Name.
	UserName *string `json:"userName,omitempty"`
}

// DeviceKey undocumented
type DeviceKey struct {
	// Object is the base model of DeviceKey
	Object
	// DeviceID undocumented
	DeviceID *UUID `json:"deviceId,omitempty"`
	// KeyMaterial undocumented
	KeyMaterial *Binary `json:"keyMaterial,omitempty"`
	// KeyType undocumented
	KeyType *string `json:"keyType,omitempty"`
}

// DeviceLogCollectionRequestObject Windows Log Collection request entity.
type DeviceLogCollectionRequestObject struct {
	// Object is the base model of DeviceLogCollectionRequestObject
	Object
	// ID The unique identifier
	ID *string `json:"id,omitempty"`
	// TemplateType The template type that is sent with the collection request
	TemplateType *DeviceLogCollectionTemplateType `json:"templateType,omitempty"`
}

// DeviceLogCollectionResponse Windows Log Collection request entity.
type DeviceLogCollectionResponse struct {
	// Entity is the base model of DeviceLogCollectionResponse
	Entity
	// ErrorCode The error code, if any. Valid values -9.22337203685478E+18 to 9.22337203685478E+18
	ErrorCode *int `json:"errorCode,omitempty"`
	// ExpirationDateTimeUTC The DateTime of the expiration of the logs
	ExpirationDateTimeUTC *time.Time `json:"expirationDateTimeUTC,omitempty"`
	// InitiatedByUserPrincipalName The UPN for who initiated the request
	InitiatedByUserPrincipalName *string `json:"initiatedByUserPrincipalName,omitempty"`
	// ManagedDeviceID The device Id
	ManagedDeviceID *UUID `json:"managedDeviceId,omitempty"`
	// ReceivedDateTimeUTC The DateTime the request was received
	ReceivedDateTimeUTC *time.Time `json:"receivedDateTimeUTC,omitempty"`
	// RequestedDateTimeUTC The DateTime of the request
	RequestedDateTimeUTC *time.Time `json:"requestedDateTimeUTC,omitempty"`
	// Size The size of the logs. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
	Size *float64 `json:"size,omitempty"`
	// Status The status of the log collection request
	Status *string `json:"status,omitempty"`
}

// DeviceManagement Singleton that acts as container for a collection of UserPFXCertificate entities.
type DeviceManagement struct {
	// Entity is the base model of DeviceManagement
	Entity
	// DeviceComplianceReportSummarizationDateTime The last requested time of device compliance reporting for this account. This property is read-only.
	DeviceComplianceReportSummarizationDateTime *time.Time `json:"deviceComplianceReportSummarizationDateTime,omitempty"`
	// IntuneAccountID Intune Account Id for given tenant
	IntuneAccountID *UUID `json:"intuneAccountId,omitempty"`
	// LastReportAggregationDateTime The last modified time of reporting for this account. This property is read-only.
	LastReportAggregationDateTime *time.Time `json:"lastReportAggregationDateTime,omitempty"`
	// LegacyPcManangementEnabled The property to enable Non-MDM managed legacy PC management for this account. This property is read-only.
	LegacyPcManangementEnabled *bool `json:"legacyPcManangementEnabled,omitempty"`
	// MaximumDepTokens Maximum number of dep tokens allowed per-tenant.
	MaximumDepTokens *int `json:"maximumDepTokens,omitempty"`
	// Settings Account level settings.
	Settings *DeviceManagementSettings `json:"settings,omitempty"`
	// UnlicensedAdminstratorsEnabled When enabled, users assigned as administrators via Role Assignment Memberships do not require an assigned Intune license. Prior to this, only Intune licensed users were granted permissions with an Intune role unless they were assigned a role via Azure Active Directory. You are limited to 350 unlicensed direct members for each AAD security group in a role assignment, but you can assign multiple AAD security groups to a role if you need to support more than 350 unlicensed administrators. Licensed administrators are unaffected, do not have to be direct members, nor does the 350 member limit apply. This property is read-only.
	UnlicensedAdminstratorsEnabled *bool `json:"unlicensedAdminstratorsEnabled,omitempty"`
	// IntuneBrand intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal.
	IntuneBrand *IntuneBrand `json:"intuneBrand,omitempty"`
	// AccountMoveCompletionDateTime The date & time when tenant data moved between scaleunits.
	AccountMoveCompletionDateTime *time.Time `json:"accountMoveCompletionDateTime,omitempty"`
	// AdminConsent Admin consent information.
	AdminConsent *AdminConsent `json:"adminConsent,omitempty"`
	// DeviceProtectionOverview Device protection overview.
	DeviceProtectionOverview *DeviceProtectionOverview `json:"deviceProtectionOverview,omitempty"`
	// ManagedDeviceCleanupSettings Device cleanup rule
	ManagedDeviceCleanupSettings *ManagedDeviceCleanupSettings `json:"managedDeviceCleanupSettings,omitempty"`
	// Subscriptions Tenant's Subscription.
	Subscriptions *DeviceManagementSubscriptions `json:"subscriptions,omitempty"`
	// SubscriptionState Tenant mobile device management subscription state.
	SubscriptionState *DeviceManagementSubscriptionState `json:"subscriptionState,omitempty"`
	// UserExperienceAnalyticsSettings User experience analytics device settings
	UserExperienceAnalyticsSettings *UserExperienceAnalyticsSettings `json:"userExperienceAnalyticsSettings,omitempty"`
	// WindowsMalwareOverview Malware overview for windows devices.
	WindowsMalwareOverview *WindowsMalwareOverview `json:"windowsMalwareOverview,omitempty"`
	// AndroidDeviceOwnerEnrollmentProfiles undocumented
	AndroidDeviceOwnerEnrollmentProfiles []AndroidDeviceOwnerEnrollmentProfile `json:"androidDeviceOwnerEnrollmentProfiles,omitempty"`
	// VirtualEndpoint undocumented
	VirtualEndpoint *VirtualEndpoint `json:"virtualEndpoint,omitempty"`
	// AndroidForWorkAppConfigurationSchemas undocumented
	AndroidForWorkAppConfigurationSchemas []AndroidForWorkAppConfigurationSchema `json:"androidForWorkAppConfigurationSchemas,omitempty"`
	// AndroidForWorkEnrollmentProfiles undocumented
	AndroidForWorkEnrollmentProfiles []AndroidForWorkEnrollmentProfile `json:"androidForWorkEnrollmentProfiles,omitempty"`
	// AndroidForWorkSettings undocumented
	AndroidForWorkSettings *AndroidForWorkSettings `json:"androidForWorkSettings,omitempty"`
	// AndroidManagedStoreAccountEnterpriseSettings undocumented
	AndroidManagedStoreAccountEnterpriseSettings *AndroidManagedStoreAccountEnterpriseSettings `json:"androidManagedStoreAccountEnterpriseSettings,omitempty"`
	// AndroidManagedStoreAppConfigurationSchemas undocumented
	AndroidManagedStoreAppConfigurationSchemas []AndroidManagedStoreAppConfigurationSchema `json:"androidManagedStoreAppConfigurationSchemas,omitempty"`
	// AuditEvents undocumented
	AuditEvents []AuditEvent `json:"auditEvents,omitempty"`
	// AssignmentFilters undocumented
	AssignmentFilters []DeviceAndAppManagementAssignmentFilter `json:"assignmentFilters,omitempty"`
	// ChromeOSOnboardingSettings undocumented
	ChromeOSOnboardingSettings []ChromeOSOnboardingSettings `json:"chromeOSOnboardingSettings,omitempty"`
	// TermsAndConditions undocumented
	TermsAndConditions []TermsAndConditions `json:"termsAndConditions,omitempty"`
	// AdvancedThreatProtectionOnboardingStateSummary undocumented
	AdvancedThreatProtectionOnboardingStateSummary *AdvancedThreatProtectionOnboardingStateSummary `json:"advancedThreatProtectionOnboardingStateSummary,omitempty"`
	// CartToClassAssociations undocumented
	CartToClassAssociations []CartToClassAssociation `json:"cartToClassAssociations,omitempty"`
	// DeviceCompliancePolicies undocumented
	DeviceCompliancePolicies []DeviceCompliancePolicy `json:"deviceCompliancePolicies,omitempty"`
	// DeviceCompliancePolicyDeviceStateSummary undocumented
	DeviceCompliancePolicyDeviceStateSummary *DeviceCompliancePolicyDeviceStateSummary `json:"deviceCompliancePolicyDeviceStateSummary,omitempty"`
	// DeviceCompliancePolicySettingStateSummaries undocumented
	DeviceCompliancePolicySettingStateSummaries []DeviceCompliancePolicySettingStateSummary `json:"deviceCompliancePolicySettingStateSummaries,omitempty"`
	// DeviceConfigurationConflictSummary undocumented
	DeviceConfigurationConflictSummary []DeviceConfigurationConflictSummary `json:"deviceConfigurationConflictSummary,omitempty"`
	// DeviceConfigurationDeviceStateSummaries undocumented
	DeviceConfigurationDeviceStateSummaries *DeviceConfigurationDeviceStateSummary `json:"deviceConfigurationDeviceStateSummaries,omitempty"`
	// DeviceConfigurationRestrictedAppsViolations undocumented
	DeviceConfigurationRestrictedAppsViolations []RestrictedAppsViolation `json:"deviceConfigurationRestrictedAppsViolations,omitempty"`
	// DeviceConfigurations undocumented
	DeviceConfigurations []DeviceConfiguration `json:"deviceConfigurations,omitempty"`
	// DeviceConfigurationsAllManagedDeviceCertificateStates undocumented
	DeviceConfigurationsAllManagedDeviceCertificateStates []ManagedAllDeviceCertificateState `json:"deviceConfigurationsAllManagedDeviceCertificateStates,omitempty"`
	// DeviceConfigurationUserStateSummaries undocumented
	DeviceConfigurationUserStateSummaries *DeviceConfigurationUserStateSummary `json:"deviceConfigurationUserStateSummaries,omitempty"`
	// IOSUpdateStatuses undocumented
	IOSUpdateStatuses []IOSUpdateDeviceStatus `json:"iosUpdateStatuses,omitempty"`
	// MacOSSoftwareUpdateAccountSummaries undocumented
	MacOSSoftwareUpdateAccountSummaries []MacOSSoftwareUpdateAccountSummary `json:"macOSSoftwareUpdateAccountSummaries,omitempty"`
	// ManagedDeviceEncryptionStates undocumented
	ManagedDeviceEncryptionStates []ManagedDeviceEncryptionState `json:"managedDeviceEncryptionStates,omitempty"`
	// NDESConnectors undocumented
	NDESConnectors []NDESConnector `json:"ndesConnectors,omitempty"`
	// SoftwareUpdateStatusSummary undocumented
	SoftwareUpdateStatusSummary *SoftwareUpdateStatusSummary `json:"softwareUpdateStatusSummary,omitempty"`
	// ConfigurationCategories undocumented
	ConfigurationCategories []DeviceManagementConfigurationCategory `json:"configurationCategories,omitempty"`
	// ConfigurationPolicies undocumented
	ConfigurationPolicies []DeviceManagementConfigurationPolicy `json:"configurationPolicies,omitempty"`
	// ConfigurationPolicyTemplates undocumented
	ConfigurationPolicyTemplates []DeviceManagementConfigurationPolicyTemplate `json:"configurationPolicyTemplates,omitempty"`
	// ConfigurationSettings undocumented
	ConfigurationSettings []DeviceManagementConfigurationSettingDefinition `json:"configurationSettings,omitempty"`
	// ReusablePolicySettings undocumented
	ReusablePolicySettings []DeviceManagementReusablePolicySetting `json:"reusablePolicySettings,omitempty"`
	// ReusableSettings undocumented
	ReusableSettings []DeviceManagementConfigurationSettingDefinition `json:"reusableSettings,omitempty"`
	// TemplateSettings undocumented
	TemplateSettings []DeviceManagementConfigurationSettingTemplate `json:"templateSettings,omitempty"`
	// ComplianceManagementPartners undocumented
	ComplianceManagementPartners []ComplianceManagementPartner `json:"complianceManagementPartners,omitempty"`
	// ConditionalAccessSettings undocumented
	ConditionalAccessSettings *OnPremisesConditionalAccessSettings `json:"conditionalAccessSettings,omitempty"`
	// DeviceCategories undocumented
	DeviceCategories []DeviceCategory `json:"deviceCategories,omitempty"`
	// DeviceEnrollmentConfigurations undocumented
	DeviceEnrollmentConfigurations []DeviceEnrollmentConfiguration `json:"deviceEnrollmentConfigurations,omitempty"`
	// DeviceManagementPartners undocumented
	DeviceManagementPartners []DeviceManagementPartner `json:"deviceManagementPartners,omitempty"`
	// ExchangeConnectors undocumented
	ExchangeConnectors []DeviceManagementExchangeConnector `json:"exchangeConnectors,omitempty"`
	// ExchangeOnPremisesPolicies undocumented
	ExchangeOnPremisesPolicies []DeviceManagementExchangeOnPremisesPolicy `json:"exchangeOnPremisesPolicies,omitempty"`
	// ExchangeOnPremisesPolicy undocumented
	ExchangeOnPremisesPolicy *DeviceManagementExchangeOnPremisesPolicy `json:"exchangeOnPremisesPolicy,omitempty"`
	// MobileThreatDefenseConnectors undocumented
	MobileThreatDefenseConnectors []MobileThreatDefenseConnector `json:"mobileThreatDefenseConnectors,omitempty"`
	// Categories undocumented
	Categories []DeviceManagementSettingCategory `json:"categories,omitempty"`
	// Intents undocumented
	Intents []DeviceManagementIntent `json:"intents,omitempty"`
	// SettingDefinitions undocumented
	SettingDefinitions []DeviceManagementSettingDefinition `json:"settingDefinitions,omitempty"`
	// Templates undocumented
	Templates []DeviceManagementTemplate `json:"templates,omitempty"`
	// ApplePushNotificationCertificate undocumented
	ApplePushNotificationCertificate *ApplePushNotificationCertificate `json:"applePushNotificationCertificate,omitempty"`
	// CloudPCConnectivityIssues undocumented
	CloudPCConnectivityIssues []CloudPCConnectivityIssue `json:"cloudPCConnectivityIssues,omitempty"`
	// ComanagedDevices undocumented
	ComanagedDevices []ManagedDevice `json:"comanagedDevices,omitempty"`
	// ComanagementEligibleDevices undocumented
	ComanagementEligibleDevices []ComanagementEligibleDevice `json:"comanagementEligibleDevices,omitempty"`
	// DataSharingConsents undocumented
	DataSharingConsents []DataSharingConsent `json:"dataSharingConsents,omitempty"`
	// DetectedApps undocumented
	DetectedApps []DetectedApp `json:"detectedApps,omitempty"`
	// DeviceComplianceScripts undocumented
	DeviceComplianceScripts []DeviceComplianceScript `json:"deviceComplianceScripts,omitempty"`
	// DeviceCustomAttributeShellScripts undocumented
	DeviceCustomAttributeShellScripts []DeviceCustomAttributeShellScript `json:"deviceCustomAttributeShellScripts,omitempty"`
	// DeviceHealthScripts undocumented
	DeviceHealthScripts []DeviceHealthScript `json:"deviceHealthScripts,omitempty"`
	// DeviceManagementScripts undocumented
	DeviceManagementScripts []DeviceManagementScript `json:"deviceManagementScripts,omitempty"`
	// DeviceShellScripts undocumented
	DeviceShellScripts []DeviceShellScript `json:"deviceShellScripts,omitempty"`
	// ManagedDeviceOverview undocumented
	ManagedDeviceOverview *ManagedDeviceOverview `json:"managedDeviceOverview,omitempty"`
	// ManagedDevices undocumented
	ManagedDevices []ManagedDevice `json:"managedDevices,omitempty"`
	// MobileAppTroubleshootingEvents undocumented
	MobileAppTroubleshootingEvents []MobileAppTroubleshootingEvent `json:"mobileAppTroubleshootingEvents,omitempty"`
	// RemoteActionAudits undocumented
	RemoteActionAudits []RemoteActionAudit `json:"remoteActionAudits,omitempty"`
	// UserExperienceAnalyticsAppHealthApplicationPerformance undocumented
	UserExperienceAnalyticsAppHealthApplicationPerformance []UserExperienceAnalyticsAppHealthApplicationPerformance `json:"userExperienceAnalyticsAppHealthApplicationPerformance,omitempty"`
	// UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion undocumented
	UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion []UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion `json:"userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion,omitempty"`
	// UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion undocumented
	UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion []UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion `json:"userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion,omitempty"`
	// UserExperienceAnalyticsAppHealthDeviceModelPerformance undocumented
	UserExperienceAnalyticsAppHealthDeviceModelPerformance []UserExperienceAnalyticsAppHealthDeviceModelPerformance `json:"userExperienceAnalyticsAppHealthDeviceModelPerformance,omitempty"`
	// UserExperienceAnalyticsAppHealthDevicePerformance undocumented
	UserExperienceAnalyticsAppHealthDevicePerformance []UserExperienceAnalyticsAppHealthDevicePerformance `json:"userExperienceAnalyticsAppHealthDevicePerformance,omitempty"`
	// UserExperienceAnalyticsAppHealthDevicePerformanceDetails undocumented
	UserExperienceAnalyticsAppHealthDevicePerformanceDetails []UserExperienceAnalyticsAppHealthDevicePerformanceDetails `json:"userExperienceAnalyticsAppHealthDevicePerformanceDetails,omitempty"`
	// UserExperienceAnalyticsAppHealthOSVersionPerformance undocumented
	UserExperienceAnalyticsAppHealthOSVersionPerformance []UserExperienceAnalyticsAppHealthOSVersionPerformance `json:"userExperienceAnalyticsAppHealthOSVersionPerformance,omitempty"`
	// UserExperienceAnalyticsAppHealthOverview undocumented
	UserExperienceAnalyticsAppHealthOverview *UserExperienceAnalyticsCategory `json:"userExperienceAnalyticsAppHealthOverview,omitempty"`
	// UserExperienceAnalyticsBaselines undocumented
	UserExperienceAnalyticsBaselines []UserExperienceAnalyticsBaseline `json:"userExperienceAnalyticsBaselines,omitempty"`
	// UserExperienceAnalyticsCategories undocumented
	UserExperienceAnalyticsCategories []UserExperienceAnalyticsCategory `json:"userExperienceAnalyticsCategories,omitempty"`
	// UserExperienceAnalyticsDeviceMetricHistory undocumented
	UserExperienceAnalyticsDeviceMetricHistory []UserExperienceAnalyticsMetricHistory `json:"userExperienceAnalyticsDeviceMetricHistory,omitempty"`
	// UserExperienceAnalyticsDevicePerformance undocumented
	UserExperienceAnalyticsDevicePerformance []UserExperienceAnalyticsDevicePerformance `json:"userExperienceAnalyticsDevicePerformance,omitempty"`
	// UserExperienceAnalyticsDeviceScores undocumented
	UserExperienceAnalyticsDeviceScores []UserExperienceAnalyticsDeviceScores `json:"userExperienceAnalyticsDeviceScores,omitempty"`
	// UserExperienceAnalyticsDeviceStartupHistory undocumented
	UserExperienceAnalyticsDeviceStartupHistory []UserExperienceAnalyticsDeviceStartupHistory `json:"userExperienceAnalyticsDeviceStartupHistory,omitempty"`
	// UserExperienceAnalyticsDeviceStartupProcesses undocumented
	UserExperienceAnalyticsDeviceStartupProcesses []UserExperienceAnalyticsDeviceStartupProcess `json:"userExperienceAnalyticsDeviceStartupProcesses,omitempty"`
	// UserExperienceAnalyticsDeviceStartupProcessPerformance undocumented
	UserExperienceAnalyticsDeviceStartupProcessPerformance []UserExperienceAnalyticsDeviceStartupProcessPerformance `json:"userExperienceAnalyticsDeviceStartupProcessPerformance,omitempty"`
	// UserExperienceAnalyticsDevicesWithoutCloudIdentity undocumented
	UserExperienceAnalyticsDevicesWithoutCloudIdentity []UserExperienceAnalyticsDeviceWithoutCloudIdentity `json:"userExperienceAnalyticsDevicesWithoutCloudIdentity,omitempty"`
	// UserExperienceAnalyticsImpactingProcess undocumented
	UserExperienceAnalyticsImpactingProcess []UserExperienceAnalyticsImpactingProcess `json:"userExperienceAnalyticsImpactingProcess,omitempty"`
	// UserExperienceAnalyticsMetricHistory undocumented
	UserExperienceAnalyticsMetricHistory []UserExperienceAnalyticsMetricHistory `json:"userExperienceAnalyticsMetricHistory,omitempty"`
	// UserExperienceAnalyticsNotAutopilotReadyDevice undocumented
	UserExperienceAnalyticsNotAutopilotReadyDevice []UserExperienceAnalyticsNotAutopilotReadyDevice `json:"userExperienceAnalyticsNotAutopilotReadyDevice,omitempty"`
	// UserExperienceAnalyticsOverview undocumented
	UserExperienceAnalyticsOverview *UserExperienceAnalyticsOverview `json:"userExperienceAnalyticsOverview,omitempty"`
	// UserExperienceAnalyticsRegressionSummary undocumented
	UserExperienceAnalyticsRegressionSummary *UserExperienceAnalyticsRegressionSummary `json:"userExperienceAnalyticsRegressionSummary,omitempty"`
	// UserExperienceAnalyticsRemoteConnection undocumented
	UserExperienceAnalyticsRemoteConnection []UserExperienceAnalyticsRemoteConnection `json:"userExperienceAnalyticsRemoteConnection,omitempty"`
	// UserExperienceAnalyticsResourcePerformance undocumented
	UserExperienceAnalyticsResourcePerformance []UserExperienceAnalyticsResourcePerformance `json:"userExperienceAnalyticsResourcePerformance,omitempty"`
	// UserExperienceAnalyticsScoreHistory undocumented
	UserExperienceAnalyticsScoreHistory []UserExperienceAnalyticsScoreHistory `json:"userExperienceAnalyticsScoreHistory,omitempty"`
	// UserExperienceAnalyticsWorkFromAnywhereMetrics undocumented
	UserExperienceAnalyticsWorkFromAnywhereMetrics []UserExperienceAnalyticsWorkFromAnywhereMetric `json:"userExperienceAnalyticsWorkFromAnywhereMetrics,omitempty"`
	// WindowsMalwareInformation undocumented
	WindowsMalwareInformation []WindowsMalwareInformation `json:"windowsMalwareInformation,omitempty"`
	// DerivedCredentials undocumented
	DerivedCredentials []DeviceManagementDerivedCredentialSettings `json:"derivedCredentials,omitempty"`
	// ResourceAccessProfiles undocumented
	ResourceAccessProfiles []DeviceManagementResourceAccessProfileBase `json:"resourceAccessProfiles,omitempty"`
	// AppleUserInitiatedEnrollmentProfiles undocumented
	AppleUserInitiatedEnrollmentProfiles []AppleUserInitiatedEnrollmentProfile `json:"appleUserInitiatedEnrollmentProfiles,omitempty"`
	// DepOnboardingSettings undocumented
	DepOnboardingSettings []DepOnboardingSetting `json:"depOnboardingSettings,omitempty"`
	// ImportedDeviceIdentities undocumented
	ImportedDeviceIdentities []ImportedDeviceIdentity `json:"importedDeviceIdentities,omitempty"`
	// ImportedWindowsAutopilotDeviceIdentities undocumented
	ImportedWindowsAutopilotDeviceIdentities []ImportedWindowsAutopilotDeviceIdentity `json:"importedWindowsAutopilotDeviceIdentities,omitempty"`
	// WindowsAutopilotDeploymentProfiles undocumented
	WindowsAutopilotDeploymentProfiles []WindowsAutopilotDeploymentProfile `json:"windowsAutopilotDeploymentProfiles,omitempty"`
	// WindowsAutopilotDeviceIdentities undocumented
	WindowsAutopilotDeviceIdentities []WindowsAutopilotDeviceIdentity `json:"windowsAutopilotDeviceIdentities,omitempty"`
	// WindowsAutopilotSettings undocumented
	WindowsAutopilotSettings *WindowsAutopilotSettings `json:"windowsAutopilotSettings,omitempty"`
	// ManagementConditions undocumented
	ManagementConditions []ManagementCondition `json:"managementConditions,omitempty"`
	// ManagementConditionStatements undocumented
	ManagementConditionStatements []ManagementConditionStatement `json:"managementConditionStatements,omitempty"`
	// GroupPolicyMigrationReports undocumented
	GroupPolicyMigrationReports []GroupPolicyMigrationReport `json:"groupPolicyMigrationReports,omitempty"`
	// GroupPolicyObjectFiles undocumented
	GroupPolicyObjectFiles []GroupPolicyObjectFile `json:"groupPolicyObjectFiles,omitempty"`
	// GroupPolicyCategories undocumented
	GroupPolicyCategories []GroupPolicyCategory `json:"groupPolicyCategories,omitempty"`
	// GroupPolicyConfigurations undocumented
	GroupPolicyConfigurations []GroupPolicyConfiguration `json:"groupPolicyConfigurations,omitempty"`
	// GroupPolicyDefinitionFiles undocumented
	GroupPolicyDefinitionFiles []GroupPolicyDefinitionFile `json:"groupPolicyDefinitionFiles,omitempty"`
	// GroupPolicyDefinitions undocumented
	GroupPolicyDefinitions []GroupPolicyDefinition `json:"groupPolicyDefinitions,omitempty"`
	// GroupPolicyUploadedDefinitionFiles undocumented
	GroupPolicyUploadedDefinitionFiles []GroupPolicyUploadedDefinitionFile `json:"groupPolicyUploadedDefinitionFiles,omitempty"`
	// MicrosoftTunnelConfigurations undocumented
	MicrosoftTunnelConfigurations []MicrosoftTunnelConfiguration `json:"microsoftTunnelConfigurations,omitempty"`
	// MicrosoftTunnelHealthThresholds undocumented
	MicrosoftTunnelHealthThresholds []MicrosoftTunnelHealthThreshold `json:"microsoftTunnelHealthThresholds,omitempty"`
	// MicrosoftTunnelServerLogCollectionResponses undocumented
	MicrosoftTunnelServerLogCollectionResponses []MicrosoftTunnelServerLogCollectionResponse `json:"microsoftTunnelServerLogCollectionResponses,omitempty"`
	// MicrosoftTunnelSites undocumented
	MicrosoftTunnelSites []MicrosoftTunnelSite `json:"microsoftTunnelSites,omitempty"`
	// NotificationMessageTemplates undocumented
	NotificationMessageTemplates []NotificationMessageTemplate `json:"notificationMessageTemplates,omitempty"`
	// DomainJoinConnectors undocumented
	DomainJoinConnectors []DeviceManagementDomainJoinConnector `json:"domainJoinConnectors,omitempty"`
	// ConfigManagerCollections undocumented
	ConfigManagerCollections []ConfigManagerCollection `json:"configManagerCollections,omitempty"`
	// ResourceOperations undocumented
	ResourceOperations []ResourceOperation `json:"resourceOperations,omitempty"`
	// RoleAssignments undocumented
	RoleAssignments []DeviceAndAppManagementRoleAssignment `json:"roleAssignments,omitempty"`
	// RoleDefinitions undocumented
	RoleDefinitions []RoleDefinition `json:"roleDefinitions,omitempty"`
	// RoleScopeTags undocumented
	RoleScopeTags []RoleScopeTag `json:"roleScopeTags,omitempty"`
	// RemoteAssistancePartners undocumented
	RemoteAssistancePartners []RemoteAssistancePartner `json:"remoteAssistancePartners,omitempty"`
	// Reports undocumented
	Reports *DeviceManagementReports `json:"reports,omitempty"`
	// EmbeddedSIMActivationCodePools undocumented
	EmbeddedSIMActivationCodePools []EmbeddedSIMActivationCodePool `json:"embeddedSIMActivationCodePools,omitempty"`
	// TelecomExpenseManagementPartners undocumented
	TelecomExpenseManagementPartners []TelecomExpenseManagementPartner `json:"telecomExpenseManagementPartners,omitempty"`
	// AutopilotEvents undocumented
	AutopilotEvents []DeviceManagementAutopilotEvent `json:"autopilotEvents,omitempty"`
	// TroubleshootingEvents undocumented
	TroubleshootingEvents []DeviceManagementTroubleshootingEvent `json:"troubleshootingEvents,omitempty"`
	// WindowsFeatureUpdateProfiles undocumented
	WindowsFeatureUpdateProfiles []WindowsFeatureUpdateProfile `json:"windowsFeatureUpdateProfiles,omitempty"`
	// WindowsQualityUpdateProfiles undocumented
	WindowsQualityUpdateProfiles []WindowsQualityUpdateProfile `json:"windowsQualityUpdateProfiles,omitempty"`
	// WindowsUpdateCatalogItems undocumented
	WindowsUpdateCatalogItems []WindowsUpdateCatalogItem `json:"windowsUpdateCatalogItems,omitempty"`
	// IntuneBrandingProfiles undocumented
	IntuneBrandingProfiles []IntuneBrandingProfile `json:"intuneBrandingProfiles,omitempty"`
	// WindowsInformationProtectionAppLearningSummaries undocumented
	WindowsInformationProtectionAppLearningSummaries []WindowsInformationProtectionAppLearningSummary `json:"windowsInformationProtectionAppLearningSummaries,omitempty"`
	// WindowsInformationProtectionNetworkLearningSummaries undocumented
	WindowsInformationProtectionNetworkLearningSummaries []WindowsInformationProtectionNetworkLearningSummary `json:"windowsInformationProtectionNetworkLearningSummaries,omitempty"`
	// UserPfxCertificates undocumented
	UserPfxCertificates []UserPFXCertificate `json:"userPfxCertificates,omitempty"`
}

// DeviceManagementAbstractComplexSettingDefinition Entity representing the defintion for an abstract complex setting
type DeviceManagementAbstractComplexSettingDefinition struct {
	// DeviceManagementSettingDefinition is the base model of DeviceManagementAbstractComplexSettingDefinition
	DeviceManagementSettingDefinition
	// Implementations List of definition IDs for all possible implementations of this abstract complex setting
	Implementations []string `json:"implementations,omitempty"`
}

// DeviceManagementAbstractComplexSettingInstance A setting instance representing a complex value for an abstract setting
type DeviceManagementAbstractComplexSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementAbstractComplexSettingInstance
	DeviceManagementSettingInstance
	// ImplementationID The definition ID for the chosen implementation of this complex setting
	ImplementationID *string `json:"implementationId,omitempty"`
	// Value undocumented
	Value []DeviceManagementSettingInstance `json:"value,omitempty"`
}

// DeviceManagementApplicabilityRuleDeviceMode undocumented
type DeviceManagementApplicabilityRuleDeviceMode struct {
	// Object is the base model of DeviceManagementApplicabilityRuleDeviceMode
	Object
	// DeviceMode Applicability rule for device mode.
	DeviceMode *Windows10DeviceModeType `json:"deviceMode,omitempty"`
	// Name Name for object.
	Name *string `json:"name,omitempty"`
	// RuleType Applicability Rule type.
	RuleType *DeviceManagementApplicabilityRuleType `json:"ruleType,omitempty"`
}

// DeviceManagementApplicabilityRuleOsEdition undocumented
type DeviceManagementApplicabilityRuleOsEdition struct {
	// Object is the base model of DeviceManagementApplicabilityRuleOsEdition
	Object
	// Name Name for object.
	Name *string `json:"name,omitempty"`
	// OsEditionTypes Applicability rule OS edition type.
	OsEditionTypes []Windows10EditionType `json:"osEditionTypes,omitempty"`
	// RuleType Applicability Rule type.
	RuleType *DeviceManagementApplicabilityRuleType `json:"ruleType,omitempty"`
}

// DeviceManagementApplicabilityRuleOsVersion undocumented
type DeviceManagementApplicabilityRuleOsVersion struct {
	// Object is the base model of DeviceManagementApplicabilityRuleOsVersion
	Object
	// MaxOSVersion Max OS version for Applicability Rule.
	MaxOSVersion *string `json:"maxOSVersion,omitempty"`
	// MinOSVersion Min OS version for Applicability Rule.
	MinOSVersion *string `json:"minOSVersion,omitempty"`
	// Name Name for object.
	Name *string `json:"name,omitempty"`
	// RuleType Applicability Rule type.
	RuleType *DeviceManagementApplicabilityRuleType `json:"ruleType,omitempty"`
}

// DeviceManagementAutopilotEvent Represents an Autopilot flow event.
type DeviceManagementAutopilotEvent struct {
	// Entity is the base model of DeviceManagementAutopilotEvent
	Entity
	// AccountSetupDuration Time spent in user ESP.
	AccountSetupDuration *Duration `json:"accountSetupDuration,omitempty"`
	// AccountSetupStatus Deployment status for the enrollment status page account setup phase.
	AccountSetupStatus *WindowsAutopilotDeploymentState `json:"accountSetupStatus,omitempty"`
	// DeploymentDuration Autopilot deployment duration including enrollment.
	DeploymentDuration *Duration `json:"deploymentDuration,omitempty"`
	// DeploymentEndDateTime Deployment end time.
	DeploymentEndDateTime *time.Time `json:"deploymentEndDateTime,omitempty"`
	// DeploymentStartDateTime Deployment start time.
	DeploymentStartDateTime *time.Time `json:"deploymentStartDateTime,omitempty"`
	// DeploymentState Deployment state like Success, Failure, InProgress, SuccessWithTimeout.
	DeploymentState *WindowsAutopilotDeploymentState `json:"deploymentState,omitempty"`
	// DeploymentTotalDuration Total deployment duration from enrollment to Desktop screen.
	DeploymentTotalDuration *Duration `json:"deploymentTotalDuration,omitempty"`
	// DeviceID Device id associated with the object
	DeviceID *string `json:"deviceId,omitempty"`
	// DevicePreparationDuration Time spent in device enrollment.
	DevicePreparationDuration *Duration `json:"devicePreparationDuration,omitempty"`
	// DeviceRegisteredDateTime Device registration date.
	DeviceRegisteredDateTime *time.Time `json:"deviceRegisteredDateTime,omitempty"`
	// DeviceSerialNumber Device serial number.
	DeviceSerialNumber *string `json:"deviceSerialNumber,omitempty"`
	// DeviceSetupDuration Time spent in device ESP.
	DeviceSetupDuration *Duration `json:"deviceSetupDuration,omitempty"`
	// DeviceSetupStatus Deployment status for the enrollment status page device setup phase.
	DeviceSetupStatus *WindowsAutopilotDeploymentState `json:"deviceSetupStatus,omitempty"`
	// EnrollmentFailureDetails Enrollment failure details.
	EnrollmentFailureDetails *string `json:"enrollmentFailureDetails,omitempty"`
	// EnrollmentStartDateTime Device enrollment start date.
	EnrollmentStartDateTime *time.Time `json:"enrollmentStartDateTime,omitempty"`
	// EnrollmentState Enrollment state like Enrolled, Failed.
	EnrollmentState *EnrollmentState `json:"enrollmentState,omitempty"`
	// EnrollmentType Enrollment type.
	EnrollmentType *WindowsAutopilotEnrollmentType `json:"enrollmentType,omitempty"`
	// EventDateTime Time when the event occurred .
	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
	// ManagedDeviceName Managed device name.
	ManagedDeviceName *string `json:"managedDeviceName,omitempty"`
	// OsVersion Device operating system version.
	OsVersion *string `json:"osVersion,omitempty"`
	// TargetedAppCount Count of applications targeted.
	TargetedAppCount *int `json:"targetedAppCount,omitempty"`
	// TargetedPolicyCount Count of policies targeted.
	TargetedPolicyCount *int `json:"targetedPolicyCount,omitempty"`
	// UserPrincipalName User principal name used to enroll the device.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Windows10EnrollmentCompletionPageConfigurationDisplayName Enrollment Status Page profile name
	Windows10EnrollmentCompletionPageConfigurationDisplayName *string `json:"windows10EnrollmentCompletionPageConfigurationDisplayName,omitempty"`
	// Windows10EnrollmentCompletionPageConfigurationID Enrollment Status Page profile ID
	Windows10EnrollmentCompletionPageConfigurationID *string `json:"windows10EnrollmentCompletionPageConfigurationId,omitempty"`
	// WindowsAutopilotDeploymentProfileDisplayName Autopilot profile name.
	WindowsAutopilotDeploymentProfileDisplayName *string `json:"windowsAutopilotDeploymentProfileDisplayName,omitempty"`
	// PolicyStatusDetails undocumented
	PolicyStatusDetails []DeviceManagementAutopilotPolicyStatusDetail `json:"policyStatusDetails,omitempty"`
}

// DeviceManagementAutopilotPolicyStatusDetail Policy status detail item contained by an autopilot event.
type DeviceManagementAutopilotPolicyStatusDetail struct {
	// Entity is the base model of DeviceManagementAutopilotPolicyStatusDetail
	Entity
	// ComplianceStatus The policy compliance status.
	ComplianceStatus *DeviceManagementAutopilotPolicyComplianceStatus `json:"complianceStatus,omitempty"`
	// DisplayName The friendly name of the policy.
	DisplayName *string `json:"displayName,omitempty"`
	// ErrorCode The errorode associated with the compliance or enforcement status of the policy. Error code for enforcement status takes precedence if it exists.
	ErrorCode *int `json:"errorCode,omitempty"`
	// LastReportedDateTime Timestamp of the reported policy status
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// PolicyType The type of policy.
	PolicyType *DeviceManagementAutopilotPolicyType `json:"policyType,omitempty"`
	// TrackedOnEnrollmentStatus Indicates if this prolicy was tracked as part of the autopilot bootstrap enrollment sync session
	TrackedOnEnrollmentStatus *bool `json:"trackedOnEnrollmentStatus,omitempty"`
}

// DeviceManagementBooleanSettingInstance A setting instance representing a boolean value
type DeviceManagementBooleanSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementBooleanSettingInstance
	DeviceManagementSettingInstance
	// Value The boolean value
	Value *bool `json:"value,omitempty"`
}

// DeviceManagementCachedReportConfiguration Entity representing the configuration of a cached report
type DeviceManagementCachedReportConfiguration struct {
	// Entity is the base model of DeviceManagementCachedReportConfiguration
	Entity
	// ExpirationDateTime Time that the cached report expires
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Filter Filters applied on report creation.
	Filter *string `json:"filter,omitempty"`
	// LastRefreshDateTime Time that the cached report was last refreshed
	LastRefreshDateTime *time.Time `json:"lastRefreshDateTime,omitempty"`
	// Metadata Caller-managed metadata associated with the report
	Metadata *string `json:"metadata,omitempty"`
	// OrderBy Ordering of columns in the report
	OrderBy []string `json:"orderBy,omitempty"`
	// ReportName Name of the report
	ReportName *string `json:"reportName,omitempty"`
	// Select Columns selected from the report
	Select []string `json:"select,omitempty"`
	// Status Status of the cached report
	Status *DeviceManagementReportStatus `json:"status,omitempty"`
}

// DeviceManagementCollectionSettingDefinition Entity representing the defintion for a collection setting
type DeviceManagementCollectionSettingDefinition struct {
	// DeviceManagementSettingDefinition is the base model of DeviceManagementCollectionSettingDefinition
	DeviceManagementSettingDefinition
	// ElementDefinitionID The Setting Definition ID that describes what each element of the collection looks like
	ElementDefinitionID *string `json:"elementDefinitionId,omitempty"`
}

// DeviceManagementCollectionSettingInstance A setting instance representing a collection of values
type DeviceManagementCollectionSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementCollectionSettingInstance
	DeviceManagementSettingInstance
	// Value undocumented
	Value []DeviceManagementSettingInstance `json:"value,omitempty"`
}

// DeviceManagementComplexSettingDefinition Entity representing the defintion for a complex setting
type DeviceManagementComplexSettingDefinition struct {
	// DeviceManagementSettingDefinition is the base model of DeviceManagementComplexSettingDefinition
	DeviceManagementSettingDefinition
	// PropertyDefinitionIDs The definitions of each property of the complex setting
	PropertyDefinitionIDs []string `json:"propertyDefinitionIds,omitempty"`
}

// DeviceManagementComplexSettingInstance A setting instance representing a complex value
type DeviceManagementComplexSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementComplexSettingInstance
	DeviceManagementSettingInstance
	// Value undocumented
	Value []DeviceManagementSettingInstance `json:"value,omitempty"`
}

// DeviceManagementConfigurationCategory Device Management Configuration Policy
type DeviceManagementConfigurationCategory struct {
	// Entity is the base model of DeviceManagementConfigurationCategory
	Entity
	// ChildCategoryIDs List of child ids of the category.
	ChildCategoryIDs []string `json:"childCategoryIds,omitempty"`
	// Description Description of the item
	Description *string `json:"description,omitempty"`
	// DisplayName Display name of the item
	DisplayName *string `json:"displayName,omitempty"`
	// HelpText Help text of the item
	HelpText *string `json:"helpText,omitempty"`
	// Name Name of the item
	Name *string `json:"name,omitempty"`
	// ParentCategoryID Parent id of the category.
	ParentCategoryID *string `json:"parentCategoryId,omitempty"`
	// Platforms Platforms types, which settings in the category have.
	Platforms *DeviceManagementConfigurationPlatforms `json:"platforms,omitempty"`
	// RootCategoryID Root id of the category.
	RootCategoryID *string `json:"rootCategoryId,omitempty"`
	// SettingUsage Indicates that the category contains settings that are used for Compliance or Configuration.
	SettingUsage *DeviceManagementConfigurationSettingUsage `json:"settingUsage,omitempty"`
	// Technologies Technologies types, which settings in the category have.
	Technologies *DeviceManagementConfigurationTechnologies `json:"technologies,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingCollectionDefinition undocumented
type DeviceManagementConfigurationChoiceSettingCollectionDefinition struct {
	// DeviceManagementConfigurationChoiceSettingDefinition is the base model of DeviceManagementConfigurationChoiceSettingCollectionDefinition
	DeviceManagementConfigurationChoiceSettingDefinition
	// MaximumCount Maximum number of choices in the collection. Valid values 1 to 100
	MaximumCount *int `json:"maximumCount,omitempty"`
	// MinimumCount Minimum number of choices in the collection. Valid values 1 to 100
	MinimumCount *int `json:"minimumCount,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingCollectionInstance Setting instance within policy
type DeviceManagementConfigurationChoiceSettingCollectionInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationChoiceSettingCollectionInstance
	DeviceManagementConfigurationSettingInstance
	// ChoiceSettingCollectionValue Choice setting collection value
	ChoiceSettingCollectionValue []DeviceManagementConfigurationChoiceSettingValue `json:"choiceSettingCollectionValue,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate Choice Setting Collection Instance Template
type DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// AllowUnmanagedValues Linked policy may append values which are not present in the template.
	AllowUnmanagedValues *bool `json:"allowUnmanagedValues,omitempty"`
	// ChoiceSettingCollectionValueTemplate Choice Setting Collection Value Template
	ChoiceSettingCollectionValueTemplate []DeviceManagementConfigurationChoiceSettingValueTemplate `json:"choiceSettingCollectionValueTemplate,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingDefinition undocumented
type DeviceManagementConfigurationChoiceSettingDefinition struct {
	// DeviceManagementConfigurationSettingDefinition is the base model of DeviceManagementConfigurationChoiceSettingDefinition
	DeviceManagementConfigurationSettingDefinition
	// DefaultOptionID Default option for choice setting
	DefaultOptionID *string `json:"defaultOptionId,omitempty"`
	// Options Options for the setting that can be selected
	Options []DeviceManagementConfigurationOptionDefinition `json:"options,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingInstance Setting instance within policy
type DeviceManagementConfigurationChoiceSettingInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationChoiceSettingInstance
	DeviceManagementConfigurationSettingInstance
	// ChoiceSettingValue Choice setting value
	ChoiceSettingValue *DeviceManagementConfigurationChoiceSettingValue `json:"choiceSettingValue,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingInstanceTemplate Choice Setting Instance Template
type DeviceManagementConfigurationChoiceSettingInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationChoiceSettingInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// ChoiceSettingValueTemplate Choice Setting Value Template
	ChoiceSettingValueTemplate *DeviceManagementConfigurationChoiceSettingValueTemplate `json:"choiceSettingValueTemplate,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingValue Setting value
type DeviceManagementConfigurationChoiceSettingValue struct {
	// DeviceManagementConfigurationSettingValue is the base model of DeviceManagementConfigurationChoiceSettingValue
	DeviceManagementConfigurationSettingValue
	// Children Child settings.
	Children []DeviceManagementConfigurationSettingInstance `json:"children,omitempty"`
	// Value Choice setting value: an OptionDefinition ItemId.
	Value *string `json:"value,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate Choice Setting Value Constant Default Template
type DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate struct {
	// DeviceManagementConfigurationChoiceSettingValueDefaultTemplate is the base model of DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
	DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
	// Children Option Children
	Children []DeviceManagementConfigurationSettingInstanceTemplate `json:"children,omitempty"`
	// SettingDefinitionOptionID Default Constant Value
	SettingDefinitionOptionID *string `json:"settingDefinitionOptionId,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingValueDefaultTemplate Choice Setting Value Default Template
type DeviceManagementConfigurationChoiceSettingValueDefaultTemplate struct {
	// Object is the base model of DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
	Object
}

// DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate Choice Setting Value Definition Template
type DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate struct {
	// Object is the base model of DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
	Object
	// AllowedOptions Choice Setting Allowed Options
	AllowedOptions []DeviceManagementConfigurationOptionDefinitionTemplate `json:"allowedOptions,omitempty"`
}

// DeviceManagementConfigurationChoiceSettingValueTemplate Choice Setting Value Template
type DeviceManagementConfigurationChoiceSettingValueTemplate struct {
	// Object is the base model of DeviceManagementConfigurationChoiceSettingValueTemplate
	Object
	// DefaultValue Choice Setting Value Default Template.
	DefaultValue *DeviceManagementConfigurationChoiceSettingValueDefaultTemplate `json:"defaultValue,omitempty"`
	// RecommendedValueDefinition Recommended definition override.
	RecommendedValueDefinition *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate `json:"recommendedValueDefinition,omitempty"`
	// RequiredValueDefinition Required definition override.
	RequiredValueDefinition *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate `json:"requiredValueDefinition,omitempty"`
	// SettingValueTemplateID Setting Value Template Id
	SettingValueTemplateID *string `json:"settingValueTemplateId,omitempty"`
}

// DeviceManagementConfigurationDependentOn undocumented
type DeviceManagementConfigurationDependentOn struct {
	// Object is the base model of DeviceManagementConfigurationDependentOn
	Object
	// DependentOn Identifier of parent setting/ parent setting option dependent on
	DependentOn *string `json:"dependentOn,omitempty"`
	// ParentSettingID Identifier of parent setting/ parent setting id dependent on
	ParentSettingID *string `json:"parentSettingId,omitempty"`
}

// DeviceManagementConfigurationGroupSettingCollectionInstance Instance of a GroupSettingCollection
type DeviceManagementConfigurationGroupSettingCollectionInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationGroupSettingCollectionInstance
	DeviceManagementConfigurationSettingInstance
	// GroupSettingCollectionValue A collection of GroupSetting values
	GroupSettingCollectionValue []DeviceManagementConfigurationGroupSettingValue `json:"groupSettingCollectionValue,omitempty"`
}

// DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate Group Setting Collection Instance Template
type DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// AllowUnmanagedValues Linked policy may append values which are not present in the template.
	AllowUnmanagedValues *bool `json:"allowUnmanagedValues,omitempty"`
	// GroupSettingCollectionValueTemplate Group Setting Collection Value Template
	GroupSettingCollectionValueTemplate []DeviceManagementConfigurationGroupSettingValueTemplate `json:"groupSettingCollectionValueTemplate,omitempty"`
}

// DeviceManagementConfigurationGroupSettingInstance Instance of a GroupSetting
type DeviceManagementConfigurationGroupSettingInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationGroupSettingInstance
	DeviceManagementConfigurationSettingInstance
	// GroupSettingValue GroupSetting value
	GroupSettingValue *DeviceManagementConfigurationGroupSettingValue `json:"groupSettingValue,omitempty"`
}

// DeviceManagementConfigurationGroupSettingInstanceTemplate Group Setting Instance Template
type DeviceManagementConfigurationGroupSettingInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationGroupSettingInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// GroupSettingValueTemplate Group Setting Value Template
	GroupSettingValueTemplate *DeviceManagementConfigurationGroupSettingValueTemplate `json:"groupSettingValueTemplate,omitempty"`
}

// DeviceManagementConfigurationGroupSettingValue Value of the GroupSetting
type DeviceManagementConfigurationGroupSettingValue struct {
	// DeviceManagementConfigurationSettingValue is the base model of DeviceManagementConfigurationGroupSettingValue
	DeviceManagementConfigurationSettingValue
	// Children Collection of child setting instances contained within this GroupSetting
	Children []DeviceManagementConfigurationSettingInstance `json:"children,omitempty"`
}

// DeviceManagementConfigurationGroupSettingValueTemplate Group Setting Value Template
type DeviceManagementConfigurationGroupSettingValueTemplate struct {
	// Object is the base model of DeviceManagementConfigurationGroupSettingValueTemplate
	Object
	// Children Group setting value children
	Children []DeviceManagementConfigurationSettingInstanceTemplate `json:"children,omitempty"`
	// SettingValueTemplateID Setting Value Template Id
	SettingValueTemplateID *string `json:"settingValueTemplateId,omitempty"`
}

// DeviceManagementConfigurationIntegerSettingValue Simple setting value
type DeviceManagementConfigurationIntegerSettingValue struct {
	// DeviceManagementConfigurationSimpleSettingValue is the base model of DeviceManagementConfigurationIntegerSettingValue
	DeviceManagementConfigurationSimpleSettingValue
	// Value Value of the integer setting.
	Value *int `json:"value,omitempty"`
}

// DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate Integer Setting Value Constant Default Template
type DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate struct {
	// DeviceManagementConfigurationIntegerSettingValueDefaultTemplate is the base model of DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
	DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
	// ConstantValue Default Constant Value. Valid values -2147483648 to 2147483647
	ConstantValue *int `json:"constantValue,omitempty"`
}

// DeviceManagementConfigurationIntegerSettingValueDefaultTemplate Integer Setting Value Default Template
type DeviceManagementConfigurationIntegerSettingValueDefaultTemplate struct {
	// Object is the base model of DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
	Object
}

// DeviceManagementConfigurationIntegerSettingValueDefinition undocumented
type DeviceManagementConfigurationIntegerSettingValueDefinition struct {
	// DeviceManagementConfigurationSettingValueDefinition is the base model of DeviceManagementConfigurationIntegerSettingValueDefinition
	DeviceManagementConfigurationSettingValueDefinition
	// MaximumValue Maximum allowed value of the integer
	MaximumValue *int `json:"maximumValue,omitempty"`
	// MinimumValue Minimum allowed value of the integer
	MinimumValue *int `json:"minimumValue,omitempty"`
}

// DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate Integer Setting Value Definition Template
type DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate struct {
	// Object is the base model of DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
	Object
	// MaxValue Integer Setting Maximum Value. Valid values -2147483648 to 2147483647
	MaxValue *int `json:"maxValue,omitempty"`
	// MinValue Integer Setting Minimum Value. Valid values -2147483648 to 2147483647
	MinValue *int `json:"minValue,omitempty"`
}

// DeviceManagementConfigurationIntegerSettingValueTemplate Integer Setting Value Template
type DeviceManagementConfigurationIntegerSettingValueTemplate struct {
	// DeviceManagementConfigurationSimpleSettingValueTemplate is the base model of DeviceManagementConfigurationIntegerSettingValueTemplate
	DeviceManagementConfigurationSimpleSettingValueTemplate
	// DefaultValue Integer Setting Value Default Template.
	DefaultValue *DeviceManagementConfigurationIntegerSettingValueDefaultTemplate `json:"defaultValue,omitempty"`
	// RecommendedValueDefinition Recommended value definition.
	RecommendedValueDefinition *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate `json:"recommendedValueDefinition,omitempty"`
	// RequiredValueDefinition Required value definition.
	RequiredValueDefinition *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate `json:"requiredValueDefinition,omitempty"`
}

// DeviceManagementConfigurationOptionDefinition undocumented
type DeviceManagementConfigurationOptionDefinition struct {
	// Object is the base model of DeviceManagementConfigurationOptionDefinition
	Object
	// DependedOnBy List of Settings that depends on this option
	DependedOnBy []DeviceManagementConfigurationSettingDependedOnBy `json:"dependedOnBy,omitempty"`
	// DependentOn List of dependent settings for this option
	DependentOn []DeviceManagementConfigurationDependentOn `json:"dependentOn,omitempty"`
	// Description Description of the option
	Description *string `json:"description,omitempty"`
	// DisplayName Friendly name of the option
	DisplayName *string `json:"displayName,omitempty"`
	// HelpText Help text of the option
	HelpText *string `json:"helpText,omitempty"`
	// ItemID Identifier of option
	ItemID *string `json:"itemId,omitempty"`
	// Name Name of the option
	Name *string `json:"name,omitempty"`
	// OptionValue Value of the option
	OptionValue *DeviceManagementConfigurationSettingValue `json:"optionValue,omitempty"`
}

// DeviceManagementConfigurationOptionDefinitionTemplate Option Definition Template
type DeviceManagementConfigurationOptionDefinitionTemplate struct {
	// Object is the base model of DeviceManagementConfigurationOptionDefinitionTemplate
	Object
	// Children Option Children
	Children []DeviceManagementConfigurationSettingInstanceTemplate `json:"children,omitempty"`
	// ItemID Option ItemId
	ItemID *string `json:"itemId,omitempty"`
}

// DeviceManagementConfigurationPolicy Device Management Configuration Policy
type DeviceManagementConfigurationPolicy struct {
	// Entity is the base model of DeviceManagementConfigurationPolicy
	Entity
	// CreatedDateTime Policy creation date and time. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// CreationSource Policy creation source
	CreationSource *string `json:"creationSource,omitempty"`
	// Description Policy description
	Description *string `json:"description,omitempty"`
	// IsAssigned Policy assignment status. This property is read-only.
	IsAssigned *bool `json:"isAssigned,omitempty"`
	// LastModifiedDateTime Policy last modification date and time. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Name Policy name
	Name *string `json:"name,omitempty"`
	// Platforms Platforms for this policy
	Platforms *DeviceManagementConfigurationPlatforms `json:"platforms,omitempty"`
	// RoleScopeTagIDs List of Scope Tags for this Entity instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// SettingCount Number of settings. This property is read-only.
	SettingCount *int `json:"settingCount,omitempty"`
	// Technologies Technologies for this policy
	Technologies *DeviceManagementConfigurationTechnologies `json:"technologies,omitempty"`
	// TemplateReference Template reference information
	TemplateReference *DeviceManagementConfigurationPolicyTemplateReference `json:"templateReference,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementConfigurationPolicyAssignment `json:"assignments,omitempty"`
	// Settings undocumented
	Settings []DeviceManagementConfigurationSetting `json:"settings,omitempty"`
}

// DeviceManagementConfigurationPolicyAssignment The DeviceManagementConfigurationPolicyAssignment entity assigns a specific DeviceManagementConfigurationPolicy to an AAD group.
type DeviceManagementConfigurationPolicyAssignment struct {
	// Entity is the base model of DeviceManagementConfigurationPolicyAssignment
	Entity
	// Target The assignment target for the DeviceManagementConfigurationPolicy.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceManagementConfigurationPolicyTemplate Device Management Configuration Policy Template
type DeviceManagementConfigurationPolicyTemplate struct {
	// Entity is the base model of DeviceManagementConfigurationPolicyTemplate
	Entity
	// AllowUnmanagedSettings Allow unmanaged setting templates
	AllowUnmanagedSettings *bool `json:"allowUnmanagedSettings,omitempty"`
	// BaseID Template base identifier
	BaseID *string `json:"baseId,omitempty"`
	// Description Template description
	Description *string `json:"description,omitempty"`
	// DisplayName Template display name
	DisplayName *string `json:"displayName,omitempty"`
	// DisplayVersion Description of template version
	DisplayVersion *string `json:"displayVersion,omitempty"`
	// LifecycleState Indicate current lifecycle state of template
	LifecycleState *DeviceManagementTemplateLifecycleState `json:"lifecycleState,omitempty"`
	// Platforms Platforms for this template
	Platforms *DeviceManagementConfigurationPlatforms `json:"platforms,omitempty"`
	// SettingTemplateCount Number of setting templates. Valid values 0 to 2147483647. This property is read-only.
	SettingTemplateCount *int `json:"settingTemplateCount,omitempty"`
	// Technologies Technologies for this template
	Technologies *DeviceManagementConfigurationTechnologies `json:"technologies,omitempty"`
	// TemplateFamily TemplateFamily for this template
	TemplateFamily *DeviceManagementConfigurationTemplateFamily `json:"templateFamily,omitempty"`
	// Version Template version. Valid values 1 to 2147483647. This property is read-only.
	Version *int `json:"version,omitempty"`
	// SettingTemplates undocumented
	SettingTemplates []DeviceManagementConfigurationSettingTemplate `json:"settingTemplates,omitempty"`
}

// DeviceManagementConfigurationPolicyTemplateReference Policy template reference information
type DeviceManagementConfigurationPolicyTemplateReference struct {
	// Object is the base model of DeviceManagementConfigurationPolicyTemplateReference
	Object
	// TemplateDisplayName Template Display Name of the referenced template. This property is read-only.
	TemplateDisplayName *string `json:"templateDisplayName,omitempty"`
	// TemplateDisplayVersion Template Display Version of the referenced Template. This property is read-only.
	TemplateDisplayVersion *string `json:"templateDisplayVersion,omitempty"`
	// TemplateFamily Template Family of the referenced Template. This property is read-only.
	TemplateFamily *DeviceManagementConfigurationTemplateFamily `json:"templateFamily,omitempty"`
	// TemplateID Template id
	TemplateID *string `json:"templateId,omitempty"`
}

// DeviceManagementConfigurationReferenceSettingValue Model for ReferenceSettingValue
type DeviceManagementConfigurationReferenceSettingValue struct {
	// DeviceManagementConfigurationStringSettingValue is the base model of DeviceManagementConfigurationReferenceSettingValue
	DeviceManagementConfigurationStringSettingValue
	// Note A note that admin can use to put some contextual information
	Note *string `json:"note,omitempty"`
}

// DeviceManagementConfigurationReferredSettingInformation Referred setting information about reusable setting
type DeviceManagementConfigurationReferredSettingInformation struct {
	// Object is the base model of DeviceManagementConfigurationReferredSettingInformation
	Object
	// SettingDefinitionID Setting definition id that is being referred to a setting. Applicable for reusable setting
	SettingDefinitionID *string `json:"settingDefinitionId,omitempty"`
}

// DeviceManagementConfigurationSetting Setting instance within policy
type DeviceManagementConfigurationSetting struct {
	// Entity is the base model of DeviceManagementConfigurationSetting
	Entity
	// SettingInstance Setting Instance
	SettingInstance *DeviceManagementConfigurationSettingInstance `json:"settingInstance,omitempty"`
	// SettingDefinitions undocumented
	SettingDefinitions []DeviceManagementConfigurationSettingDefinition `json:"settingDefinitions,omitempty"`
}

// DeviceManagementConfigurationSettingApplicability undocumented
type DeviceManagementConfigurationSettingApplicability struct {
	// Object is the base model of DeviceManagementConfigurationSettingApplicability
	Object
	// Description description of the setting
	Description *string `json:"description,omitempty"`
	// DeviceMode Device Mode that setting can be applied on
	DeviceMode *DeviceManagementConfigurationDeviceMode `json:"deviceMode,omitempty"`
	// Platform Platform setting can be applied on
	Platform *DeviceManagementConfigurationPlatforms `json:"platform,omitempty"`
	// Technologies Which technology channels this setting can be deployed through
	Technologies *DeviceManagementConfigurationTechnologies `json:"technologies,omitempty"`
}

// DeviceManagementConfigurationSettingDefinition undocumented
type DeviceManagementConfigurationSettingDefinition struct {
	// Entity is the base model of DeviceManagementConfigurationSettingDefinition
	Entity
	// AccessTypes Read/write access mode of the setting
	AccessTypes *DeviceManagementConfigurationSettingAccessTypes `json:"accessTypes,omitempty"`
	// Applicability Details which device setting is applicable on
	Applicability *DeviceManagementConfigurationSettingApplicability `json:"applicability,omitempty"`
	// BaseURI Base CSP Path
	BaseURI *string `json:"baseUri,omitempty"`
	// CategoryID Specifies the area group under which the setting is configured in a specified configuration service provider (CSP)
	CategoryID *string `json:"categoryId,omitempty"`
	// Description Description of the item
	Description *string `json:"description,omitempty"`
	// DisplayName Display name of the item
	DisplayName *string `json:"displayName,omitempty"`
	// HelpText Help text of the item
	HelpText *string `json:"helpText,omitempty"`
	// InfoUrls List of links more info for the setting can be found at
	InfoUrls []string `json:"infoUrls,omitempty"`
	// Keywords Tokens which to search settings on
	Keywords []string `json:"keywords,omitempty"`
	// Name Name of the item
	Name *string `json:"name,omitempty"`
	// Occurrence Indicates whether the setting is required or not
	Occurrence *DeviceManagementConfigurationSettingOccurrence `json:"occurrence,omitempty"`
	// OffsetURI Offset CSP Path from Base
	OffsetURI *string `json:"offsetUri,omitempty"`
	// ReferredSettingInformationList List of referred setting information.
	ReferredSettingInformationList []DeviceManagementConfigurationReferredSettingInformation `json:"referredSettingInformationList,omitempty"`
	// RootDefinitionID Root setting definition if the setting is a child setting.
	RootDefinitionID *string `json:"rootDefinitionId,omitempty"`
	// SettingUsage Setting type, for example, configuration and compliance
	SettingUsage *DeviceManagementConfigurationSettingUsage `json:"settingUsage,omitempty"`
	// UxBehavior Setting control type representation in the UX
	UxBehavior *DeviceManagementConfigurationControlType `json:"uxBehavior,omitempty"`
	// Version Item Version
	Version *string `json:"version,omitempty"`
	// Visibility Setting visibility scope to UX
	Visibility *DeviceManagementConfigurationSettingVisibility `json:"visibility,omitempty"`
}

// DeviceManagementConfigurationSettingDependedOnBy undocumented
type DeviceManagementConfigurationSettingDependedOnBy struct {
	// Object is the base model of DeviceManagementConfigurationSettingDependedOnBy
	Object
	// DependedOnBy Identifier of child setting that is dependent on the current setting
	DependedOnBy *string `json:"dependedOnBy,omitempty"`
	// Required Value that determines if the child setting is required based on the parent setting's selection
	Required *bool `json:"required,omitempty"`
}

// DeviceManagementConfigurationSettingGroupCollectionDefinition undocumented
type DeviceManagementConfigurationSettingGroupCollectionDefinition struct {
	// DeviceManagementConfigurationSettingGroupDefinition is the base model of DeviceManagementConfigurationSettingGroupCollectionDefinition
	DeviceManagementConfigurationSettingGroupDefinition
	// MaximumCount Maximum number of setting group count in the collection. Valid values 1 to 100
	MaximumCount *int `json:"maximumCount,omitempty"`
	// MinimumCount Minimum number of setting group count in the collection. Valid values 1 to 100
	MinimumCount *int `json:"minimumCount,omitempty"`
}

// DeviceManagementConfigurationSettingGroupCollectionInstance Setting instance within policy
type DeviceManagementConfigurationSettingGroupCollectionInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationSettingGroupCollectionInstance
	DeviceManagementConfigurationSettingInstance
}

// DeviceManagementConfigurationSettingGroupDefinition undocumented
type DeviceManagementConfigurationSettingGroupDefinition struct {
	// DeviceManagementConfigurationSettingDefinition is the base model of DeviceManagementConfigurationSettingGroupDefinition
	DeviceManagementConfigurationSettingDefinition
	// ChildIDs Dependent child settings to this group of settings
	ChildIDs []string `json:"childIds,omitempty"`
	// DependedOnBy List of child settings that depend on this setting
	DependedOnBy []DeviceManagementConfigurationSettingDependedOnBy `json:"dependedOnBy,omitempty"`
	// DependentOn List of Dependencies for the setting group
	DependentOn []DeviceManagementConfigurationDependentOn `json:"dependentOn,omitempty"`
}

// DeviceManagementConfigurationSettingGroupInstance Setting instance within policy
type DeviceManagementConfigurationSettingGroupInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationSettingGroupInstance
	DeviceManagementConfigurationSettingInstance
}

// DeviceManagementConfigurationSettingInstance Setting instance within policy
type DeviceManagementConfigurationSettingInstance struct {
	// Object is the base model of DeviceManagementConfigurationSettingInstance
	Object
	// SettingDefinitionID Setting Definition Id
	SettingDefinitionID *string `json:"settingDefinitionId,omitempty"`
	// SettingInstanceTemplateReference Setting Instance Template Reference
	SettingInstanceTemplateReference *DeviceManagementConfigurationSettingInstanceTemplateReference `json:"settingInstanceTemplateReference,omitempty"`
}

// DeviceManagementConfigurationSettingInstanceTemplate Setting Instance Template
type DeviceManagementConfigurationSettingInstanceTemplate struct {
	// Object is the base model of DeviceManagementConfigurationSettingInstanceTemplate
	Object
	// IsRequired Indicates if a policy must specify this setting.
	IsRequired *bool `json:"isRequired,omitempty"`
	// SettingDefinitionID Setting Definition Id
	SettingDefinitionID *string `json:"settingDefinitionId,omitempty"`
	// SettingInstanceTemplateID Setting Instance Template Id
	SettingInstanceTemplateID *string `json:"settingInstanceTemplateId,omitempty"`
}

// DeviceManagementConfigurationSettingInstanceTemplateReference Setting instance template reference information
type DeviceManagementConfigurationSettingInstanceTemplateReference struct {
	// Object is the base model of DeviceManagementConfigurationSettingInstanceTemplateReference
	Object
	// SettingInstanceTemplateID Setting instance template id
	SettingInstanceTemplateID *string `json:"settingInstanceTemplateId,omitempty"`
}

// DeviceManagementConfigurationSettingOccurrence undocumented
type DeviceManagementConfigurationSettingOccurrence struct {
	// Object is the base model of DeviceManagementConfigurationSettingOccurrence
	Object
	// MaxDeviceOccurrence Maximum times setting can be set on device.
	MaxDeviceOccurrence *int `json:"maxDeviceOccurrence,omitempty"`
	// MinDeviceOccurrence Minimum times setting can be set on device. A MinDeviceOccurrence of 0 means setting is optional
	MinDeviceOccurrence *int `json:"minDeviceOccurrence,omitempty"`
}

// DeviceManagementConfigurationSettingTemplate Setting Template
type DeviceManagementConfigurationSettingTemplate struct {
	// Entity is the base model of DeviceManagementConfigurationSettingTemplate
	Entity
	// SettingInstanceTemplate Setting Instance Template
	SettingInstanceTemplate *DeviceManagementConfigurationSettingInstanceTemplate `json:"settingInstanceTemplate,omitempty"`
	// SettingDefinitions undocumented
	SettingDefinitions []DeviceManagementConfigurationSettingDefinition `json:"settingDefinitions,omitempty"`
}

// DeviceManagementConfigurationSettingValue Setting value
type DeviceManagementConfigurationSettingValue struct {
	// Object is the base model of DeviceManagementConfigurationSettingValue
	Object
	// SettingValueTemplateReference Setting value template reference
	SettingValueTemplateReference *DeviceManagementConfigurationSettingValueTemplateReference `json:"settingValueTemplateReference,omitempty"`
}

// DeviceManagementConfigurationSettingValueDefinition undocumented
type DeviceManagementConfigurationSettingValueDefinition struct {
	// Object is the base model of DeviceManagementConfigurationSettingValueDefinition
	Object
}

// DeviceManagementConfigurationSettingValueTemplateReference Setting value template reference information
type DeviceManagementConfigurationSettingValueTemplateReference struct {
	// Object is the base model of DeviceManagementConfigurationSettingValueTemplateReference
	Object
	// SettingValueTemplateID Setting value template id
	SettingValueTemplateID *string `json:"settingValueTemplateId,omitempty"`
	// UseTemplateDefault Indicates whether to update policy setting value to match template setting default value
	UseTemplateDefault *bool `json:"useTemplateDefault,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingCollectionDefinition undocumented
type DeviceManagementConfigurationSimpleSettingCollectionDefinition struct {
	// DeviceManagementConfigurationSimpleSettingDefinition is the base model of DeviceManagementConfigurationSimpleSettingCollectionDefinition
	DeviceManagementConfigurationSimpleSettingDefinition
	// MaximumCount Maximum number of simple settings in the collection. Valid values 1 to 100
	MaximumCount *int `json:"maximumCount,omitempty"`
	// MinimumCount Minimum number of simple settings in the collection. Valid values 1 to 100
	MinimumCount *int `json:"minimumCount,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingCollectionInstance Simple setting collection instance
type DeviceManagementConfigurationSimpleSettingCollectionInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationSimpleSettingCollectionInstance
	DeviceManagementConfigurationSettingInstance
	// SimpleSettingCollectionValue Simple setting collection instance value
	SimpleSettingCollectionValue []DeviceManagementConfigurationSimpleSettingValue `json:"simpleSettingCollectionValue,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate Simple Setting Collection Instance Template
type DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// AllowUnmanagedValues Linked policy may append values which are not present in the template.
	AllowUnmanagedValues *bool `json:"allowUnmanagedValues,omitempty"`
	// SimpleSettingCollectionValueTemplate Simple Setting Collection Value Template
	SimpleSettingCollectionValueTemplate []DeviceManagementConfigurationSimpleSettingValueTemplate `json:"simpleSettingCollectionValueTemplate,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingDefinition undocumented
type DeviceManagementConfigurationSimpleSettingDefinition struct {
	// DeviceManagementConfigurationSettingDefinition is the base model of DeviceManagementConfigurationSimpleSettingDefinition
	DeviceManagementConfigurationSettingDefinition
	// DefaultValue Default setting value for this setting
	DefaultValue *DeviceManagementConfigurationSettingValue `json:"defaultValue,omitempty"`
	// DependedOnBy list of child settings that depend on this setting
	DependedOnBy []DeviceManagementConfigurationSettingDependedOnBy `json:"dependedOnBy,omitempty"`
	// DependentOn list of parent settings this setting is dependent on
	DependentOn []DeviceManagementConfigurationDependentOn `json:"dependentOn,omitempty"`
	// ValueDefinition Definition of the value for this setting
	ValueDefinition *DeviceManagementConfigurationSettingValueDefinition `json:"valueDefinition,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingInstance Simple setting instance
type DeviceManagementConfigurationSimpleSettingInstance struct {
	// DeviceManagementConfigurationSettingInstance is the base model of DeviceManagementConfigurationSimpleSettingInstance
	DeviceManagementConfigurationSettingInstance
	// SimpleSettingValue Simple setting instance value
	SimpleSettingValue *DeviceManagementConfigurationSimpleSettingValue `json:"simpleSettingValue,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingInstanceTemplate Simple Setting Instance Template
type DeviceManagementConfigurationSimpleSettingInstanceTemplate struct {
	// DeviceManagementConfigurationSettingInstanceTemplate is the base model of DeviceManagementConfigurationSimpleSettingInstanceTemplate
	DeviceManagementConfigurationSettingInstanceTemplate
	// SimpleSettingValueTemplate Simple Setting Value Template
	SimpleSettingValueTemplate *DeviceManagementConfigurationSimpleSettingValueTemplate `json:"simpleSettingValueTemplate,omitempty"`
}

// DeviceManagementConfigurationSimpleSettingValue Simple setting value
type DeviceManagementConfigurationSimpleSettingValue struct {
	// DeviceManagementConfigurationSettingValue is the base model of DeviceManagementConfigurationSimpleSettingValue
	DeviceManagementConfigurationSettingValue
}

// DeviceManagementConfigurationSimpleSettingValueTemplate Simple Setting Value Template
type DeviceManagementConfigurationSimpleSettingValueTemplate struct {
	// Object is the base model of DeviceManagementConfigurationSimpleSettingValueTemplate
	Object
	// SettingValueTemplateID Setting Value Template Id
	SettingValueTemplateID *string `json:"settingValueTemplateId,omitempty"`
}

// DeviceManagementConfigurationStringSettingValue Simple setting value
type DeviceManagementConfigurationStringSettingValue struct {
	// DeviceManagementConfigurationSimpleSettingValue is the base model of DeviceManagementConfigurationStringSettingValue
	DeviceManagementConfigurationSimpleSettingValue
	// Value Value of the string setting.
	Value *string `json:"value,omitempty"`
}

// DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate String Setting Value Constant Default Template
type DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate struct {
	// DeviceManagementConfigurationStringSettingValueDefaultTemplate is the base model of DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
	DeviceManagementConfigurationStringSettingValueDefaultTemplate
	// ConstantValue Default Constant Value
	ConstantValue *string `json:"constantValue,omitempty"`
}

// DeviceManagementConfigurationStringSettingValueDefaultTemplate String Setting Value Default Template
type DeviceManagementConfigurationStringSettingValueDefaultTemplate struct {
	// Object is the base model of DeviceManagementConfigurationStringSettingValueDefaultTemplate
	Object
}

// DeviceManagementConfigurationStringSettingValueDefinition String constraints
type DeviceManagementConfigurationStringSettingValueDefinition struct {
	// DeviceManagementConfigurationSettingValueDefinition is the base model of DeviceManagementConfigurationStringSettingValueDefinition
	DeviceManagementConfigurationSettingValueDefinition
	// Format Pre-defined format of the string
	Format *DeviceManagementConfigurationStringFormat `json:"format,omitempty"`
	// InputValidationSchema Regular expression or any xml or json schema that the input string should match
	InputValidationSchema *string `json:"inputValidationSchema,omitempty"`
	// IsSecret Specifies whether the setting needs to be treated as a secret. Settings marked as yes will be encrypted in transit and at rest and will be displayed as asterisks when represented in the UX.
	IsSecret *bool `json:"isSecret,omitempty"`
	// MaximumLength Maximum length of string. Valid values 0 to 87516
	MaximumLength *int `json:"maximumLength,omitempty"`
	// MinimumLength Minimum length of string. Valid values 0 to 87516
	MinimumLength *int `json:"minimumLength,omitempty"`
}

// DeviceManagementConfigurationStringSettingValueTemplate String Setting Value Template
type DeviceManagementConfigurationStringSettingValueTemplate struct {
	// DeviceManagementConfigurationSimpleSettingValueTemplate is the base model of DeviceManagementConfigurationStringSettingValueTemplate
	DeviceManagementConfigurationSimpleSettingValueTemplate
	// DefaultValue String Setting Value Default Template.
	DefaultValue *DeviceManagementConfigurationStringSettingValueDefaultTemplate `json:"defaultValue,omitempty"`
}

// DeviceManagementConfigurationWindowsSettingApplicability undocumented
type DeviceManagementConfigurationWindowsSettingApplicability struct {
	// DeviceManagementConfigurationSettingApplicability is the base model of DeviceManagementConfigurationWindowsSettingApplicability
	DeviceManagementConfigurationSettingApplicability
	// ConfigurationServiceProviderVersion Version of CSP setting is a part of
	ConfigurationServiceProviderVersion *string `json:"configurationServiceProviderVersion,omitempty"`
	// MaximumSupportedVersion Maximum supported version of Windows
	MaximumSupportedVersion *string `json:"maximumSupportedVersion,omitempty"`
	// MinimumSupportedVersion Minimum supported version of Windows
	MinimumSupportedVersion *string `json:"minimumSupportedVersion,omitempty"`
	// RequiredAzureAdTrustType Required AzureAD trust type
	RequiredAzureAdTrustType *DeviceManagementConfigurationAzureAdTrustType `json:"requiredAzureAdTrustType,omitempty"`
	// RequiresAzureAd AzureAD setting requirement
	RequiresAzureAd *bool `json:"requiresAzureAd,omitempty"`
	// WindowsSKUs List of Windows SKUs that the setting is applicable for
	WindowsSKUs []DeviceManagementConfigurationWindowsSKUs `json:"windowsSkus,omitempty"`
}

// DeviceManagementConstraint Base entity for a constraint
type DeviceManagementConstraint struct {
	// Object is the base model of DeviceManagementConstraint
	Object
}

// DeviceManagementDerivedCredentialSettings Entity that describes tenant level settings for derived credentials
type DeviceManagementDerivedCredentialSettings struct {
	// Entity is the base model of DeviceManagementDerivedCredentialSettings
	Entity
	// DisplayName The display name for the profile.
	DisplayName *string `json:"displayName,omitempty"`
	// HelpURL The URL that will be accessible to end users as they retrieve a derived credential using the Company Portal.
	HelpURL *string `json:"helpUrl,omitempty"`
	// Issuer The derived credential provider to use.
	Issuer *DeviceManagementDerivedCredentialIssuer `json:"issuer,omitempty"`
	// NotificationType The methods used to inform the end user to open Company Portal to deliver Wi-Fi, VPN, or email profiles that use certificates to the device.
	NotificationType *DeviceManagementDerivedCredentialNotificationType `json:"notificationType,omitempty"`
}

// DeviceManagementDomainJoinConnector A Domain Join Connector is a connector that is responsible to allocate (and delete) machine account blobs
type DeviceManagementDomainJoinConnector struct {
	// Entity is the base model of DeviceManagementDomainJoinConnector
	Entity
	// DisplayName The connector display name.
	DisplayName *string `json:"displayName,omitempty"`
	// LastConnectionDateTime Last time connector contacted Intune.
	LastConnectionDateTime *time.Time `json:"lastConnectionDateTime,omitempty"`
	// State The connector state.
	State *DeviceManagementDomainJoinConnectorState `json:"state,omitempty"`
	// Version The version of the connector.
	Version *string `json:"version,omitempty"`
}

// DeviceManagementEnumConstraint Constraint that enforces the setting value is from a permitted set of strings
type DeviceManagementEnumConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementEnumConstraint
	DeviceManagementConstraint
	// Values List of valid values for this string
	Values []DeviceManagementEnumValue `json:"values,omitempty"`
}

// DeviceManagementEnumValue Definition information for an enum value
type DeviceManagementEnumValue struct {
	// Object is the base model of DeviceManagementEnumValue
	Object
	// DisplayName Display name for this enum value
	DisplayName *string `json:"displayName,omitempty"`
	// Value The raw enum value text
	Value *string `json:"value,omitempty"`
}

// DeviceManagementExchangeAccessRule Device Access Rules in Exchange.
type DeviceManagementExchangeAccessRule struct {
	// Object is the base model of DeviceManagementExchangeAccessRule
	Object
	// AccessLevel Access Level for Exchange granted by this rule.
	AccessLevel *DeviceManagementExchangeAccessLevel `json:"accessLevel,omitempty"`
	// DeviceClass Device Class which will be impacted by this rule.
	DeviceClass *DeviceManagementExchangeDeviceClass `json:"deviceClass,omitempty"`
}

// DeviceManagementExchangeConnector Entity which represents a connection to an Exchange environment.
type DeviceManagementExchangeConnector struct {
	// Entity is the base model of DeviceManagementExchangeConnector
	Entity
	// ConnectorServerName The name of the server hosting the Exchange Connector.
	ConnectorServerName *string `json:"connectorServerName,omitempty"`
	// ExchangeAlias An alias assigned to the Exchange server
	ExchangeAlias *string `json:"exchangeAlias,omitempty"`
	// ExchangeConnectorType The type of Exchange Connector Configured.
	ExchangeConnectorType *DeviceManagementExchangeConnectorType `json:"exchangeConnectorType,omitempty"`
	// ExchangeOrganization Exchange Organization to the Exchange server
	ExchangeOrganization *string `json:"exchangeOrganization,omitempty"`
	// LastSyncDateTime Last sync time for the Exchange Connector
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// PrimarySMTPAddress Email address used to configure the Service To Service Exchange Connector.
	PrimarySMTPAddress *string `json:"primarySmtpAddress,omitempty"`
	// ServerName The name of the Exchange server.
	ServerName *string `json:"serverName,omitempty"`
	// Status Exchange Connector Status
	Status *DeviceManagementExchangeConnectorStatus `json:"status,omitempty"`
	// Version The version of the ExchangeConnectorAgent
	Version *string `json:"version,omitempty"`
}

// DeviceManagementExchangeDeviceClass Device Class in Exchange.
type DeviceManagementExchangeDeviceClass struct {
	// Object is the base model of DeviceManagementExchangeDeviceClass
	Object
	// Name Name of the device class which will be impacted by this rule.
	Name *string `json:"name,omitempty"`
	// Type Type of device which is impacted by this rule e.g. Model, Family
	Type *DeviceManagementExchangeAccessRuleType `json:"type,omitempty"`
}

// DeviceManagementExchangeOnPremisesPolicy Singleton entity which represents the Exchange OnPremises policy configured for a tenant.
type DeviceManagementExchangeOnPremisesPolicy struct {
	// Entity is the base model of DeviceManagementExchangeOnPremisesPolicy
	Entity
	// AccessRules The list of device access rules in Exchange. The access rules apply globally to the entire Exchange organization
	AccessRules []DeviceManagementExchangeAccessRule `json:"accessRules,omitempty"`
	// DefaultAccessLevel Default access state in Exchange. This rule applies globally to the entire Exchange organization
	DefaultAccessLevel *DeviceManagementExchangeAccessLevel `json:"defaultAccessLevel,omitempty"`
	// KnownDeviceClasses The list of device classes known to Exchange
	KnownDeviceClasses []DeviceManagementExchangeDeviceClass `json:"knownDeviceClasses,omitempty"`
	// NotificationContent Notification text that will be sent to users quarantined by this policy. This is UTF8 encoded byte array HTML.
	NotificationContent *Binary `json:"notificationContent,omitempty"`
	// ConditionalAccessSettings undocumented
	ConditionalAccessSettings *OnPremisesConditionalAccessSettings `json:"conditionalAccessSettings,omitempty"`
}

// DeviceManagementExportJob Entity representing a job to export a report
type DeviceManagementExportJob struct {
	// Entity is the base model of DeviceManagementExportJob
	Entity
	// ExpirationDateTime Time that the exported report expires
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Filter Filters applied on the report
	Filter *string `json:"filter,omitempty"`
	// Format Format of the exported report
	Format *DeviceManagementReportFileFormat `json:"format,omitempty"`
	// LocalizationType Configures how the requested export job is localized
	LocalizationType *DeviceManagementExportJobLocalizationType `json:"localizationType,omitempty"`
	// ReportName Name of the report
	ReportName *string `json:"reportName,omitempty"`
	// RequestDateTime Time that the exported report was requested
	RequestDateTime *time.Time `json:"requestDateTime,omitempty"`
	// Select Columns selected from the report
	Select []string `json:"select,omitempty"`
	// SnapshotID A snapshot is an identifiable subset of the dataset represented by the ReportName. A sessionId or CachedReportConfiguration id can be used here. If a sessionId is specified, Filter, Select, and OrderBy are applied to the data represented by the sessionId. Filter, Select, and OrderBy cannot be specified together with a CachedReportConfiguration id.
	SnapshotID *string `json:"snapshotId,omitempty"`
	// Status Status of the export job
	Status *DeviceManagementReportStatus `json:"status,omitempty"`
	// URL Temporary location of the exported report
	URL *string `json:"url,omitempty"`
}

// DeviceManagementIntegerSettingInstance A setting instance representing an integer value
type DeviceManagementIntegerSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementIntegerSettingInstance
	DeviceManagementSettingInstance
	// Value The integer value
	Value *int `json:"value,omitempty"`
}

// DeviceManagementIntent Entity that represents an intent to apply settings to a device
type DeviceManagementIntent struct {
	// Entity is the base model of DeviceManagementIntent
	Entity
	// Description The user given description
	Description *string `json:"description,omitempty"`
	// DisplayName The user given display name
	DisplayName *string `json:"displayName,omitempty"`
	// IsAssigned Signifies whether or not the intent is assigned to users
	IsAssigned *bool `json:"isAssigned,omitempty"`
	// LastModifiedDateTime When the intent was last modified
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs List of Scope Tags for this Entity instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// TemplateID The ID of the template this intent was created from (if any)
	TemplateID *string `json:"templateId,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementIntentAssignment `json:"assignments,omitempty"`
	// Categories undocumented
	Categories []DeviceManagementIntentSettingCategory `json:"categories,omitempty"`
	// DeviceSettingStateSummaries undocumented
	DeviceSettingStateSummaries []DeviceManagementIntentDeviceSettingStateSummary `json:"deviceSettingStateSummaries,omitempty"`
	// DeviceStates undocumented
	DeviceStates []DeviceManagementIntentDeviceState `json:"deviceStates,omitempty"`
	// DeviceStateSummary undocumented
	DeviceStateSummary *DeviceManagementIntentDeviceStateSummary `json:"deviceStateSummary,omitempty"`
	// Settings undocumented
	Settings []DeviceManagementSettingInstance `json:"settings,omitempty"`
	// UserStates undocumented
	UserStates []DeviceManagementIntentUserState `json:"userStates,omitempty"`
	// UserStateSummary undocumented
	UserStateSummary *DeviceManagementIntentUserStateSummary `json:"userStateSummary,omitempty"`
}

// DeviceManagementIntentAssignment Intent assignment entity
type DeviceManagementIntentAssignment struct {
	// Entity is the base model of DeviceManagementIntentAssignment
	Entity
	// Target The assignment target
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceManagementIntentDeviceSettingStateSummary Entity that represents device setting state summary for an intent
type DeviceManagementIntentDeviceSettingStateSummary struct {
	// Entity is the base model of DeviceManagementIntentDeviceSettingStateSummary
	Entity
	// CompliantCount Number of compliant devices
	CompliantCount *int `json:"compliantCount,omitempty"`
	// ConflictCount Number of devices in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// NonCompliantCount Number of non compliant devices
	NonCompliantCount *int `json:"nonCompliantCount,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// RemediatedCount Number of remediated devices
	RemediatedCount *int `json:"remediatedCount,omitempty"`
	// SettingName Name of a setting
	SettingName *string `json:"settingName,omitempty"`
}

// DeviceManagementIntentDeviceState Entity that represents device state for an intent
type DeviceManagementIntentDeviceState struct {
	// Entity is the base model of DeviceManagementIntentDeviceState
	Entity
	// DeviceDisplayName Device name that is being reported
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// DeviceID Device id that is being reported
	DeviceID *string `json:"deviceId,omitempty"`
	// LastReportedDateTime Last modified date time of an intent report
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// State Device state for an intent
	State *ComplianceStatus `json:"state,omitempty"`
	// UserName The user name that is being reported on a device
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName The user principal name that is being reported on a device
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceManagementIntentDeviceStateSummary Entity that represents device state summary for an intent
type DeviceManagementIntentDeviceStateSummary struct {
	// Entity is the base model of DeviceManagementIntentDeviceStateSummary
	Entity
	// ConflictCount Number of devices in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// NotApplicablePlatformCount Number of not applicable devices due to mismatch platform and policy
	NotApplicablePlatformCount *int `json:"notApplicablePlatformCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceManagementIntentSettingCategory Entity representing an intent setting category
type DeviceManagementIntentSettingCategory struct {
	// DeviceManagementSettingCategory is the base model of DeviceManagementIntentSettingCategory
	DeviceManagementSettingCategory
	// Settings undocumented
	Settings []DeviceManagementSettingInstance `json:"settings,omitempty"`
}

// DeviceManagementIntentSettingSecretConstraint Constraint indicating that this value is a secret and will be encrypted.
type DeviceManagementIntentSettingSecretConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementIntentSettingSecretConstraint
	DeviceManagementConstraint
}

// DeviceManagementIntentUserState Entity that represents user state for an intent
type DeviceManagementIntentUserState struct {
	// Entity is the base model of DeviceManagementIntentUserState
	Entity
	// DeviceCount Count of Devices that belongs to a user for an intent
	DeviceCount *int `json:"deviceCount,omitempty"`
	// LastReportedDateTime Last modified date time of an intent report
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// State User state for an intent
	State *ComplianceStatus `json:"state,omitempty"`
	// UserName The user name that is being reported on a device
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName The user principal name that is being reported on a device
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceManagementIntentUserStateSummary Entity that represents user state summary for an intent
type DeviceManagementIntentUserStateSummary struct {
	// Entity is the base model of DeviceManagementIntentUserStateSummary
	Entity
	// ConflictCount Number of users in conflict
	ConflictCount *int `json:"conflictCount,omitempty"`
	// ErrorCount Number of error users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed users
	FailedCount *int `json:"failedCount,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded users
	SuccessCount *int `json:"successCount,omitempty"`
}

// DeviceManagementPartner Entity which represents a connection to device management partner.
type DeviceManagementPartner struct {
	// Entity is the base model of DeviceManagementPartner
	Entity
	// DisplayName Partner display name
	DisplayName *string `json:"displayName,omitempty"`
	// GroupsRequiringPartnerEnrollment User groups that specifies whether enrollment is through partner.
	GroupsRequiringPartnerEnrollment []DeviceManagementPartnerAssignment `json:"groupsRequiringPartnerEnrollment,omitempty"`
	// IsConfigured Whether device management partner is configured or not
	IsConfigured *bool `json:"isConfigured,omitempty"`
	// LastHeartbeatDateTime Timestamp of last heartbeat after admin enabled option Connect to Device management Partner
	LastHeartbeatDateTime *time.Time `json:"lastHeartbeatDateTime,omitempty"`
	// PartnerAppType Partner App type
	PartnerAppType *DeviceManagementPartnerAppType `json:"partnerAppType,omitempty"`
	// PartnerState Partner state of this tenant
	PartnerState *DeviceManagementPartnerTenantState `json:"partnerState,omitempty"`
	// SingleTenantAppID Partner Single tenant App id
	SingleTenantAppID *string `json:"singleTenantAppId,omitempty"`
	// WhenPartnerDevicesWillBeMarkedAsNonCompliant DateTime in UTC when PartnerDevices will be marked as NonCompliant. This will become obselete soon.
	WhenPartnerDevicesWillBeMarkedAsNonCompliant *time.Time `json:"whenPartnerDevicesWillBeMarkedAsNonCompliant,omitempty"`
	// WhenPartnerDevicesWillBeMarkedAsNonCompliantDateTime DateTime in UTC when PartnerDevices will be marked as NonCompliant
	WhenPartnerDevicesWillBeMarkedAsNonCompliantDateTime *time.Time `json:"whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime,omitempty"`
	// WhenPartnerDevicesWillBeRemoved DateTime in UTC when PartnerDevices will be removed. This will become obselete soon.
	WhenPartnerDevicesWillBeRemoved *time.Time `json:"whenPartnerDevicesWillBeRemoved,omitempty"`
	// WhenPartnerDevicesWillBeRemovedDateTime DateTime in UTC when PartnerDevices will be removed
	WhenPartnerDevicesWillBeRemovedDateTime *time.Time `json:"whenPartnerDevicesWillBeRemovedDateTime,omitempty"`
}

// DeviceManagementPartnerAssignment User group targeting for Device Management Partner
type DeviceManagementPartnerAssignment struct {
	// Object is the base model of DeviceManagementPartnerAssignment
	Object
	// Target User groups targeting for devices to be enrolled through partner.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceManagementReportSchedule Entity representing a schedule for which reports are delivered
type DeviceManagementReportSchedule struct {
	// Entity is the base model of DeviceManagementReportSchedule
	Entity
	// Emails Emails to which the scheduled reports are delivered
	Emails []string `json:"emails,omitempty"`
	// EndDateTime Time that the delivery of the scheduled reports ends
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// Filter Filters applied on the report
	Filter *string `json:"filter,omitempty"`
	// Format Format of the scheduled report
	Format *DeviceManagementReportFileFormat `json:"format,omitempty"`
	// OrderBy Ordering of columns in the report
	OrderBy []string `json:"orderBy,omitempty"`
	// Recurrence Frequency of scheduled report delivery
	Recurrence *DeviceManagementScheduledReportRecurrence `json:"recurrence,omitempty"`
	// ReportName Name of the report
	ReportName *string `json:"reportName,omitempty"`
	// ReportScheduleName Name of the schedule
	ReportScheduleName *string `json:"reportScheduleName,omitempty"`
	// Select Columns selected from the report
	Select []string `json:"select,omitempty"`
	// StartDateTime Time that the delivery of the scheduled reports starts
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// Subject Subject of the scheduled reports that are delivered
	Subject *string `json:"subject,omitempty"`
	// UserID The Id of the User who created the report
	UserID *string `json:"userId,omitempty"`
}

// DeviceManagementReports Singleton entity that acts as a container for all reports functionality.
type DeviceManagementReports struct {
	// Entity is the base model of DeviceManagementReports
	Entity
	// CachedReportConfigurations undocumented
	CachedReportConfigurations []DeviceManagementCachedReportConfiguration `json:"cachedReportConfigurations,omitempty"`
	// ExportJobs undocumented
	ExportJobs []DeviceManagementExportJob `json:"exportJobs,omitempty"`
	// ReportSchedules undocumented
	ReportSchedules []DeviceManagementReportSchedule `json:"reportSchedules,omitempty"`
}

// DeviceManagementResourceAccessProfileAssignment Entity that describes tenant level settings for derived credentials
type DeviceManagementResourceAccessProfileAssignment struct {
	// Entity is the base model of DeviceManagementResourceAccessProfileAssignment
	Entity
	// Intent The assignment intent for the resource access profile.
	Intent *DeviceManagementResourceAccessProfileIntent `json:"intent,omitempty"`
	// SourceID The identifier of the source of the assignment.
	SourceID *string `json:"sourceId,omitempty"`
	// Target The assignment target for the resource access profile.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceManagementResourceAccessProfileBase Base Profile Type for Resource Access
type DeviceManagementResourceAccessProfileBase struct {
	// Entity is the base model of DeviceManagementResourceAccessProfileBase
	Entity
	// CreationDateTime DateTime profile was created
	CreationDateTime *time.Time `json:"creationDateTime,omitempty"`
	// Description Profile description
	Description *string `json:"description,omitempty"`
	// DisplayName Profile display name
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime DateTime profile was last modified
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs Scope Tags
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// Version Version of the profile
	Version *int `json:"version,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementResourceAccessProfileAssignment `json:"assignments,omitempty"`
}

// DeviceManagementReusablePolicySetting Graph model for a reusable setting
type DeviceManagementReusablePolicySetting struct {
	// Entity is the base model of DeviceManagementReusablePolicySetting
	Entity
	// CreatedDateTime reusable setting creation date and time. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description reusable setting description supplied by user.
	Description *string `json:"description,omitempty"`
	// DisplayName reusable setting display name supplied by user.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime date and time when reusable setting was last modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// ReferencingConfigurationPolicyCount count of configuration policies referencing the current reusable setting. Valid values 0 to 2147483647. This property is read-only.
	ReferencingConfigurationPolicyCount *int `json:"referencingConfigurationPolicyCount,omitempty"`
	// SettingDefinitionID setting definition id associated with this reusable setting.
	SettingDefinitionID *string `json:"settingDefinitionId,omitempty"`
	// SettingInstance reusable setting configuration instance
	SettingInstance *DeviceManagementConfigurationSettingInstance `json:"settingInstance,omitempty"`
	// Version version number for reusable setting. Valid values 0 to 2147483647. This property is read-only.
	Version *int `json:"version,omitempty"`
	// ReferencingConfigurationPolicies undocumented
	ReferencingConfigurationPolicies []DeviceManagementConfigurationPolicy `json:"referencingConfigurationPolicies,omitempty"`
}

// DeviceManagementScript Intune will provide customer the ability to run their Powershell scripts on the enrolled windows 10 Azure Active Directory joined devices. The script can be run once or periodically.
type DeviceManagementScript struct {
	// Entity is the base model of DeviceManagementScript
	Entity
	// CreatedDateTime The date and time the device management script was created. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Optional description for the device management script.
	Description *string `json:"description,omitempty"`
	// DisplayName Name of the device management script.
	DisplayName *string `json:"displayName,omitempty"`
	// EnforceSignatureCheck Indicate whether the script signature needs be checked.
	EnforceSignatureCheck *bool `json:"enforceSignatureCheck,omitempty"`
	// FileName Script file name.
	FileName *string `json:"fileName,omitempty"`
	// LastModifiedDateTime The date and time the device management script was last modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RoleScopeTagIDs List of Scope Tag IDs for this PowerShellScript instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// RunAs32Bit A value indicating whether the PowerShell script should run as 32-bit
	RunAs32Bit *bool `json:"runAs32Bit,omitempty"`
	// RunAsAccount Indicates the type of execution context.
	RunAsAccount *RunAsAccountType `json:"runAsAccount,omitempty"`
	// ScriptContent The script content.
	ScriptContent *Binary `json:"scriptContent,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementScriptAssignment `json:"assignments,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceManagementScriptDeviceState `json:"deviceRunStates,omitempty"`
	// GroupAssignments undocumented
	GroupAssignments []DeviceManagementScriptGroupAssignment `json:"groupAssignments,omitempty"`
	// RunSummary undocumented
	RunSummary *DeviceManagementScriptRunSummary `json:"runSummary,omitempty"`
	// UserRunStates undocumented
	UserRunStates []DeviceManagementScriptUserState `json:"userRunStates,omitempty"`
}

// DeviceManagementScriptAssignment Contains properties used to assign a device management script to a group.
type DeviceManagementScriptAssignment struct {
	// Entity is the base model of DeviceManagementScriptAssignment
	Entity
	// Target The Id of the Azure Active Directory group we are targeting the script to.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceManagementScriptDeviceState Contains properties for device run state of the device management script.
type DeviceManagementScriptDeviceState struct {
	// Entity is the base model of DeviceManagementScriptDeviceState
	Entity
	// ErrorCode Error code corresponding to erroneous execution of the device management script.
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description corresponding to erroneous execution of the device management script.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// LastStateUpdateDateTime Latest time the device management script executes.
	LastStateUpdateDateTime *time.Time `json:"lastStateUpdateDateTime,omitempty"`
	// ResultMessage Details of execution output.
	ResultMessage *string `json:"resultMessage,omitempty"`
	// RunState State of latest run of the device management script.
	RunState *RunState `json:"runState,omitempty"`
	// ManagedDevice undocumented
	ManagedDevice *ManagedDevice `json:"managedDevice,omitempty"`
}

// DeviceManagementScriptGroupAssignment Contains properties used to assign a device management script to a group.
type DeviceManagementScriptGroupAssignment struct {
	// Entity is the base model of DeviceManagementScriptGroupAssignment
	Entity
	// TargetGroupID The Id of the Azure Active Directory group we are targeting the script to.
	TargetGroupID *string `json:"targetGroupId,omitempty"`
}

// DeviceManagementScriptPolicySetItem A class containing the properties used for device management script PolicySetItem.
type DeviceManagementScriptPolicySetItem struct {
	// PolicySetItem is the base model of DeviceManagementScriptPolicySetItem
	PolicySetItem
}

// DeviceManagementScriptRunSummary Contains properties for the run summary of a device management script.
type DeviceManagementScriptRunSummary struct {
	// Entity is the base model of DeviceManagementScriptRunSummary
	Entity
	// ErrorDeviceCount Error device count.
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// ErrorUserCount Error user count.
	ErrorUserCount *int `json:"errorUserCount,omitempty"`
	// SuccessDeviceCount Success device count.
	SuccessDeviceCount *int `json:"successDeviceCount,omitempty"`
	// SuccessUserCount Success user count.
	SuccessUserCount *int `json:"successUserCount,omitempty"`
}

// DeviceManagementScriptUserState Contains properties for user run state of the device management script.
type DeviceManagementScriptUserState struct {
	// Entity is the base model of DeviceManagementScriptUserState
	Entity
	// ErrorDeviceCount Error device count for specific user.
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// SuccessDeviceCount Success device count for specific user.
	SuccessDeviceCount *int `json:"successDeviceCount,omitempty"`
	// UserPrincipalName User principle name of specific user.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceManagementScriptDeviceState `json:"deviceRunStates,omitempty"`
}

// DeviceManagementSettingAbstractImplementationConstraint Constraint that enforces an AbstractComplex type has or is set to a particular value
type DeviceManagementSettingAbstractImplementationConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingAbstractImplementationConstraint
	DeviceManagementConstraint
	// AllowedAbstractImplementationDefinitionIDs List of value which means not configured for the setting
	AllowedAbstractImplementationDefinitionIDs []string `json:"allowedAbstractImplementationDefinitionIds,omitempty"`
}

// DeviceManagementSettingAppConstraint Constraint enforcing the setting contains only vaild app types.
type DeviceManagementSettingAppConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingAppConstraint
	DeviceManagementConstraint
	// SupportedTypes Acceptable app types to allow for this setting
	SupportedTypes []string `json:"supportedTypes,omitempty"`
}

// DeviceManagementSettingBooleanConstraint Constraint the enforces a particular boolean value
type DeviceManagementSettingBooleanConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingBooleanConstraint
	DeviceManagementConstraint
	// Value The boolean value to compare against
	Value *bool `json:"value,omitempty"`
}

// DeviceManagementSettingCategory Entity representing a setting category
type DeviceManagementSettingCategory struct {
	// Entity is the base model of DeviceManagementSettingCategory
	Entity
	// DisplayName The category name
	DisplayName *string `json:"displayName,omitempty"`
	// HasRequiredSetting The category contains top level required setting
	HasRequiredSetting *bool `json:"hasRequiredSetting,omitempty"`
	// SettingDefinitions undocumented
	SettingDefinitions []DeviceManagementSettingDefinition `json:"settingDefinitions,omitempty"`
}

// DeviceManagementSettingCollectionConstraint Constraint that enforces the maximum number of elements a collection
type DeviceManagementSettingCollectionConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingCollectionConstraint
	DeviceManagementConstraint
	// MaximumLength The maximum number of elements in the collection
	MaximumLength *int `json:"maximumLength,omitempty"`
	// MinimumLength The minimum number of elements in the collection
	MinimumLength *int `json:"minimumLength,omitempty"`
}

// DeviceManagementSettingComparison Entity representing setting comparison result
type DeviceManagementSettingComparison struct {
	// Object is the base model of DeviceManagementSettingComparison
	Object
	// ComparisonResult Setting comparison result
	ComparisonResult *DeviceManagementComparisonResult `json:"comparisonResult,omitempty"`
	// CurrentValueJSON JSON representation of current intent (or) template setting's value
	CurrentValueJSON *string `json:"currentValueJson,omitempty"`
	// DefinitionID The ID of the setting definition for this instance
	DefinitionID *string `json:"definitionId,omitempty"`
	// DisplayName The setting's display name
	DisplayName *string `json:"displayName,omitempty"`
	// ID The setting ID
	ID *string `json:"id,omitempty"`
	// NewValueJSON JSON representation of new template setting's value
	NewValueJSON *string `json:"newValueJson,omitempty"`
}

// DeviceManagementSettingDefinition Entity representing the defintion for a given setting
type DeviceManagementSettingDefinition struct {
	// Entity is the base model of DeviceManagementSettingDefinition
	Entity
	// Constraints Collection of constraints for the setting value
	Constraints []DeviceManagementConstraint `json:"constraints,omitempty"`
	// Dependencies Collection of dependencies on other settings
	Dependencies []DeviceManagementSettingDependency `json:"dependencies,omitempty"`
	// Description The setting's description
	Description *string `json:"description,omitempty"`
	// DisplayName The setting's display name
	DisplayName *string `json:"displayName,omitempty"`
	// DocumentationURL Url to setting documentation
	DocumentationURL *string `json:"documentationUrl,omitempty"`
	// HeaderSubtitle subtitle of the setting header for more details about the category/section
	HeaderSubtitle *string `json:"headerSubtitle,omitempty"`
	// HeaderTitle title of the setting header represents a category/section of a setting/settings
	HeaderTitle *string `json:"headerTitle,omitempty"`
	// IsTopLevel If the setting is top level, it can be configured without the need to be wrapped in a collection or complex setting
	IsTopLevel *bool `json:"isTopLevel,omitempty"`
	// Keywords Keywords associated with the setting
	Keywords []string `json:"keywords,omitempty"`
	// PlaceholderText Placeholder text as an example of valid input
	PlaceholderText *string `json:"placeholderText,omitempty"`
	// ValueType The data type of the value
	ValueType *DeviceManangementIntentValueType `json:"valueType,omitempty"`
}

// DeviceManagementSettingDependency Dependency information for a setting
type DeviceManagementSettingDependency struct {
	// Object is the base model of DeviceManagementSettingDependency
	Object
	// Constraints Collection of constraints for the dependency setting value
	Constraints []DeviceManagementConstraint `json:"constraints,omitempty"`
	// DefinitionID The setting definition ID of the setting depended on
	DefinitionID *string `json:"definitionId,omitempty"`
}

// DeviceManagementSettingEnrollmentTypeConstraint Constraint that enforces the enrollment types applied to a setting
type DeviceManagementSettingEnrollmentTypeConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingEnrollmentTypeConstraint
	DeviceManagementConstraint
	// EnrollmentTypes List of enrollment types
	EnrollmentTypes []string `json:"enrollmentTypes,omitempty"`
}

// DeviceManagementSettingFileConstraint Constraint enforcing the file extension is acceptable for a given setting
type DeviceManagementSettingFileConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingFileConstraint
	DeviceManagementConstraint
	// SupportedExtensions Acceptable file extensions to upload for this setting
	SupportedExtensions []string `json:"supportedExtensions,omitempty"`
}

// DeviceManagementSettingInstance Base type for a setting instance
type DeviceManagementSettingInstance struct {
	// Entity is the base model of DeviceManagementSettingInstance
	Entity
	// DefinitionID The ID of the setting definition for this instance
	DefinitionID *string `json:"definitionId,omitempty"`
	// ValueJSON JSON representation of the value
	ValueJSON *string `json:"valueJson,omitempty"`
}

// DeviceManagementSettingIntegerConstraint Constraint enforcing the permitted value range for an integer setting
type DeviceManagementSettingIntegerConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingIntegerConstraint
	DeviceManagementConstraint
	// MaximumValue The maximum permitted value
	MaximumValue *int `json:"maximumValue,omitempty"`
	// MinimumValue The minimum permitted value
	MinimumValue *int `json:"minimumValue,omitempty"`
}

// DeviceManagementSettingProfileConstraint Constraint enforcing a given profile metadata
type DeviceManagementSettingProfileConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingProfileConstraint
	DeviceManagementConstraint
	// Source The source of the entity
	Source *string `json:"source,omitempty"`
	// Types A collection of types this entity carries
	Types []string `json:"types,omitempty"`
}

// DeviceManagementSettingRegexConstraint Constraint enforcing the setting matches against a given RegEx pattern
type DeviceManagementSettingRegexConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingRegexConstraint
	DeviceManagementConstraint
	// Regex The RegEx pattern to match against
	Regex *string `json:"regex,omitempty"`
}

// DeviceManagementSettingRequiredConstraint Constraint that enforces a particular required setting that is not null/undefined/empty string/not configured
type DeviceManagementSettingRequiredConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingRequiredConstraint
	DeviceManagementConstraint
	// NotConfiguredValue List of value which means not configured for the setting
	NotConfiguredValue *string `json:"notConfiguredValue,omitempty"`
}

// DeviceManagementSettingSddlConstraint Constraint enforcing the setting is well formed SDDL
type DeviceManagementSettingSddlConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingSddlConstraint
	DeviceManagementConstraint
}

// DeviceManagementSettingStringLengthConstraint Constraint enforcing a given string length range
type DeviceManagementSettingStringLengthConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingStringLengthConstraint
	DeviceManagementConstraint
	// MaximumLength The maximum permitted string length
	MaximumLength *int `json:"maximumLength,omitempty"`
	// MinimumLength The minimum permitted string length
	MinimumLength *int `json:"minimumLength,omitempty"`
}

// DeviceManagementSettingXMLConstraint Constraint enforcing the setting is well formed XML
type DeviceManagementSettingXMLConstraint struct {
	// DeviceManagementConstraint is the base model of DeviceManagementSettingXMLConstraint
	DeviceManagementConstraint
}

// DeviceManagementSettings undocumented
type DeviceManagementSettings struct {
	// Object is the base model of DeviceManagementSettings
	Object
	// AndroidDeviceAdministratorEnrollmentEnabled The property to determine if Android device administrator enrollment is enabled for this account.
	AndroidDeviceAdministratorEnrollmentEnabled *bool `json:"androidDeviceAdministratorEnrollmentEnabled,omitempty"`
	// DerivedCredentialProvider The Derived Credential Provider to use for this account.
	DerivedCredentialProvider *DerivedCredentialProviderType `json:"derivedCredentialProvider,omitempty"`
	// DerivedCredentialURL The Derived Credential Provider self-service URI.
	DerivedCredentialURL *string `json:"derivedCredentialUrl,omitempty"`
	// DeviceComplianceCheckinThresholdDays The number of days a device is allowed to go without checking in to remain compliant.
	DeviceComplianceCheckinThresholdDays *int `json:"deviceComplianceCheckinThresholdDays,omitempty"`
	// DeviceInactivityBeforeRetirementInDay When the device does not check in for specified number of days, the company data might be removed and the device will not be under management. Valid values 30 to 270
	DeviceInactivityBeforeRetirementInDay *int `json:"deviceInactivityBeforeRetirementInDay,omitempty"`
	// EnableLogCollection Determines whether the log collection feature should be available for use.
	EnableLogCollection *bool `json:"enableLogCollection,omitempty"`
	// EnhancedJailBreak Is feature enabled or not for enhanced jailbreak detection.
	EnhancedJailBreak *bool `json:"enhancedJailBreak,omitempty"`
	// IgnoreDevicesForUnsupportedSettingsEnabled The property to determine whether to ignore unsupported compliance settings on certian models of devices.
	IgnoreDevicesForUnsupportedSettingsEnabled *bool `json:"ignoreDevicesForUnsupportedSettingsEnabled,omitempty"`
	// IsScheduledActionEnabled Is feature enabled or not for scheduled action for rule.
	IsScheduledActionEnabled *bool `json:"isScheduledActionEnabled,omitempty"`
	// SecureByDefault Device should be noncompliant when there is no compliance policy targeted when this is true
	SecureByDefault *bool `json:"secureByDefault,omitempty"`
}

// DeviceManagementStringSettingInstance A setting instance representing a string value
type DeviceManagementStringSettingInstance struct {
	// DeviceManagementSettingInstance is the base model of DeviceManagementStringSettingInstance
	DeviceManagementSettingInstance
	// Value The string value
	Value *string `json:"value,omitempty"`
}

// DeviceManagementTemplate Entity that represents a defined collection of device settings
type DeviceManagementTemplate struct {
	// Entity is the base model of DeviceManagementTemplate
	Entity
	// Description The template's description
	Description *string `json:"description,omitempty"`
	// DisplayName The template's display name
	DisplayName *string `json:"displayName,omitempty"`
	// IntentCount Number of Intents created from this template.
	IntentCount *int `json:"intentCount,omitempty"`
	// IsDeprecated The template is deprecated or not. Intents cannot be created from a deprecated template.
	IsDeprecated *bool `json:"isDeprecated,omitempty"`
	// PlatformType The template's platform.
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// PublishedDateTime When the template was published
	PublishedDateTime *time.Time `json:"publishedDateTime,omitempty"`
	// TemplateSubtype The template's subtype.
	TemplateSubtype *DeviceManagementTemplateSubtype `json:"templateSubtype,omitempty"`
	// TemplateType The template's type.
	TemplateType *DeviceManagementTemplateType `json:"templateType,omitempty"`
	// VersionInfo The template's version information
	VersionInfo *string `json:"versionInfo,omitempty"`
	// Categories undocumented
	Categories []DeviceManagementTemplateSettingCategory `json:"categories,omitempty"`
	// MigratableTo undocumented
	MigratableTo []DeviceManagementTemplate `json:"migratableTo,omitempty"`
	// Settings undocumented
	Settings []DeviceManagementSettingInstance `json:"settings,omitempty"`
}

// DeviceManagementTemplateSettingCategory Entity representing a template setting category
type DeviceManagementTemplateSettingCategory struct {
	// DeviceManagementSettingCategory is the base model of DeviceManagementTemplateSettingCategory
	DeviceManagementSettingCategory
	// RecommendedSettings undocumented
	RecommendedSettings []DeviceManagementSettingInstance `json:"recommendedSettings,omitempty"`
}

// DeviceManagementTroubleshootingErrorDetails Object containing detailed information about the error and its remediation.
type DeviceManagementTroubleshootingErrorDetails struct {
	// Object is the base model of DeviceManagementTroubleshootingErrorDetails
	Object
	// Context undocumented
	Context *string `json:"context,omitempty"`
	// Failure undocumented
	Failure *string `json:"failure,omitempty"`
	// FailureDetails The detailed description of what went wrong.
	FailureDetails *string `json:"failureDetails,omitempty"`
	// Remediation The detailed description of how to remediate this issue.
	Remediation *string `json:"remediation,omitempty"`
	// Resources Links to helpful documentation about this failure.
	Resources []DeviceManagementTroubleshootingErrorResource `json:"resources,omitempty"`
}

// DeviceManagementTroubleshootingErrorResource Object representing a link to troubleshooting information, the link could be to the Azure Portal or a Microsoft doc.
type DeviceManagementTroubleshootingErrorResource struct {
	// Object is the base model of DeviceManagementTroubleshootingErrorResource
	Object
	// Link The link to the web resource. Can contain any of the following formatters: {{UPN}}, {{DeviceGUID}}, {{UserGUID}}
	Link *string `json:"link,omitempty"`
	// Text undocumented
	Text *string `json:"text,omitempty"`
}

// DeviceManagementTroubleshootingEvent Event representing an general failure.
type DeviceManagementTroubleshootingEvent struct {
	// Entity is the base model of DeviceManagementTroubleshootingEvent
	Entity
	// AdditionalInformation A set of string key and string value pairs which provides additional information on the Troubleshooting event
	AdditionalInformation []KeyValuePair `json:"additionalInformation,omitempty"`
	// CorrelationID Id used for tracing the failure in the service.
	CorrelationID *string `json:"correlationId,omitempty"`
	// EventDateTime Time when the event occurred .
	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
	// EventName Event Name corresponding to the Troubleshooting Event. It is an Optional field
	EventName *string `json:"eventName,omitempty"`
	// TroubleshootingErrorDetails Object containing detailed information about the error and its remediation.
	TroubleshootingErrorDetails *DeviceManagementTroubleshootingErrorDetails `json:"troubleshootingErrorDetails,omitempty"`
}

// DeviceManagementUserRightsLocalUserOrGroup Represents information for a local user or group used for user rights setting.
type DeviceManagementUserRightsLocalUserOrGroup struct {
	// Object is the base model of DeviceManagementUserRightsLocalUserOrGroup
	Object
	// Description Admin’s description of this local user or group.
	Description *string `json:"description,omitempty"`
	// Name The name of this local user or group.
	Name *string `json:"name,omitempty"`
	// SecurityIdentifier The security identifier of this local user or group (e.g. *S-1-5-32-544).
	SecurityIdentifier *string `json:"securityIdentifier,omitempty"`
}

// DeviceManagementUserRightsSetting Represents a user rights setting.
type DeviceManagementUserRightsSetting struct {
	// Object is the base model of DeviceManagementUserRightsSetting
	Object
	// LocalUsersOrGroups Representing a collection of local users or groups which will be set on device if the state of this setting is Allowed. This collection can contain a maximum of 500 elements.
	LocalUsersOrGroups []DeviceManagementUserRightsLocalUserOrGroup `json:"localUsersOrGroups,omitempty"`
	// State Representing the current state of this user rights setting
	State *StateManagementSetting `json:"state,omitempty"`
}

// DeviceOperatingSystemSummary Device operating system summary.
type DeviceOperatingSystemSummary struct {
	// Object is the base model of DeviceOperatingSystemSummary
	Object
	// AndroidCorporateWorkProfileCount The count of Corporate work profile Android devices. Also known as Corporate Owned Personally Enabled (COPE). Valid values -1 to 2147483647
	AndroidCorporateWorkProfileCount *int `json:"androidCorporateWorkProfileCount,omitempty"`
	// AndroidCount Number of android device count.
	AndroidCount *int `json:"androidCount,omitempty"`
	// AndroidDedicatedCount Number of dedicated Android devices.
	AndroidDedicatedCount *int `json:"androidDedicatedCount,omitempty"`
	// AndroidDeviceAdminCount Number of device admin Android devices.
	AndroidDeviceAdminCount *int `json:"androidDeviceAdminCount,omitempty"`
	// AndroidFullyManagedCount Number of fully managed Android devices.
	AndroidFullyManagedCount *int `json:"androidFullyManagedCount,omitempty"`
	// AndroidWorkProfileCount Number of work profile Android devices.
	AndroidWorkProfileCount *int `json:"androidWorkProfileCount,omitempty"`
	// AospUserAssociatedCount Number of AOSP user-associated Android devices. Valid values 0 to 2147483647
	AospUserAssociatedCount *int `json:"aospUserAssociatedCount,omitempty"`
	// AospUserlessCount Number of AOSP userless Android devices. Valid values 0 to 2147483647
	AospUserlessCount *int `json:"aospUserlessCount,omitempty"`
	// ChromeOSCount Number of Chrome OS devices. Valid values 0 to 2147483647
	ChromeOSCount *int `json:"chromeOSCount,omitempty"`
	// ConfigMgrDeviceCount Number of ConfigMgr managed devices.
	ConfigMgrDeviceCount *int `json:"configMgrDeviceCount,omitempty"`
	// IOSCount Number of iOS device count.
	IOSCount *int `json:"iosCount,omitempty"`
	// LinuxCount Number of Linux OS devices. Valid values 0 to 2147483647
	LinuxCount *int `json:"linuxCount,omitempty"`
	// MacOSCount Number of Mac OS X device count.
	MacOSCount *int `json:"macOSCount,omitempty"`
	// UnknownCount Number of unknown device count.
	UnknownCount *int `json:"unknownCount,omitempty"`
	// WindowsCount Number of Windows device count.
	WindowsCount *int `json:"windowsCount,omitempty"`
	// WindowsMobileCount Number of Windows mobile device count.
	WindowsMobileCount *int `json:"windowsMobileCount,omitempty"`
}

// DeviceProtectionOverview Hardware information of a given device.
type DeviceProtectionOverview struct {
	// Object is the base model of DeviceProtectionOverview
	Object
	// CleanDeviceCount Clean device count.
	CleanDeviceCount *int `json:"cleanDeviceCount,omitempty"`
	// CriticalFailuresDeviceCount Critical failures device count.
	CriticalFailuresDeviceCount *int `json:"criticalFailuresDeviceCount,omitempty"`
	// InactiveThreatAgentDeviceCount Device with inactive threat agent count
	InactiveThreatAgentDeviceCount *int `json:"inactiveThreatAgentDeviceCount,omitempty"`
	// PendingFullScanDeviceCount Pending full scan device count.
	PendingFullScanDeviceCount *int `json:"pendingFullScanDeviceCount,omitempty"`
	// PendingManualStepsDeviceCount Pending manual steps device count.
	PendingManualStepsDeviceCount *int `json:"pendingManualStepsDeviceCount,omitempty"`
	// PendingOfflineScanDeviceCount Pending offline scan device count.
	PendingOfflineScanDeviceCount *int `json:"pendingOfflineScanDeviceCount,omitempty"`
	// PendingQuickScanDeviceCount Pending quick scan device count. Valid values -2147483648 to 2147483647
	PendingQuickScanDeviceCount *int `json:"pendingQuickScanDeviceCount,omitempty"`
	// PendingRestartDeviceCount Pending restart device count.
	PendingRestartDeviceCount *int `json:"pendingRestartDeviceCount,omitempty"`
	// PendingSignatureUpdateDeviceCount Device with old signature count.
	PendingSignatureUpdateDeviceCount *int `json:"pendingSignatureUpdateDeviceCount,omitempty"`
	// TotalReportedDeviceCount Total device count.
	TotalReportedDeviceCount *int `json:"totalReportedDeviceCount,omitempty"`
	// UnknownStateThreatAgentDeviceCount Device with threat agent state as unknown count.
	UnknownStateThreatAgentDeviceCount *int `json:"unknownStateThreatAgentDeviceCount,omitempty"`
}

// DeviceRestrictionAction undocumented
type DeviceRestrictionAction struct {
	// DlpActionInfo is the base model of DeviceRestrictionAction
	DlpActionInfo
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// RestrictionAction undocumented
	RestrictionAction *RestrictionAction `json:"restrictionAction,omitempty"`
	// Triggers undocumented
	Triggers []RestrictionTrigger `json:"triggers,omitempty"`
}

// DeviceSetupConfiguration This is the base class for Setup Configuration. Setup configurations are platform specific and individual per-platform setup configurations inherit from here.
type DeviceSetupConfiguration struct {
	// Entity is the base model of DeviceSetupConfiguration
	Entity
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
}

// DeviceShellScript Intune will provide customer the ability to run their Shell scripts on the enrolled Mac OS devices. The script can be run once or periodically.
type DeviceShellScript struct {
	// Entity is the base model of DeviceShellScript
	Entity
	// BlockExecutionNotifications Does not notify the user a script is being executed
	BlockExecutionNotifications *bool `json:"blockExecutionNotifications,omitempty"`
	// CreatedDateTime The date and time the device management script was created. This property is read-only.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Optional description for the device management script.
	Description *string `json:"description,omitempty"`
	// DisplayName Name of the device management script.
	DisplayName *string `json:"displayName,omitempty"`
	// ExecutionFrequency The interval for script to run. If not defined the script will run once
	ExecutionFrequency *Duration `json:"executionFrequency,omitempty"`
	// FileName Script file name.
	FileName *string `json:"fileName,omitempty"`
	// LastModifiedDateTime The date and time the device management script was last modified. This property is read-only.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// RetryCount Number of times for the script to be retried if it fails
	RetryCount *int `json:"retryCount,omitempty"`
	// RoleScopeTagIDs List of Scope Tag IDs for this PowerShellScript instance.
	RoleScopeTagIDs []string `json:"roleScopeTagIds,omitempty"`
	// RunAsAccount Indicates the type of execution context.
	RunAsAccount *RunAsAccountType `json:"runAsAccount,omitempty"`
	// ScriptContent The script content.
	ScriptContent *Binary `json:"scriptContent,omitempty"`
	// Assignments undocumented
	Assignments []DeviceManagementScriptAssignment `json:"assignments,omitempty"`
	// DeviceRunStates undocumented
	DeviceRunStates []DeviceManagementScriptDeviceState `json:"deviceRunStates,omitempty"`
	// GroupAssignments undocumented
	GroupAssignments []DeviceManagementScriptGroupAssignment `json:"groupAssignments,omitempty"`
	// RunSummary undocumented
	RunSummary *DeviceManagementScriptRunSummary `json:"runSummary,omitempty"`
	// UserRunStates undocumented
	UserRunStates []DeviceManagementScriptUserState `json:"userRunStates,omitempty"`
}
